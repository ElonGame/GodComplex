(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    212886,       4294]
NotebookOptionsPosition[    210512,       4210]
NotebookOutlinePosition[    210892,       4226]
CellTagsIndexPosition[    210849,       4223]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pre-Computing the BRDF Integral", "Section",
 CellChangeTimes->{{3.630933569496993*^9, 3.6309335892291217`*^9}, 
   3.6309337537325306`*^9}],

Cell[TextData[{
 "We need to find a way to approximate the lighting integral for the specular \
part of our area light.\nThe integral writes as:\[LineSeparator]\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"L", "(", 
     SubscriptBox["\[Omega]", "o"], ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Integral]", "\[CapitalOmega]"], 
     RowBox[{
      RowBox[{"L", "(", 
       SubscriptBox["\[Omega]", "i"], ")"}], " ", 
      RowBox[{
       SubscriptBox["f", "r"], "(", 
       RowBox[{
        SubscriptBox["\[Omega]", "o"], ",", 
        SubscriptBox["\[Omega]", "i"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
      SubscriptBox["d\[Omega]", "i"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\n\[CapitalOmega] is the solid angle covered by the upper hemisphere \
above the surface.\n\nWe proceed in the same way as ",
 ButtonBox["http://blog.selfshadow.com/publications/s2013-shading-course/\
karis/s2013_pbs_epic _notes _v2.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.selfshadow.com/publications/s2013-shading-course/karis/\
s2013_pbs_epic_notes_v2.pdf"], None},
  ButtonNote->
   "http://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_\
pbs_epic_notes_v2.pdf"],
 " to separate the integral in several parts:"
}], "Text",
 CellChangeTimes->{{3.6309337426758986`*^9, 3.630933760571922*^9}, {
  3.630934147907076*^9, 3.6309341547534676`*^9}, {3.6309342549691997`*^9, 
  3.630934462711082*^9}, {3.6309349122367935`*^9, 3.630935015419695*^9}, {
  3.6309363081386347`*^9, 3.6309363398424473`*^9}}],

Cell[CellGroupData[{

Cell["Splitting the integral", "Subsubsection",
 CellChangeTimes->{{3.6309349887941723`*^9, 3.630935010315403*^9}, {
  3.6309361881867733`*^9, 3.6309361890428224`*^9}}],

Cell[TextData[{
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"L", "(", 
     SubscriptBox["\[Omega]", "o"], ")"}], "\[TildeEqual]", " ", 
    RowBox[{
     SubscriptBox["\[Integral]", "\[CapitalOmega]"], 
     RowBox[{
      RowBox[{"L", "(", 
       RowBox[{
        SubscriptBox["\[Omega]", "i"], ",", "\[Rho]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], " ", 
      SubscriptBox["d\[Omega]", "i"], "  ", 
      RowBox[{
       SubscriptBox["\[Integral]", "\[CapitalOmega]"], " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["f", "r"], "(", 
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ",", 
          SubscriptBox["\[Omega]", "i"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
        SubscriptBox["d\[Omega]", "i"]}]}]}]}]}], TraditionalForm]],
  FontWeight->"Plain"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Integral]", "\[CapitalOmega]"], 
    RowBox[{
     RowBox[{"L", "'"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Omega]", "i"], ",", "\[Rho]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], " ", 
     SubscriptBox["d\[Omega]", "i"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  represents the pre-filtered source of radiance. It could be an env-map in \
the case of IBL, or our area light in this case.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Integral]", "\[CapitalOmega]"], " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "r"], "(", 
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ",", 
       SubscriptBox["\[Omega]", "i"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
     SubscriptBox["d\[Omega]", "i"]}]}], TraditionalForm]],
  FontWeight->"Plain"],
 " represents the BRDF integral as if lit by a uniform source of radiance (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"L", "(", 
     SubscriptBox["\[Omega]", "i"], ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")."
}], "Text",
 CellChangeTimes->{{3.6309350176368217`*^9, 3.63093529838988*^9}, {
   3.630935877861024*^9, 3.6309360230133257`*^9}, {3.6309361230250463`*^9, 
   3.6309362204276175`*^9}, 3.6309363064105353`*^9, {3.6309363593235617`*^9, 
   3.6309363763675365`*^9}, {3.6309364367409897`*^9, 3.630936507713049*^9}, {
   3.6309389672247252`*^9, 3.6309389694798546`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRDF integral", "Subsubsection",
 CellChangeTimes->{{3.630936204094683*^9, 3.630936233962392*^9}}],

Cell[TextData[{
 "Here, we\[CloseCurlyQuote] re going to concentrate on the BRDF integral.\n\
Assuming the BRDF ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "r"], "(", 
    RowBox[{
     SubscriptBox["\[Omega]", "o"], ",", 
     SubscriptBox["\[Omega]", "i"]}], ")"}], TraditionalForm]],
  FontWeight->"Plain"],
 " is our Ward-D\[UDoubleDot]r model, coupled with Fresnel, we obtain:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     SubscriptBox["\[Omega]", "o"], ")"}], "\[TildeEqual]", " ", 
    RowBox[{
     SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
     RowBox[{
      RowBox[{"F", "(", 
       RowBox[{
        SubscriptBox["\[Omega]", "o"], ",", 
        SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], " ", 
      RowBox[{"D", "(", 
       RowBox[{
        SubscriptBox["\[Omega]", "o"], ",", 
        SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
      SubscriptBox["d\[Omega]", "i"]}]}]}], TraditionalForm]],
  FontWeight->"Plain"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "(", 
    RowBox[{
     SubscriptBox["\[Omega]", "o"], ",", 
     SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the Fresnel term (note that we\[CloseCurlyQuote]ll use the Schlick' s \
fresnel approximation, not our complex fresnel otherwise the integral would \
be more difficult to separate).\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "(", 
    RowBox[{
     SubscriptBox["\[Omega]", "o"], ",", 
     SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], TraditionalForm]]],
 " is the Normal Distribution Function of the micro-facet model.\
\[LineSeparator]There is no masking/shadowing term as it is already accounted \
for by the Ward-D\[UDoubleDot]r NDF.\n\nAssuming the Schlick fresnel term is:\
\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "schlick"], "(", 
     RowBox[{
      SubscriptBox["\[Omega]", "o"], ",", "h"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["F", "0"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["F", "0"]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"]}]}], " ", 
     "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"]}], 
        ")"}]}], " ", "+", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"], " "}]}]}],
    TraditionalForm]],
  FontWeight->"Plain"],
 "\n\nWe can further split the integral into 2 parts:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     SubscriptBox["\[Omega]", "o"], ")"}], "\[TildeEqual]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["F", "0"], 
      RowBox[{
       SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"]}], 
         ")"}], 
        RowBox[{"D", "(", 
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ",", 
          SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
        SubscriptBox["d\[Omega]", "i"]}]}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"], 
       RowBox[{"D", "(", 
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ",", 
         SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
       SubscriptBox["d\[Omega]", "i"]}]}]}]}], TraditionalForm]],
  FontWeight->"Plain"],
 "\n\n",
 StyleBox["Ignoring anisotropy",
  FontVariations->{"Underline"->True}],
 ", we have:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", "(", 
     RowBox[{
      SubscriptBox["\[Omega]", "o"], ",", 
      SubscriptBox["\[Omega]", "i"], ",", "n", ",", "\[Alpha]"}], ")"}], " ", 
    "=", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], 
      SuperscriptBox["\[Pi]\[Alpha]", "2"]], 
     SuperscriptBox["e", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["tan", "2"], " ", 
         SubscriptBox["\[CapitalTheta]", "h"]}], 
        SuperscriptBox["\[Alpha]", "2"]]}]], " ", "2", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"cos", " ", 
         SubscriptBox["\[CapitalTheta]", "l"], " ", "cos", " ", 
         SubscriptBox["\[CapitalTheta]", "v"]}], " ", "+", 
        RowBox[{"sin", " ", 
         SubscriptBox["\[CapitalTheta]", "l"], " ", "sin", " ", 
         SubscriptBox["\[CapitalTheta]", "v"], " ", 
         RowBox[{"cos", "(", " ", 
          RowBox[{
           SubscriptBox["\[CapitalPhi]", "v"], "-", 
           SubscriptBox["\[CapitalPhi]", "l"]}], ")"}]}]}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cos", " ", 
          SubscriptBox["\[CapitalTheta]", "l"]}], " ", "+", " ", 
         RowBox[{"cos", " ", 
          SubscriptBox["\[CapitalTheta]", "v"]}]}], ")"}], "4"]], " "}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nOr:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", "(", 
     RowBox[{
      SubscriptBox["\[Omega]", "o"], ",", 
      SubscriptBox["\[Omega]", "i"], ",", "n", ",", "\[Alpha]"}], ")"}], " ", 
    "=", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], 
      SuperscriptBox["\[Pi]\[Alpha]", "2"]], 
     SuperscriptBox["e", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["tan", "2"], " ", 
         SubscriptBox["\[CapitalTheta]", "h"]}], 
        SuperscriptBox["\[Alpha]", "2"]]}]], " ", 
     FractionBox[
      RowBox[{
       OverscriptBox["h", "^"], ".", 
       OverscriptBox["h", "^"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["h", "^"], ".", "n"}], ")"}], "4"]]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["h", "^"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Omega]", "o"], " ", "+", 
     SubscriptBox["\[Omega]", "i"]}]}], TraditionalForm]]],
 "  (non-normalized!)\n\t\nThis gives us:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     RowBox[{
      SubscriptBox["\[Omega]", "o"], ",", "\[Alpha]"}], ")"}], 
    "\[TildeEqual]", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], 
      SuperscriptBox["\[Pi]\[Alpha]", "2"]], "[", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], 
       RowBox[{
        SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"]}], 
          ")"}], 
         SuperscriptBox["e", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["tan", "2"], " ", 
             SubscriptBox["\[CapitalTheta]", "h"]}], 
            SuperscriptBox["\[Alpha]", "2"]]}]], " ", 
         FractionBox[
          RowBox[{
           OverscriptBox["h", "^"], ".", 
           OverscriptBox["h", "^"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             OverscriptBox["h", "^"], ".", "n"}], ")"}], "4"]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
         SubscriptBox["d\[Omega]", "i"]}]}]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "h"}]}], ")"}], "5"], 
        SuperscriptBox["e", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["tan", "2"], " ", 
            SubscriptBox["\[CapitalTheta]", "h"]}], 
           SuperscriptBox["\[Alpha]", "2"]]}]], " ", 
        FractionBox[
         RowBox[{
          OverscriptBox["h", "^"], ".", 
          OverscriptBox["h", "^"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            OverscriptBox["h", "^"], ".", "n"}], ")"}], "4"]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "i"], ".", "n"}], ")"}], 
        SubscriptBox["d\[Omega]", "i"]}]}]}], "]"}]}], TraditionalForm]],
  FontWeight->"Plain"],
 "\n\t\n",
 StyleBox["\t",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "\[TildeEqual]", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], "2"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], " ", 
       RowBox[{"A", "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], 
        ")"}]}], " ", "+", 
      RowBox[{"B", "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], 
       ")"}]}], "]"}]}], TraditionalForm]],
  FontWeight->"Plain",
  FontColor->GrayLevel[0],
  Background->None],
 StyleBox["\n\nWhere:\n\t",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["\[Alpha]", "2"]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       FractionBox["\[Pi]", "2"]], "  ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"]}], 
        ")"}], 
       SuperscriptBox["e", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["tan", "2"], " ", 
           SubscriptBox["\[CapitalTheta]", "h"]}], 
          SuperscriptBox["\[Alpha]", "2"]]}]], 
       FractionBox[
        RowBox[{
         OverscriptBox["h", "^"], ".", 
         OverscriptBox["h", "^"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           OverscriptBox["h", "^"], ".", "n"}], ")"}], "4"]], "sin", " ", 
       "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->GrayLevel[0],
  Background->None],
 StyleBox["\n\t",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"B", "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["\[Alpha]", "2"]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       FractionBox["\[Pi]", "2"]], "  ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"], 
       SuperscriptBox["e", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["tan", "2"], " ", 
           SubscriptBox["\[CapitalTheta]", "h"]}], 
          SuperscriptBox["\[Alpha]", "2"]]}]], " ", 
       FractionBox[
        RowBox[{
         OverscriptBox["h", "^"], ".", 
         OverscriptBox["h", "^"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           OverscriptBox["h", "^"], ".", "n"}], ")"}], "4"]], "sin", " ", 
       "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}]}], TraditionalForm]],
  FontWeight->"Plain",
  FontColor->GrayLevel[0],
  Background->None],
 StyleBox["\n\nBoth A and B are bounded in [0,1] because the integral of BRDF \
is \[LessEqual] 1, as shown by D\[UDoubleDot]r in his paper.\n",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6309362221187143`*^9, 3.63093630385839*^9}, 
   3.630936361299675*^9, {3.63093639688171*^9, 3.630936414325708*^9}, {
   3.630936445329481*^9, 3.630936445329481*^9}, {3.630936526188106*^9, 
   3.630936568340517*^9}, {3.6309366144861565`*^9, 3.630936984038294*^9}, {
   3.630938263365467*^9, 3.6309382649895597`*^9}, {3.630938535060007*^9, 
   3.63093862165296*^9}, {3.6309390045038576`*^9, 3.6309391201734734`*^9}, {
   3.6309391770427265`*^9, 3.630939243180509*^9}, {3.6309392915812774`*^9, 
   3.630939619455031*^9}, {3.630939716355573*^9, 3.6309399469347615`*^9}, {
   3.630939978888589*^9, 3.6309401239078836`*^9}, {3.6309411069141083`*^9, 
   3.630941142348135*^9}, {3.630941209081952*^9, 3.630941286089357*^9}, {
   3.630941334039099*^9, 3.6309413631687655`*^9}, {3.6309414056871977`*^9, 
   3.6309414064952435`*^9}, {3.630941467079709*^9, 3.630941798400659*^9}, {
   3.630946392124405*^9, 3.630946392508427*^9}, {3.6309464587552166`*^9, 
   3.6309465437280765`*^9}, {3.6309466367593975`*^9, 3.63094670918254*^9}, {
   3.63094675515617*^9, 3.6309468276823177`*^9}, {3.6309469296741514`*^9, 
   3.630947068943117*^9}, {3.6309471456555047`*^9, 3.6309471851907663`*^9}, {
   3.630947263457243*^9, 3.630947296119111*^9}, {3.631020593406476*^9, 
   3.6310206818215327`*^9}, {3.6310207156684685`*^9, 3.631020829225964*^9}, {
   3.631021001980845*^9, 3.631021018782806*^9}, {3.6310210535937967`*^9, 
   3.6310210703667564`*^9}},
 FontSize->24]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n",
  FontSize->9],
 StyleBox["WRONG! Light direction is ",
  FontSize->9,
  FontWeight->"Bold"],
 StyleBox["NOT",
  FontSize->9,
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 StyleBox[" the reflected view direction!",
  FontSize->9,
  FontWeight->"Bold"],
 StyleBox["\n",
  FontSize->9],
 StyleBox["Now, in our special case, we also have the incoming (light) \
direction ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox[" which is the reflection of the outgoing (view) direction:\n\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], "=", " ", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}], ".", "n"}]}], " ", 
     "-", " ", 
     SubscriptBox["\[Omega]", "o"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["  \tor simply, in terms of angles, ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "l"], TraditionalForm]],
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["=",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "v"], TraditionalForm]],
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox[" and ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "l"], "=", 
    RowBox[{
     SubscriptBox["\[CapitalPhi]", "v"], "+", "\[Pi]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\th = ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Omega]", "i"], "+", 
      SubscriptBox["\[Omega]", "o"]}], 
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{
       SubscriptBox["\[Omega]", "i"], "+", 
       SubscriptBox["\[Omega]", "o"]}], "\[RightBracketingBar]"}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}], ".", "n", " "}]}], 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]}]], "=", "n"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\nSo ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "(", 
    RowBox[{
     SubscriptBox["\[Omega]", "o"], ",", 
     SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], TraditionalForm]],
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox[" further simplifies into:\n\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", "(", 
     RowBox[{
      SubscriptBox["\[Omega]", "o"], ",", 
      SubscriptBox["\[Omega]", "i"], ",", "n"}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["\[Rho]", "s"], 
       SuperscriptBox["\[Pi]\[Alpha]", "2"]], 
      SuperscriptBox["e", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"tan", " ", 
            SubscriptBox["\[CapitalTheta]", "h"]}], 
           SuperscriptBox["\[Alpha]", "2"]], ")"}], "2"]}]], " ", "2", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"cos", " ", 
          SubscriptBox["\[CapitalTheta]", "l"], " ", "cos", " ", 
          SubscriptBox["\[CapitalTheta]", "v"]}], " ", "+", 
         RowBox[{"sin", " ", 
          SubscriptBox["\[CapitalTheta]", "l"], " ", "sin", " ", 
          SubscriptBox["\[CapitalTheta]", "v"], " ", 
          RowBox[{"cos", "(", " ", 
           RowBox[{
            SubscriptBox["\[CapitalPhi]", "v"], "-", 
            SubscriptBox["\[CapitalPhi]", "l"]}], ")"}]}]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"cos", " ", 
           SubscriptBox["\[CapitalTheta]", "l"]}], " ", "+", " ", 
          RowBox[{"cos", " ", 
           SubscriptBox["\[CapitalTheta]", "v"]}]}], ")"}], "4"]]}], " ", "=",
      "  ", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["\[Rho]", "s"], 
        SuperscriptBox["\[Pi]\[Alpha]", "2"]], "2", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["cos", "2"], " ", 
           SubscriptBox["\[CapitalTheta]", "v"]}], " ", "-", 
          RowBox[{
           SuperscriptBox["sin", "2"], " ", 
           SubscriptBox["\[CapitalTheta]", "v"]}]}], " ", ")"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "cos", " ", 
           SubscriptBox["\[CapitalTheta]", "v"]}], ")"}], "4"]]}], "=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SubscriptBox["\[Rho]", "s"], 
         SuperscriptBox["\[Pi]\[Alpha]", "2"]], 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["cos", "2"], " ", 
          SubscriptBox["\[CapitalTheta]", "v"], " "}], 
         RowBox[{"16", 
          SuperscriptBox["cos", "4"], " ", 
          SubscriptBox["\[CapitalTheta]", "v"]}]]}], "=", 
       FractionBox[
        SubscriptBox["\[Rho]", "s"], 
        RowBox[{"4", 
         SuperscriptBox["\[Pi]\[Alpha]", "2"], 
         SuperscriptBox["cos", "2"], " ", 
         SubscriptBox["\[CapitalTheta]", "v"]}]]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox[" \n\nAnd ",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "brdf"], "(", 
    SubscriptBox["\[Omega]", "o"], ")"}], TraditionalForm]],
  FontSize->9,
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox[" becomes:\n\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "\[TildeEqual]", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], 
      RowBox[{"4", "\[Pi]"}]], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], 
       RowBox[{
        SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"]}], 
          ")"}], 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], "(", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], 
         SubscriptBox["d\[Omega]", "i"]}]}]}], " ", "+", 
      RowBox[{
       SubscriptBox["\[Integral]", "\[CapitalOmega]"], "  ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"], 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "(", 
          RowBox[{
           SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], 
        SubscriptBox["d\[Omega]", "i"]}]}]}], "]"}]}], TraditionalForm]],
  FontSize->9,
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "\[TildeEqual]", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], "2"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", 
         FractionBox["\[Pi]", "2"]], "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"]}], 
          ")"}], 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], "(", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], "sin", " ", 
         "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}], " ", "+", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        FractionBox["\[Pi]", "2"]], "  ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"], 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "(", 
          RowBox[{
           SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], "sin", " ", 
        "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}], "]"}]}], 
   TraditionalForm]],
  FontSize->9,
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "brdf"], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "\[TildeEqual]", " ", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Rho]", "s"], "2"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "0"], " ", 
       RowBox[{"A", "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], 
        ")"}]}], " ", "+", 
      RowBox[{"B", "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], 
       ")"}]}], "]"}]}], TraditionalForm]],
  FontSize->9,
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\nWhere:\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    "=", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      FractionBox["\[Pi]", "2"]], "  ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"]}], ")"}], 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], "(", 
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], "sin", " ", 
      "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 StyleBox["\n\t",
  FontSize->9,
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"B", "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "o"], ".", "n"}], ",", "\[Alpha]"}], ")"}], 
    " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      FractionBox["\[Pi]", "2"]], "  ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SubscriptBox["\[Omega]", "o"], ".", "n"}]}], ")"}], "5"], 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], "(", 
        RowBox[{
         SubscriptBox["\[Omega]", "o"], ".", "n"}], ")"}]], "sin", " ", 
      "\[CapitalTheta]", " ", "d\[CapitalTheta]"}]}]}], TraditionalForm]],
  FontSize->9,
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0],
  Background->None],
 "\n\t\n\t"
}], "Subsubsection",
 CellChangeTimes->{{3.6310210441682577`*^9, 3.6310210737899523`*^9}, {
  3.631021137828615*^9, 3.6310211396767206`*^9}},
 FontSize->6],

Cell[CellGroupData[{

Cell["Plotting the 2 parts", "Subsection",
 CellChangeTimes->{{3.6309414113575215`*^9, 3.630941426814406*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.631021132409305*^9, 3.6310211482762127`*^9}, {
  3.631021183165208*^9, 3.631021189283558*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"BinaryReadList", "[", "\"\<\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6310211867334123`*^9, 3.631021194651865*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examining the Beckmann distribution", "Subsection",
 CellChangeTimes->{{3.630933949793745*^9, 3.630933964258572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"beckman", "[", 
    RowBox[{"a_", ",", "m_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Tan", "[", "a", "]"}], "/", "m"}], ")"}], "2"]}], "]"}], 
    " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"4", "*", "Pi", "*", 
      SuperscriptBox["m", "2"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"beckman", "[", 
        RowBox[{"a", ",", "m"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0.0", ",", 
         FractionBox["\[Pi]", "2"]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", " ", 
     RowBox[{"beckman", "[", 
      RowBox[{"0", ",", "m"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     FractionBox["1", "100"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.630142017244236*^9, 3.630142257346244*^9}, {
  3.6301448339069405`*^9, 3.6301448344669404`*^9}, {3.6301533030957785`*^9, 
  3.630153331080577*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 0.5874946409141117, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], 
      Rational[1, 100], Rational[1, 2] Pi}}, Typeset`size$$ = {
    319., {53., 57.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$126943$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = Rational[1, 100]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$126943$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[
         $CellContext`beckman[$CellContext`a, $CellContext`m$$], \
{$CellContext`a, 0., Pi/2}, PlotRange -> Full], 
        $CellContext`beckman[0, $CellContext`m$$]}, 
      "Specifications" :> {{$CellContext`m$$, 
         Rational[1, 100], Rational[1, 2] Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{374., {104., 113.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6301533174262114`*^9, 3.630153332050674*^9}, 
   3.630933810879799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"beckman", "[", 
    RowBox[{"a", ",", "0.1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6301645143708534`*^9, 3.630164647276853*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"7.957747154594767`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "100.`"}], " ", 
      SuperscriptBox[
       RowBox[{"Tan", "[", "a", "]"}], "2"]}]]}], 
   RowBox[{"\[DifferentialD]", "a"}]}]}]], "Output",
 CellChangeTimes->{3.6309339363589764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"BeckmannDistribution", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "\[Sigma]2"}], "]"}], ",", 
         "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6309335876580315`*^9, 3.630933597723607*^9}, {
  3.6309336601041756`*^9, 3.6309336715598307`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
gYFtcVWH08ZB/KLAP1EtHGAqxycu5XKB0VASeZdeb6zzbpNMvD0Gr3/lL9/d
xoGhhXODuXlcuCml3OVFPz+JG+fcNDAah13mXZsrO+j5v+bFmzMi9N/br288
k15vEG96cnX/uTnxXK2p231vnNfhQqti+yET+nwKnH2a2/q5YPtnlk8hvV6w
2vOjsiiRC4Na+56m0cfPWPXKpW54DPiFYjv96fWV2usS9cUeXJjmkzZsQ98f
0rVmm24VFzLUpi6fRd9mWNfpaS3kQkxyZrIjff7Em0b6P7XlZI2hN2U4Bh63
9TuI3lQ9e1vC6Onr6E3ztN+L7jMpRW96eL9hlYzPf99ffTY0882G47XoTQvk
13+ak/ESveni29nPD8xoRm+69uS3nbHpLehN5UqM+JQ5C73puJ/h7JFzbPSm
78U3z7zsSKE33avxMX38MYXedMhiekFcKYXe1DLbYsMGbQq9aVRS9wHl4P++
v7qlnqPe58BCb5rlafdNem4retM+Ecd5/RWv0ZtW19y8usmpCb3p18ezdN6E
NqA3XXj5Ysjv4/XoTSVnHfCOz6xFb1ojNy46rPQMvali0o3NJrcfozfVs7ql
naVUhd40dmOi9lqPCvSmxl1384+/uo/edHRGiO3yV8XoTb0zi9SdOHfQm27c
aF3JG85Hb2rgcEx2y+cb6E19j3MOHpPLRm86JTbvcrZEBnpTKvnAcM/vVPSm
Za1NHYPLk9Gb2mhPte2xikdvauH+/W1bWTR601t90GOpEwHEm+7L3Bk+VBcK
xJvOWBn1sDQgCIg3rbvy9amk8Qkg3vTumia9H61HgXhThQMG+s8nvYB406yN
0o5iga5AvKnyldUO/u0OQLxpQJeObprFfiDe1ODS5n2/GiyBeFNxhytqDM2d
QLxp1ynGorADhkC8aYTIh/gjXjpAvKl8xIbNrSFJ6E3faf3OX3f1NXrTWw8i
r7eEt6I3Fa67vr1qjIXeNP2fqBOqUyj0piu6OvIq0yn0pgfr1xcK11PoTZtX
jGxhnqfQm9rWdSREfWZDmvd7fZ9uIaaP4tp+ES4LYv+yaj6xSYT5t8izmCuP
W9FjJr5+88rsbBx6zA/PXjr83R0JxGOuX6C7puJLOBCPGScQdJSbdwaIx9y3
dFavNSMAiMc8af1qyetDx4B4TOMnSXLKF7yBeExZNfshiQR3IB7zo7HB4vJg
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
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1mWYFmUYQOEll+4QRGDp7k7prqU7FQxSRTqUlBAQpASlRZE0CCWUtlAs
ECUU7EJRUYz7+XGuec6Z2Wu/nff9ZjZp0MjkESkTEhJSYKshbSpDIkdN87Y0
CQl3YCOeTJ2QkMtxNW4zz0Fa8wI869olPJt5Oa7zQfwShvJ+PL15PP7AFG2m
tsCc0bwE7/KG/DU05TV4XvNspOHzsUVbzLPG58EvfCC/iLt5X57OPA6/Y7I2
Q5tvzmBejHd4A/4qmvDqPI95FlLzedisLeJZzMvwMx/AP8ddvA9PND+MG5ik
ParNM6c3L8LbvD4/gMa8Gs9tnolU/DFs0n5Cf+0zDNF687TmsfgNE7VHtLdQ
j+9HI60qz2WegZR8bqyT9iP6aRcwWOvF05gfwq+YoE3X3kRdvg93alV4TvOj
SMHnYIP2A/pqn2KQ1pOnNj+I67Gm2jTtNOrwvWioVeY5zI8ggc/Geu179NHO
Y6DWg6cyP4BfYu20qdop1OavoIFWiWc3T8d/sV7aOu079ObnMEDrzlOax+Dn
WCNtinYStfjLqK9V5NnM0/BvrIv2jPYtevFP0F/rxlOYR+OnWBdtsnYCNflL
qKdV4FnNU/FPrIv2tPYNevKP0U/rGt8x8yj8GOuiTdKOowZ/EXW18jxLfFdw
K9ZFW6t9jR78I/TVuvD/MJL/EOuiTeTHUJ3vQR2tHM8c3wn8HeuirdG+Qnf+
Ifponfm/GMG/j3XRJvCjqMZ3o7ZWlj+Fa+imfYDeejL/B8P5d7EO2nj+Bqry
XailleGrcRVdtbPopXfit3A//zbuuzaOv44qfCdqaqX5KnyJLtr76Kl35H/j
Pv5N3GftYX4ElfkO1NBK8ZX4Ap2199BD78D/wr38a4zUxvLDqMS3o7pWkq/A
FSRrZ9Bdb89v4h7+FUZoD/FDqMhfQDWtBF+Oy+ikvYtuejv+J4bxaxiuPcgP
ogLfhqpacf4kLqGj9g666m35HxjKr+J+7QH+Gsrz51FFK8aX4SI6aG+ji96G
j8GrKKc9h8p6Ub4Un6O99hY66635aBxAWW0rKulF+BP4DO20N5Gst+KjsB9l
tGdRUU/iS3ABbbXT6KS3jL2NfSitbUEFvTBfjE/RRjuFjnqL2LvYi1LaZpTX
C/FFOI/W2kl00JvHXsUrKKltQjm9IH8c59BKO4H2erPYm3gZJbSNKBvvSb4Q
n6Cldhzt9KaxF/ESimsbUEYvwBfgY7TQjqGt3iT2Hl5EMW09Suu388axr7AH
RfV1KOVcft4o9gx2o4j+DEo6l4/fhrzIg9zIhTtjj2AXklz7NEq4Piefj4/Q
XDuKNnpDfjd2orC2FsX1HHwePkQz7Q201hvw3+Nn+Je4T7uL70AhvgbFtOw8
k3kS/sL0eDfGvTdnNi/FB/H54/kX91N/Ha3M9fXb470S12k5HFfiRvzN8fyN
3xl7wPELx3sdhzj3XNyzeH/E74o95ZgOj2O781sdc+Op2AexJ2J2LOqYzfnn
Y/3i/Rj/H8QejvuGVcjI88W7JJ7D5puYFu/n2B/mTOYncDbWI57Bseb6EbQ0
14vvjTm7eQV+40P4FdzDB/O55kTzQrzA7+CrUYRn5RnME/Anpsa7XHs/9g8/
jBZaXf4rBvPLGKYN4ttQgK9CkpaFz8Z7sce0Q2iu1+ED417EGmgrUVjPzGfh
TOwx7SCa6bX5gLj3yK+tQCE9E88YnxnpkQ6JqIX+sRbI59rlKOj6/wGBCEXd

        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0ndclVUcB+ALhS1Hy1Izy9KmlZlZWqZNZ0NoZ0PaC6wcbUfDtLQ0K0tL
K9uBQAvZICoOoIDSBkOzEherFBW05/zx3O/vfu97zue95327xyfGJkRHIpEo
4nwkxUQi+9pEIvupMrfKdP7jGZawjSE8wWds4jgG8TAL+YNd1h8u+3IXc/mJ
Sn0XeQkP8QG/s1PfQZ7HnbzJj2EvfWc5kAd5n9/CPenbyz7cwRxKw176TvJi
HmABv/Kvvp08l9uZTUnYS99EW3NvRvMGxWGdvpHDzOdwG6+zlvX6Bg41n82t
zGIN6/T1HGI+i1uYyWp+0ddxsLkXN/Maq/hZv4ODzGdyE69SRIV+O23MZ3Aj
M1hJuX4bMebTuYHprKBMv5UDzadxPa+wPDwP/RYOMJ9KHNMoDGevL6WEYtay
htWsooiVrGA5hSyjgHzyyCWHbGqJtu8pxPIyy8jSbybK3JNRvEQBmfpj5UXc
z/xw7vyjj8geXMeL5JOhP0YO4D7eC8+Cv/WXy0Q+pob9uvHyi/A7J3MtL5DH
Ur8/LZPZylV8SwOP8yl/0pHvaWIiX7GZ/qSyg3vZybvh+fOXvVvkD+G95El2
8zW1XMYe0qgjgV18RDX7rN8rv6ORcTTzedibk0hhO9cwlVzSrXtKJrGFK/mG
eh7jEzZyNBP4Mpw1F3IP88I7yib7XCof5UOqaNV1l1czhZzw/3RXyLEsZgNH
cQF38w4V4RxdN1g+wiIqadGdKEcymexwzrojZT/ieZvycM/hPDjBPIJJZIXz
0R0hz2cMb1EW7kO/h27m4TxPZni+uhp2c7zvw3iOjHBOujRSSWEJyVTTTFfX
DOXZ8O7wP+18zos=
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl12W4FWUYBdDDJUSku0vCAINWOkVEFExCygAsBEwQCaVBxRYEg7Do7u7u
7u4QFZHQ9T78WM6798yc+b577h21UOv2jV5PlkgkUiZPJOLYOimRWGYoxSS5
BaX5WP+Hrjn75AGoEs/7x3JdaSbLLSnDJ/pLuhbslwfiEYkX9Ct0ZZgit6Is
n+r/1LXkgDyIFLyoX6kry9RYH+Vivbzk3Cp9OabFWihPKm6hjfOrnSvP9Hg2
FRis/0vXioOxN1LTVr9GV4EZ8Wym6nLRS5eSB3SfyX+bW3Mo9sp6XWm+1xXg
Vl07eW3cw0z5kFyHSfJL8jRzbnrLqfjD/DSLzA86/7n5svl5Lpubclh/yrEB
s/RXHVvwqX6DYxn+4wfnrjg+R3I/+ILyn+ZnSSYvka+ZW5JCTuP+l83r9Dcc
H3T827EJSc7Pcv6w+aGkm1/kZOf/NTenjWq6Yx766P9xbMYt5kuOz7DYXNF1
X5j/Mb/AEfm0/Biz5cHyRnNZfpQLcZvuFXl93M/s+J6oxJf6K7oXORrfC2l5
Vb9BV4k58T1QmXSkJwMZycRrrt3ousrMjZ8BVcjM685t0ldhXqyDqmShvXOb
9VWZH8+kGl/p/43vl2PxHZKVN/RbdNVYEM+lOl/rr+racDx+PmSjg36rrjoL
Yy3U4Bv9NV1bTsTPgOx01G/T1WBRrI+afKu/rmvHyVgfOeik366ryeJYH7UY
or+he5lTsT5y8qZ+h64WS2J91GZo/L7pXuF0rI9cvKXfqavN0lgfdfgu6eaL
41X9mVgfuXlbt0tXh2WxPmbo8tJXl5qHdMPi95fX5LOxXvLwjm53XMPyWC91
GR6/v8RL7lysl7y8q9ujq8uKWC8zdfnoF3+/PKz7Pv5+aC+fj/WTj/d0e+Ma
Vsb6maXLT39dGurpfoi/L96QL8T6yU9n3b64hlWxfmbrCjAgfu95RPejnJIO
8sXYDwXootsf17A69sMcXUEG6tJSX/eTnIqO8X6J/VCQ93UH4hrWxH6YqyvE
IF06HtWNiL9jOsXfcuyHQnTVHYxrWBv7YZ6uMB/r0tNAN1JOzZvx/on9UJgP
dIfiGtbFfpivu51PdBl4TDdKvpW35L9iP2ySy/GTrjC367rFuzHuYX3sjwW6
IvFu1GXkcd1oOQ1vx/st9sdmuTwj4rMoousuH4l72BD7ZaGuKIN1mWio+1m+
jXfiHR37ZYtcgZHxWRTV9ZCPxj1sjP2zSFeMz3SZaaT7RU7Lu/Eejf2zVX6A
UfFZFNP1lI/FPWyK/bNYV5zPdVl4QvernI734t8HsX+2xfud0fFZFNd9KB+P
e9gc+2eJ7g6+0GXlSd1vcno6x/s/9s92uSI/x2dxh+4j+UTcw5bYP0t1d/Kl
LhtP6X6XM9BFvhr7Z4dciV/is7hT10s+GfewNfbPMt1dfKXLztO6MXJG3pev
xf7ZKVfm1/gs7tL1lk/FPWyL/bNcdzdf63LwjG6snImu8vXYP7vkKvwWn8Xd
uj7y6biH7bF/VuhK8I0uJ8/qxsmZ+UC+Eftnt1yV3+OzKKHrK5+Je9ghH5Hr
MkXuJa80l+RbOReNdePlLHST/5PPmB9njjxG3mOuxph4BiV1/eSzcT875aPy
w0yVe8urzPcwRM5NE90EOSvd5fiPxrPmhsw1j1XtNVdnbDyDe3T95XNxP7vk
Y3I9psl95NXmexkq56GpbqKcjR5yMs6ZGzHPPM75feYajItncK9ugHw+7me3
fFx+hOlyX3mN+T6+k/PSTDdJzk5POYnz5ieYbx7v/H5zTcbHM7hPN1C+EPez
Rz4h12eG3E9ea76fYXI+ntNNlnPwoZycC+YnWWCe4PwBcy0mxDO4XzdIvhj3
s1c+KT/KTLm/vM5ciuFyfprrpsg5+UhOwUXzUyw0T3T+oLk2E+MZ8V41N2Zp
/I47tkq6+f8DpVz7P0NGg2w=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1VXYlFUUQOGhu7tEUlBB6e4QkRIxQLpRWgUVFZBOKUG6Q7BAQWmQkC6T
TsUibLHw3RfrOXutmZ+L8+1vKNS5X8u+SRKJxMqkiUTKZInEHSkSiVnJE4k8
eJN3QGWkQmqkQVqkQ3oU9P03fDcvVvOOqIIG+jatNo7x0ciAO/XZWj6s4Z1Q
FQ317VodHOdjkBGF9DlafrzFO6OndpF3wS+8Gh7QdvC6OMHHYqj2J38RaZFJ
K6zNNRfA23wyT4Vx8e/xXuZL5q74lb/Bs2A6r84bmXea62G+OSc+1ac702Oy
Po4PM98yD8Eicx6kM89xZsMqvM6XOvNjDTL7uyLOefpy5x3Oec4ceBPv+Pw1
Z2qsxHifL3bmxWp09flTzsv6Cmc350Jnbvzms9nOrJihL3HmQw39QefHWn0s
MOfCZ/oMZwa8po/nw81/mV9CemTRimrzzQXxLu+Gp7UrvDt+5zXRWNvFG+Bz
PgFZUUxfoN2J93h31MJD+m6tIb7gE5ENxfWFWiGs5T1QG9mRAzmRC7mRB3f5
/iLfLYx1sTuog7wo4bPFehG8H88edZEPJX22RC+KD+JeUQ9N9D3aA/iST0J+
3K0v1YphfdwB6qOpvldrhK9i31AA9+jLtOLYwHvHO4Nm+ifagzgZzzveSdyr
L9fuwoe8T7wzaK7v0xrjFJ8S7yRK6Su0EviI9413BC30/dpDOM2nxjuJ0rFT
Wkls5P1i1/GwfkBrgjN8WryTuC92WLsbm3j/2CO01A9qTXE23ot453B/7LB2
DzbzAbETeEQ/pDXDudi5eAdQJnZauxdb+MDYCbTSD2vNcZ6/HjuIsvEOaaWw
lT8Td6p9zXvgj3h2eFQ7wlvgAp8ZO4hy+ltaaWzjz8Yda9/wnvgzniUe047y
h3GRz4qdRHn9be0+bOfPxZ1rV3kv3Ipni8e1Y7wlLsXvS+woKsT7rd2PHXxQ
PAPtW/4U/opnjSe04/wRXI53OvYYFfV3tTLYyQfHM9G+40/j73j2aK2d4K1w
hc+JXUcl/T2tLD7mz8cz0r7nvfFP7ALaxO8dfxRf87mx+6isr9XKYRd/IZ6Z
9gPvg39jN/Bk/Lbwx/ANnxfvAqro67Ty2M1fjGeo/cj74r/YFbTVPueP4yqf
j1e1v/nLyBA7o1XV3jdXwB4+JJ6pdo33w+3YJbTTvuBP4Fu+ACO0f/gryBg7
pVXTPjBXxF7+Ujxj7Trvj0TcidZe+9LcGt/xhRip/cuHIlPsmFZdW2+uhE/4
y/HMtRt8AJLEHWkdtK/MbfA9X4RR2n98GDLHzmk1tA3mytjHX4kd0G7ygUga
d6Z11E6an8QPfDFGa7f5cGSJHdRqah+aq2A/Hxo7of3En0GyuDOtk3bK3BY/
8iUYoyXwqpY1dlKrxT8yV8UBPix2RPuZP4vkcWdaZ+20uR2u8aUYqyXBCC1b
7KhWm280V8NBPjx2RvuFP4cUcWdaF+2MuT2u82UYpyXFSC177KxWh28yV8eh
2KnYGe1XPggp4860rtpZcwfc4MsxXkuGUVqO2GGtLt9sroHDfApPgwl8ROxP
/J9sHoxUcX9aN+2cuSNuxm8bz4gpfAWfYE6O0Txn7LZWj28x18QRPpWnxUQ+
MvbK/Lv5eaSOe9W6a+fNnfBT/AbyTJjKV/KJ5hQYw3PFzmv1+VZzLRzl03g6
TOKjYt/Mf5hfQJq4b62HdsHcGT/HbyXPjGl8FZ9kTomxPDfmmrNjpnmZs0D8
JqOS7/4PggBFyg==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV03lgl3MYAPDf1CqJDpRCtyuVinJ10aGIbBQ6NYmoTaIIlVtRKXLkKEe5
2tpqZbWK6FI6EKkdbA25kmtDRp/nj8+eZ8/e9/u+7/M8a5aWkZqelEgkUvzI
TE4kVlZLJO6lDyfxl9pXZLGEbHJYyjJWueY++nIyf6t9TS75fp/MpTTmH7US
PpXPZQQdqcty9dXiFC6jCYfUSvlM/gxpdKIeK9TXiFPpR1P+VSsSFzCG7uxT
2yU+yw2cy7GU8Dq30ZN3XbdWvJ/LaUalWrH4CmO5iDK1z8XnGMl5fMfbTOA4
SlnIOA6yjF78QCZ3k+ec98QHuIKfyaY53/Bm9J47+C36E/3gv5iH+CoVpPML
S6O/XMz3LI5ZcBd/xPdFf+Js938hPk85N3KAHM5nP+8wkd+jzxwffWQRt/Mr
ufTmR7KYxEpnvy8+SH9a8C1vcSf/x26Ir5FBj/i72m5xHqO4gPqsUl8nPsSV
tCQRvVb/UnyBm7iQBuSrfyA+TAqnkBTfE3vFh/JHSOVUjog+xQ7F3GMW8e7x
zDgnrmc9G9jIJjbzEVvYysdsYzs72Bn3OPdRruI0qsTc1T+Js+SPcTWnUzX6
F/8P8Qz5NAZwBsn8FLsfz5ZPZyCtqBb7Ensd7yR/nGs4k+oxz9jReFf5E1xL
a2rErsT84xvkM7iONhwZuxqziG+Tz2QQbakZM4++xzfLZzGYszgq9lN9T/RC
/iRDaEet2CH1vdEj+WyG0p6jYy/jPvFFbqYzJ1AQ/RTnMIwOHMOfcZb4EqPp
QkMKo/fiUwznbGpTrl4gvswtdKURRTEP8Wmu5xzqUKFeKM7nVrpxImW8wXgu
ibmwhHvincijkmL3HwZwbcx+
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 8}, {0., 0.5989446050676666}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.630933603447935*^9, {3.630933664873448*^9, 3.630933680395336*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Visualizing shadowing term ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "Schlick"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(L,V,H)"
}], "Section",
 CellChangeTimes->{{3.63093027031429*^9, 3.6309303056363106`*^9}, {
  3.630930487938738*^9, 3.6309304935810604`*^9}}],

Cell[TextData[{
 "Assuming ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["L", "\[RightVector]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the reflection of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["V", "\[RightVector]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by the plane of normal ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["N", "\[RightVector]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " we can write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["L", "\[RightVector]"], " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      OverscriptBox["V", "\[RightVector]"]}], "+", " ", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["N", "\[RightVector]"], ".", 
         OverscriptBox["V", "\[RightVector]"]}], ")"}], ".", 
       OverscriptBox["N", "\[RightVector]"]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["G", "Schlick"], "(", 
     StyleBox["v",
      FontWeight->"Bold"], ")"}], " ", "=", " ", 
    FractionBox[
     StyleBox[
      RowBox[{"n", ".", "v"}],
      FontWeight->"Bold"], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{"n", ".", "v"}],
         FontWeight->"Bold"], 
        StyleBox[")",
         FontWeight->"Bold"]}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "k"}], ")"}]}], " ", "+", " ", "k"}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], "2"], "8"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and m the materials roughness."
}], "Text",
 CellChangeTimes->{{3.630930306924384*^9, 3.6309303181240253`*^9}, {
  3.630930371378071*^9, 3.6309306876661615`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Gschlick", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", " ", 
  FractionBox["x", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "k"}], ")"}]}], "+", "k"}]]}]], "Input",
 CellChangeTimes->{{3.6309306852390227`*^9, 3.630930685241023*^9}, {
  3.630930756099076*^9, 3.630930794219256*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Gschlick", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], ",", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}], "2"], "8"]}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "0.01"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6309308071989985`*^9, 3.6309308346095667`*^9}, {
   3.6309309188833866`*^9, 3.630931035508057*^9}, {3.630931113024491*^9, 
   3.630931114538577*^9}, 3.6309313228574924`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 0.016, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 0.01}, 0, 1}}, Typeset`size$$ = {
    360., {109., 112.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$67625$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$67625$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[$CellContext`Gschlick[
          Cos[$CellContext`x], ($CellContext`m$$ + 1)^2/8]^2, {$CellContext`x,
          0, Pi/2}], "Specifications" :> {{{$CellContext`m$$, 0.01}, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {159., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6309310137248116`*^9, 3.6309310367831297`*^9}, 
   3.630931118510804*^9, 3.630931324508587*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parabolo\[IDoubleDot]d Shadow Mapping", "Section",
 CellChangeTimes->{{3.6309338239985495`*^9, 3.6309338356042137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["y", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.630165765320853*^9, 3.6301658243468533`*^9}, {
  3.6304997631587543`*^9, 3.630499775534462*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnXu8HUWV789VuOMgCiIqIApqFIIgMOIDVJYOLwOKSBQz3isKIsKVIAJq
8OMIBq4gjAoBCS/FBB8oMEKEiJCxdkKMvEI6BwhNEpLOoQ/phE5ygADKIEzO
2fVb5VrVvxn2P+ezv6n0Xv3t6uqq6urVbzn2q0d+6WUDAwO7bDEw8PJNf9/y
yMd/9+KLGwL+bvz6+xa+sOnv8affePnsyY8rv2zKCzddOXV1+M0rX3vW5GWP
KX/vzKevuHRiFdbP/Prx4yYMKb9qeN+tVw4/EL40tp1lys/59eLhy6f+OZYf
VD7lkOqby4Zvjnye8uq+M16/cPiSMBA/4AMDvZ+dt/vF+8fy4svH7YvffoxH
uuMZEh9/3F/x+xv9iPcTv4v3ie/wivL4jr9Tnjl/j69tsUI9g59w8ZMvLJy0
SD2D7/wZuW/BpN+qZ/By+rhXDw/fLPAMfvPip2786dQ/CzyDX3L7tncPTlok
8Aw+/5z9TvzzcwXKiy8Pz3778Nwdz5D4+OHZ7y88ez/w7H3CM/y546Uc28d3
/B1Y9Pf1Z0h57+yLrx0ano/9Un7b4BVfO3v6/eoZ/Kc/vuB7/7LTUvUM/sMt
drz4tC1WqGfw8/b+2PTFk1aqZ18env324bk7niHx8cOz31949n7g2fuEZ3jC
+QLP4O74Kkc8+I6/N+78n2fIPkvUM/j5xs+g8vd9681LJo4MqWfw3958/PJq
uFbP4Lvf+Z0VW/1gWD378vDstw/P3fEMiY8fnv3+wrP3A8/eJzzDx/+P7RU8
gy+J5xc8g7v6oBzx4zv+/tOMw5fetL96UP7zl/25vmrqavUMvuOHtnp8/JQ1
6hn88iN2WTdpp7Xq2ZeHZ799eO6OR4+Dxg/Pfn/h2fuBZ+/T1udBvV7Y+jyo
7Zutz4PufB9S7uqPcutzUPnrj5MN5y5Y6+rzYPjhT899ets5ravPg+GVs65+
9oAvrnP1OZW39Tlt39ZnH8+Q+PhtfU77a+tz8mPrc/JpPc8LzX2m/VF+cby+
WM/zXHs4pBznr/U8z9e3tB3jZ57y//3wov+ccdN653leOLtd/bdi0gbnOZW3
ntP2rWcfT2q3EL/1nPbXek5+rOfkM/WT8On3l+AZFNd3vR7Ej70eDSlH+wnP
4PZ8H1Tu6qdy+Bzo/IyoZ18env324bk7niHliB+e/f7Cs/cDz96nq89C6rOQ
+iykPgupz0Lqs5D6LKQ+C6nPQuqzkPospD4Lqc9C6rOQ+iy+PiMu0j4LaZ+F
tM9C2mch7bOQ9llI+yykfRbSPgtpn4W0z0LaZyHts5D2WXz7jN8n/Q0h/Q0h
/Q0h/Q0h/Q0h/Q0h/Q0h/Q1/vojfvutvCOlvCOlvCOlvCOlvSHd/Y0hI/1lI
/1lI/1lI/1lI/1lI/1lI/1lI/1lI/9mfX9Idj/afhfSfhfSfhfSfxfefsT0y
HhQyHhQyHhQyHhQyHhQyHhQyHhQyHhQyHhQyHvTno/j43XhQyHhQyHhQ/HgQ
/4/MbwiZ3xAyvyFkfkPI/IaQ+Q0h8xtC5jeEzG8Imd8QMr/hz1/x++vmN4TM
b4if38C/k/k6IfN1QubrhMzXCZmvEzJfJ2S+Tsh8nZD5OiHzdULm64TM1/nz
XbwfN1+nPufveuY7ls1ep3+Xn/zkXpvtmfyDn/Dktmd+dzra61nK7331y6+6
87lerA+zxPP4Xcj2xW8f3/E799jtK//nZ576zgnXb9DfJRzlhZRXjjj977p4
BNxeL2bJW8aa82w74reDfyeehXgW4lmIZ90+vsO394zf978Lfla78sKLh0/X
/ffcbV+3Y6/7s8K1sbzzFuAN3/V8slw8t9fBtH33u+K4eO48ZP7BiQflrj7r
dp6c+thJk5et17/PbFj80yunKhfC9d9JeeXYX/y/p2dt9t6Pz12n5fHvjmu8
4PiO/0fKB1Le80C2I/534zjY/R0YWL6pMUzj98RvHcU6fk/8knETpqXxe+Ir
x7azLOOXjpUfzPgVY3xexvufG+d4fn6/vHj+w/72M/5QP56MX9iPP+M39/c3
42XfT8bjd8aD9Zo8ew7PnsOz5/DsOTx7Ds+e9z83zvEcnj2HZ8/h2XN49hye
PYfn7jhHGA+2nibPnuO75/DsOTx7Ds+ew7Pn8Ow5PHsOz57Ds+fw7Dk8ew7P
3XGOMB7seZ88e47/7zm+ew7PnsOz5/DsOTx7Ds+ew7Pn8Ow5PHsOz57Dc3ec
I4wH244mz57Ds+fYruf47jk8ew7PnsOz5/DsOTx7Ds+ew7Pn8Ow5PHfHOcJ4
sNel5NlzePYcnj3H73mO757Ds+fw7Dk8ew7PnsOz5/DsOTx7Ds/dcY4wHux1
Pnn2HJ49h2fP4dlzxOE5vnsOz57Ds+fw7Dk8ew7PnsOz5/DcHecI4wH74T17
btv3xG17lLg9fxK3xztxG1/i9nvitl+XuO3XJW77dYnbfl3itl+XuO3X+ThH
GA823uTZc3j2HJ49h2fP4dlzePYccXuO757Ds+fw7Dk8ew7PnsNzd5wjjAd7
/JNnz+HZc3j2HJ49h2fP4dlzePYc++M5vnsOz57Ds+fw7Dk8d8c5wniw51Py
7Dk8ew7PnsOz5/DsOTx7Ds+ew7Pn2E/P8d1zePYcnj2H5+44RxgPtn1Knj2H
Z8/h2XN49hyePYdnz+HZc3j2HJ49x/57ju+ew7Pn8Nwd5wjjwbb3ybPn8Ow5
PHsOz57Ds+fw7Dk8ew7PnsOz5/DsObx4ju+ew3N3nCOMB3v9TJ49h2fP4dlz
ePYcnj2HZ8/h2XN49hyePYdnz+HZc/jyHN+74xxhPODfvWfP3Xxd5tlzN1+X
efbczddlnj1383WZZ8/dfF3m2XM3X5d57o5zJOMnj25m9rqAv658xk/qfxdS
PuP4jv/nt+85vjPO4sf2SPksHubH/+7vxzyvD/gL3j9c68VzfMe/+/KeIz62
fR+/LZfH77fvymfHy/8uyrH4u3+3Tfelt7nvG8PbVnF7jc7TT9pmxw9M2mlI
Ocr/ZfwCWXvA/ZHXWv5nB1798P89/GHlKF9c/NmD9/hVL/J0n/wzZx5w+KUT
C+Uov+tJizb/2/A5Md5Sy1/76wnX/uEqnM+llr9w+j7f/8VNf4zlCy1/zLav
umHuczcGcJT/8Fc+d+k7p9wVy/e0/F1X/vKw3z13YQBH+Xd++pcH/b/rcd+8
J91c18f535Xu3y2F7Jd071clxJt0e6uFHBfpPi6NkOOu5Z81x71N9/VO2uEn
D57bKO+uV63eh3/FlPND757FWq/A79u4+OCzpv9O6w/4Vy+46J33jb8VHpQf
esRZu5++xX1aT8CvHTz6wtO2WKL1Afy4Yz/81512WKbHHfyzD9VHyD4r9Ph2
87Q+1G6nlO7fraQ7Tl0PGE4x+9VIt4dWur21un5h6Ljjvnz3+FvVJ/ip33vq
E7dOvh2/q/z6uT++ce49i9Un+NPfe+ID5y1Yqj7B52z3imXVcKU+wa+opmz1
+8mPqk/w173xsNsXPFerz25eSPd2Sun+3Uq649R1am6/Gun20Eq3t1bXfbzi
P8Ibny+uxXaUf+PJj+89Gjd8gn9v8LGFE0eWqk/w5rAZu//g6VXqE3z8jBvX
jJ8yrD7B/+HEt7x5NG74BJ96zVN3bfWDNeqzmxfSvZ1Sun+3ku4403pbu1+N
dHvQ9bDOG+rnYHjl1xfv9fgBd6hP8M/esv/BS85d4urnYLjl7q88se2cytXP
TeVv2P59U/YddvVzMFz5svEbt53TuPo5GM64+/JdHz/gcVc/B8PGzU564Lmi
dfXT80K6t1NK9+9W0h1nWtdp96tR/n+MB10P67zB57yw9ugnJ+y0wz3O57xw
6G6Ljhw5danzOS/ssfnNz864acj5nBcGVx/zoc33XO18zguv/dDXnptx01rn
c154YrOhd03Zd53zOS+cJDcvPXfBeufTc11f5rZTSvfvVtIdZy3d+9VIt4e0
Htx6a7X/tPL6I49cNnuh+gQ/8JMvHnX43GXqE/w3293712LSo+oT/BNj60+S
T/ALj/j+88Wkx9Un+MnbPbfXryr1qf2zHb+3/73jp2xQb93lS+V2+5VyG09a
x2rjb5QfZPY3reO2frQeCqmHQuqhkHoopB4KqYdC6qGQeiikHgqph0LqoZB6
KKQeCqmH4ush1v2RdlJIOymknRTSTgppJ4W0k0LaSSHtpJB2Ukg7KaSdFNJO
CmknxbeTWC9JruNCruNCruNCruNCruNCruNCruNCruNCruNCruNCruNCruNC
ruPSfR0fEtLPFNLPFNLPFNLPFNLPFNLPFNLPFNLPFNLPFNLPFNLPFNLPFNLP
FN/PxPpcMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4SMg4S
Pw7S9eNuHgPcz1eA+3kJcD//AO7nGcD9fAI4mTcQP2/QvR2dBxA/D9Adp47r
xY/rwf34vdtbm9a7mnG9zguJnR/Q+R+x8ww6zyN2vkLnc8TOe+i8jdj5k56u
C7XzM+l5RFte51Xc9nX+xMWj8yQufp0Pcfvb6t/lx/7tpOu3WqV+5pzwk+0n
TGvDz//4j9dcNfUh9TNl8X7vnjZuXVj6/YMnHvDFhern3fuVHxud12ynr958
0aSgfjaMtRvrw7dfPflT06f+Sv306//ovN+NT+513AX7w89bx+J8PGz71vu/
dcTce7RePXLQ4/d+dFM89eKL//EuXZdeymX/ft5jF22KZ+Men7/g2eFLtF59
6g3vGBiNp/nmSdPu1nhq2eqsO7YfjefKCePv/+TIoPq5p/nCu0fjefmFG7d5
4cWV6uXA6cc+Nnvy6nDBBe8tp06/X/3g7/rbXvbzBc/11E/fWxOq25YcXWt9
rqK3NWHqHxbsMDgp6PnY97YmHLLd52f9y0536/nY97Y27PSJU3a4bCKua2jf
1oZPP3vaoc/MQLuN83F1uGKLA8d/54Tl6q1/3FeH+s4Xfv2TqQ+pt77PJpxw
0re33+tXhXrr+1wTLn/gqRUPapx19LkmvGn18w9fpMexka3HfK7V/BLRm9w7
5nNtOPQ1Iw+84ugV6vO8d/3p3snLhsLPDxltP/+oHvueHw1b//t7blk06bd6
/cXfT/zpC/edu+Bu9dn3XIc7N357QTX8gPr85pjn4fDWk/7tktRfLaLn4XDL
nUd/Mj2fhevvY2HqFhufP+H6le56MRTO+u4Bw6PPD8Jnv1/xaPjaDSd+8e/6
UdHzo+GF6UM3HfjFR9Tn8jHPdZh4280XrNI46+h5WPNIwGff83C46HXDB4VJ
V6vPvufHwiRzvrfh8gs+cfyEacvDXlcdc/k9k67W/uFrPnf+5ctmPxK2fGb5
5NmT71Gf3x/zvyJMnTt2XqtP/N1v3ehzxCvVZ99zFV5/5vy3zblqSH32Pa8K
7/zWM7LpOKjPfxrzvCo8svr7948+VwiffQ/Lwx+W3HzTgue03y4Tx/b3kfCN
RdesS/eTSrl7rP6sCIv22/izw+fq+FQ+ctuVx7+46fzE84bw2d9+FX47eOqy
Kfs+qD77nleFHWbduuM79H5YGz2vCl9et1zOTNfl8Nbbtn337yffH55Y/9Dj
G2fMVZ9XjHl+IEx88sGTU32rwzZjnh8MJwxOPWrfzVeqz77nJWH5YWdcOnW6
9tO0Xdx5xjZ/nXHTY87nw+F/nfiq+58rGlc/l4Yzrzlx3A+e9v3t+8Ozmz1z
xr+ekMYvfQ8PhDPvvuG0kVPXqs++5wc1LwR89j0vCcff8JGFKc46en4onPfj
D3w21edG/nDBkssv2hTnd26Z/YrU/rSy9+des/Btm+L86oO/2PNBPX/bcNTi
3704Ydr88I1X3zFxkrZvTTj49PHHn7xsQbj+jZ/76fgpD6vP977h6nunjbsr
XH/3woF0flVh3NhxuSfs/K37fr3/PlpPov+FYc+r9ro7PUeM86MIy/faeMzh
c9N4sO95cXj7+7f/2vVbrXP1c37Yb8t/2H/JuWl83fezwOXrKOXWMQ93ueNS
yS/f9bGBTedb2PKNN9yd4qzlx4vnHr90U5zv3fzIZvyUVerznNNHn09bFP56
x43PpfOxldvGtr84fPdPA7vM2n+++tz/tCfu2n3CtLDCzfMcfdCiF3aZMDNs
/ezZf0r3cevw5sW/uOwPk68Lu22+25E77ZDmeU561/6Xv33CrHDid5+6NdWH
Mnx07LjMDgee8ubpE0fSfEXf/+1hzuLftKPPv8PbKW+44d1v2xTPmiPvXT57
cprn6fOZYeZhe5+W7meWsus1Zy+8eVM8n3/T8s/vtEOa5+mXnxVuPaa5I8VT
y+Gfu2z0Xmq4Ybujrh597hje9hjbzu3hzHMOrc/VcU0btlxz8hV/ezHIDy+Z
c9nhc9N8TiwvtnwdPt7fvtjtVyHGIzaeMsT4xcZfxPIzxe5vT/++b8t/vWzi
SKpX0adYn6VE/2L9VxKPl9jjVcub+sdX7PFtJNYHsfWhDbFeia1XTYj1UP5i
6mEdLunXW7H1tgqxnout52WI54XY86II8TxyeRV6IZ53Ys+7nsTzVOx5Wuhf
e16XEtsBse1AFT3fIzuZdqOW9/TbGbHtTCOxXRLbLrUS2zE53bRjbYjtnpxi
2r0mxHZSbDtZh9iuim1Xq+hnidh2uAyx3RbbbhfR2wNi23nMz9wv9rqA+YSl
/rhEzw+Lve6U+tdepyqJ1zWx17U6+n9Q7HWwkXjdlE+Z62Yr8TorT5rrbBvi
dVnsdbkJ8Tou9jpeRw+V2Ot+FT2vFNtPKKPnFWL7FUX0/IjYfgjq53Kx/Zae
xH6OrDD9HPhcJbZfVErsR4ntR6V5GtvvqqPnFXK26ac1Evt1Yvt1rcR+oIwz
/cA2xH6j2H5jEz0Pi+1n1tHzsNh+aRU91GL7sRj/Piq234v5w0fF9pMxfhkS
269G/XxMbD+8kNhvF9tvL6PnYbH9/Cp6rsWOC2r9e4QZRzQSxx2yjRl3tBLH
KfJLM05pQxzXiB3XNNHzWrHjoDp6XiM7mnFTFT2vETvOKkMcl8mJZlyG+YTV
YsdxmJ9ZLXbch/HLWjnKjBMLieNKsePKMnpeI3YcWkkct8pZZtxaR8+NjJhx
bqN/7bi4jZ5Xix1Ht+HcT77wsdF+Q7332++8ZdP4FT7jeFzseLwOcfwudvxe
Rc/rxI73y+h5ndj5gSJ6bsXOJ2AcvUH+sueCB/eZME29xfkKsfMVZfS5Xuz8
RhV9rpP1Zj6kjj7XiZ0/aaLPVux8i/oJ1g+O+4Zg4+wFzJ+81syf6H658q10
bx/XDT8vpP2rYPtXPY3L9nN6obt/qL5ZeXHlsX3Xj9L+pyvfCuL8gYmzle7+
s/arxXFhHP1Mt331Z73pcRF3XEJ3fdN5MLHzYHpc3Pb1OIo/jt3znzov6tY7
6fxktn5sIH7s/Vxdb+bmM1vyvDN+x68DbEj5mpSvSfmKlK9I+ZKUL0n5gpQv
SPkeKd8j5fHJyks39+uRU3kSP9lOQcqXpHxJylekfEXK16R8Tco3pHxDyrek
fMvKk+fHG8JrwivCS8ILwnuE+/XmWp48P14QXhJeEV4T3hDeMk6eH28Irwmv
CC8JLwjvEe7X72t58vx4QXhJeEV4TXhDeMs4eX68IbwmvCK8JLwgvEe4fx5C
y5PnxwvCS8IrwmvCG8Jbxsnz4w3hNeEV4SXhBeE9wv3zJVqePD9eEF4SXhFe
E94Q3jJOnh9vCK8JrwgvCS8I7xHun9fR8uT58YLwkvCK8JrwhvCW8fjdP3/d
EF4TXhFeEl4Q3iMcn6y8kO0TXhJeEV4T3hDeMk6eH28IrwmvCC8JLwjvEe6f
J9Py5PnxgvCS8IrwmvCG8JZx8vx4Q3hNeEV4SXhBeI9w/3yelifPjxeEl4RX
hNeEN4S3jJPnxxvCa8IrwkvCC8J7hPvnHbU8eX68ILwkvCK8JrwhvGWcPD/e
EF4TXhFeEl4Q3iPcPz+q5cnz4wXhJeEV4TXhDeEt4+T58YbwmvCK8JLwgvAe
4f55XC1Pnh8vCC8JrwivCW8Ibxknz483hNeEV4SXhBeE9wj3zzdrefL8eEF4
SXhFeE14Q3jLeOxH+ednG8JrwivCS8ILwnuE45OVF7J9wkvCK8JrwhvC0/pJ
Vz6MNSfTPK/DR0fxOP/ceoXn0B0vw0VjG/LPRxfhls7npnth6dhx3+D4wMAL
L45+PO9Jn+fzhG/rjL+UQ7rjl+740Q77ONE+eI5549WZT/tXtx89e15Fz2sy
n2M/O9vzInpem/nsX349HxhYSuZdl3bGX8iY5hc9L6PnLH7pjr+Onj3Hdc3H
ifY243FeMZ9/6/t/NPNs/2qc0b/nZRjD44Yzz33/nvfCWPEJ+TznbDLPObsz
/kKWdcZfRv+eV9Idfx39+zib6N9z9B/yec5dxra/PPP81bHtPJJ57udDWJF5
tn91v6J/z4vof1XmuZ9/wvOBgWlknnNcZ/yFTO6Mv4zHJYs/+l+Zee6Ov4n+
fZxt9J/xsGLsh+/PPL9jbPsPZJ77Hh7MPPf9L8k827/4wPPDpD4vzTwvI/Oc
yzrjL6IfH38Z/WfxR/8+/jr6fyjzfEhn/KjPPv427DYWz/zM821jv7sg83zo
2Pbvyjz325l7Ms/947Iw82z/4tOL/heT+pzPc47rjL+I3nz8ZayHWfyxnffx
1/KVzvgbeX7M/6LM8yGd8beh1w808zxzjM/MPA+NxXNd5rl/X2BW5rnf/s/O
PPePy+2ZZ/s3faaRec4LO+PH+M7Hj/5wFn8s7+OvZVZn/I3c3xl/K38Z8x8y
zxv73Pf3QtyO7x+G3/V/1/cn4/h3luMYd1zn+6ux/EzHMY6e5jj7pHUrbvvx
/qaPH/f7svjj/SMffy2PdsbfyMzO+FuZ1Rl/Gw7u1/PMczwvMs/9dn5h5jme
d5nneJ5mnuN5nXmO7UDmeRqZ55zQGX9aj+riiXmosvjjcfHx13JYZ/yN3NYZ
fyu7dsbfhh/12+3Mc2znM8/xupB5jteRzHO87mSe43Uq8xyva8RzPs85rTP+
Ivr38ad1qi7+mFfKx1/H4+Ljb+QdnfG38khn/G2sn6syz7HfknmO/ZzMc+wX
ZZ5jPyrzHPtdpD4vzzwvI/OcJ3fGD8+el0LiF/tX9zf69/E38tXO+Nvo38eP
ec58/i32wzPPsd+eeY79/MxzHBdknuM4IvMcxx2kPufznNM640f/2cdZRv9Z
/NIdf1rXajnWw/j4sR6DzXOuzTzHcSVpn9dknuO4NfMcx7mZ5zguzjzHcXTm
eTaZ55zdGX8hF3XGj/5zFr90x49xio8/rXe1HOuLfPyY3/DvSW2Qfy/zfHF/
/iTzHPMIZp779cdztM9t5rnvP5/nXErmOR/pjB/ri3ycpZD4pTv+Wg7tjL+R
t3fGrz6z/l5J+Gbx//ntPN/pIa23JNsn5dk8YVqHZt/b22p+Ofue31bXZ9r3
+baaPw35v8CRn8G+z7cNW8Y8GMjHBI58I8grBP64yeuS9gP5c5D/xZdHHhO/
ffs+Xx/PkHLEb9/nm/bXvs83ebM+G83raH02mg/Q+mw0T5312Wi+Neuz0bxh
1mejecCsz8blccKnCcjLZH2m8tZn2r716ePR5+Q0fusz7a/1mXlTDm/Wc615
F63nWvM0Ws+15j+0nmvNd2c915q3zXquNf+Y9Vy7PFr41AF5oqznVN56Ttu3
nn08Q8oRv/Wc9td6zrwphzfruQo7x/wY1nOl+TOt50rzNFrPleYbtJ4rzZtn
PVea/816rlweM3yqgDxd1nMqbz2n7VvPPp70XCbit57T/lrPmTfl8GY9l+FH
MT+J9VxqXlPrudQ8mdZzqfkeredS8xZaz6Xm37OeS5dHDp8yIE+a9ZzKW89p
+9azj2dIOeK3ntP+Ws+Zt1Q+erOeiyAxP4z1XGi+Weu50Dyl1nOh+Tat50Lz
RlrPheY/tJ4Ll8cPnyIgT531nMpbz2n71rOPJ+VRQPzWc9pf6znzphzerOde
2C3m57E+e5oP1vrsaV5T67On+Tmtz57mmbQ+ey5fIj69gOdHrM9U3vpM27c+
fTxDyhG/9Zn21/pMfqzPXlgcn2dxPsWVVz4YyzvPQjwL8SzEsxDPYr2pTyE+
hfgU4lOITyE+1Y8734Wc73Js9/ku5HwXcr4LOd+FnO9Cznch57uQ813I+S7k
fBdyvgs537035cd2nu+lkOuXkOuXkOuXkOuXkOuXkOuXkOuXkOuXkOuXkOuX
kOuXkOuXkOuX95bKd16/KiH9MSH9MSH9MSH9MSH9MSH9MSH9MSH9MSH9MSH9
MSH9MSH9MSH9Me9NeXd/rBYyvhAyvtD8e258IWR8IWR8IWR8IWR8IWR8IWR8
IWR8IWR8IWR8ofvrxhfem/Lu8UWj+fTceFnIeFnIeFnIeFm+2T1e1jyobrws
h3WPl+Wg7vGylnfjZd2+Gy+7eFJeGTJeFjJe9t6Ud4+XW81P6OZzhMznCJnP
ETKfI2Q+R8h8jpD5HCHzOULmc4TM5wiZzxEynyNuHkw55sGQjy/ycH7MJ4C8
cuAzY94G5EcD3zXmx0CeL3DkIUG+KvCvx3wveG4cHN6QTwcceXWQFwYc+WGQ
3wT8+JjnBHk6wJGvA/kmwJF3As97g+O5b+TRi/VQ8+ltHfPBgb8q5g9BXjNw
5DdDfi5w5MP5QswzpduP+YVui/luwJH3BnlbwJG/BflHwKfFPCTIowGOfBrI
BwGOvBDnxXx2fV6Hc2K+FORlA/9yzEsT8/4oR/6fnWOeLHDkU0J+GXDkmUGe
FHDkS0G+D3Dk/dg65q0AR/6K82KeuD6vNF8c8p2BI3/RyTFvF/gJMR8U8rOA
I08L8oyAXxbzjSBfBvjamDcD+dT6vNS8asgLBo78VMhXAo68Jci7Ab4+5t9A
HrE+LzSfGPJxgCMvB/JZ9HlP8ycg3yU48p8gbyM48swg/yA48vkgjx448iYh
Hxw48lMhnwU48k4gXxU48lYh7xI48i8hfxA48gghDw448uEgnws48n8ifwT4
SMwjgbyf0afmjUH+SvBTY34e5GEERx4k5BMER74p5MUDR14v5H0DRz405JkC
R74p5EsCR94k5P0BR/4f5K8B3znmsUn5WfoceVp2jnk5Yz3UPEXILwmOfFDI
kwiOvFvI9weO44h8duDIC4d8T+DI+4S8ReDIX4T8O+AfjXl4kF8G/KyYZwZ5
MPu80jxXyOcIjnxiyEsIjrxtyLsHjnx3yKMEflfMp4R8QOBnx7xAyHcDviHm
vfnnmEeyz2vNexbzyil/T8wvd0TM9weOvHzINwTexLxDyKcDvizm1UFexT5v
NK/dXjFvIPhZMR8g8u+AIw8P8uP0ebrObh3zy4BfGPPAIF8MOPoJrj+j9/WQ
l6fPewHnr2tnNH8O8t38D1zbJdc+6Pbd72q7MWA+PcF8nfOgeWbc/Urtpzk/
cpH1oxx+nDflcTvKp8XtuP4PiSfN47n5PZ2vs3lA/H3hkYzbfBaJ2/wLf/c+
FrPeN3H7fHvi9nlsHw+eH07cPu+auH0+M3H7PGHi9vm3xO3zWonb54sStz79
cw0jGbc+G+KzIT4b4rMhPn088NkQnw3x2RCfDfHZEJ8N8Zl5y7j17J9fGMm4
9VwTzzXxXBPPNfHs44HnmniuieeaeK6J55p4ronnzFvGrWf/nMJIxq3niniu
iOeKeK6IZx8PPFfEc0U8V8RzRTxXxHNFPGfeMm49++csRjJuPZfEc0k8l8Rz
STz7eOC5JJ5L4rkknkviuSSeS+I585Zx69k/TzGSceu5IJ4L4rkgngvi2ccD
zwXxXBDPBfFcEM8F8VwQz5m3jFvP/rmJkYxbzz3iuUc894jnHvHs44HnHvHc
I557xHOPeO4Rzz3iOfOWcZZHz/kXt52svOWp/EvLv5bKv7Q8Yqn8S8uHlcq/
tLxOqfxLy0/k/fxPeXZS+ZeWLyaVf2l5T1L5l5a/I5V/aXkoUvmXlk8hlX9p
eQGy+paVtzyVd+0zqbeJu/aZ1MPEXftM6lXirn0m9SRx1z6T4564a5/JcSzI
8SrIccm8Zdz1N4jnknguieeSeC6J55J49vFof4N4LonnknguieeSeC6J58xb
xl3/mXiuiOeKeK6I54p4rohnH4/2n4nniniuiOeKeK6I54p4zrxl3I0Hieea
eK6J55p4ronnmnj28eh4kHiuieeaeK6J55p4ronnzFvG3fwG8dwQzw3x3BDP
DfHcEM8+Hp3fIJ4b4rkhnhviuSGeG+I585ZxNy9HfLbEZ0t8tsRnS3z65z50
/o34bInPlvhsic+W+GyJTx/nSMZtXhU/n5nPW9q8FYnbPAuJ27wAidvn2BO3
zwMnbp9fTdw+b+nnLfP5Sfs8m5+f3EB4um8Ofkr/ecWM27wSid8+9rsLMv6z
sThnZvxg81xr4vY50sZ5GM64fU4vcftcmZ93TffNwW1ejMTj88kZr8a8XZfx
ceZ50drt13DG7fOEiU8zz4/5+cx03xzc5pWo3HZmZdw+V1m5ONdk3D635nm6
b27jnJ1x+zxk4vb5PT9vk+6b2/jTfXNwm9cpjS9sfqLEZ5t2IPFxph1IfJlp
B3z5+Rm3+SASn2DagcSnmXYgcfvcsi+fj9dmm3YgcfscY+I2T1Ph9vfRjE82
7UPhPDyQ8dmmffDjnZkZn2DaB89XZXyyaR8St8/B+vHj+oz3PzjfShf/ioxP
Nu1G4jZ/ih9HXJdx226Ubn+HMz7ZtBuJ2+dOE7d5iCq3X0sybvO8+P78rIy7
9sR5WJNx154of8Hk60n9z5NMO5P4jaadqV086b45uG1nErd5alJ/rDDtT+L2
udzEbb4V3w9J99MHzEf7Lcrtc7xpO/Y53qz/k3H7vG7i7v5ywP1lvP847lf4
RVwPENcPYH8D1g/g/XngWG+A9yX3eR2Wx/UJeE8wON4XHNc/4Ljoew/xHj5w
rJeI6yuUY30F3sfc55W+lxnvIQY/J67fwPt0wfH+LLwHERzrQ/D+P3CsJ8F7
7MCx/gTvYwPHehW8HzoepYD1LXgvMvjBcT0M3u8LjvUzeE8tONbb4H2N4Fif
g/cUgmM9D963B471P3hvHDjWC8X1Rcqxvii933r0M3pdvnVsPRLe6wyO93Dh
/cTgWO+E9+yC7x7XR+F9seBYT4X3UIJj/RXevwiO9Vp4jyA41nfhfXjgWA+G
97qB4/1ueD8Z+HBcb4b3Vfd5T99bjfcug2OdG94fDG7XxS1VjuOF97mCY90d
3isJjvV7eD8iuF3vp+9P0/cU43114FhPiPeugWP9Id5THj3o+8Xwvk9wrHvE
+8tj/dH3lOH93OBYV4n3g4JjHSbefwmOdZt4D3qfV4J1nnjPNzjWheJ91eBY
RxrXnep1Cu8hxfs1wbFONa5rVY51rXj/ep/X+h43vF8cHOtm8Z5scKyzxfue
wbEuN67j1esa1vHifZ/gWPeL91aCY51wXFesHOuK8Z74Pm/0/XR4Dzo41i3j
fd7gF8Z1zngvNTjWRcd11Mqxjjquu9brLNZdHxTfVwqOddp47yY41nXj/ZHg
eI8k3oMIvm1cN473uPd5q+89xPvIwbFeHe/VBsf6drwfGhzr4fGeY3Csn8f7
VsGxDh/vDQXHun28/xIc78HEexzB8VwA3kcIjucI3HpjfY8e3scGvk03F/AR
k1cu9WfieE37FeCxfyWe2/xofn4g9Svs9puMx/6heG7zrCX+gskL5sunfoWN
Z03GY3844zZfXuI2v1visX+ecZs/K3GbNzmNo+N4IeNxfJHxOB7JuM3rVzoP
d2U8jo8yHsdTGe9/6ozbvM+F29+1GY/jwYzH8SPhD2fc5issXPwLMh7HvxmP
4+WMx/F1xm1+qMRtnuuei2dtxuP8QMZtPlxffmnG43xFxm3exp7zMD/jcf6E
lF+e8Tg/k3GbJ6vnvOXrKLrzgLN81iz/MssXzPLbsnysLH8oy8PI8gayPHcs
LxvLI8byXmG+LvXrwG2ezcRtnnQ/v9Fk3OblTNzmkUzctcPKXTvsfrfO+DTb
Drv9uifjt9p2WLnN8+7nK9Zk3ObX9vMVVcYr094mbvNm1s7bgxm/1bS3/v5g
6tfZ/VqbcZsHvHH7tSrjB5t2NfGfmXY18dtNu5q4zVOZ+CmmXfX30R7NuM0L
n+ZDLjLtZOv2d1XGbZ7oxG1e48RnmXYycZvPNHGbf7N1HpZn/Pemnczuf2Xc
5n3L3+MA/rFJD714wBf9fZE2TBkZnSfBfHel/P17vvM7P5k6Hee58g+v2HDe
/vvgPC+UT3/1B14/Zd8/uXbE81L5B812KuX7mN+tlZ9h4myUd+9XE+ZtO+dT
U6dfg+0rn/+jx65L9bJUftyTrzli5FS//rIJO08dHSem95WDv/7Z6VvPuWqp
268mfMlsp1J+h/ndOnETp+ZjDP794+B2f7WdCU/u8m+nbnH0ErdfdThtcHSc
7vsrddhu7wW7Tdl3lduvOkz7ymVLzl3g13nU4Qmzfc3bGfz76MHnm/1qlX/L
HMdS92PlYS//4OZ7+v5TFea89vRT0v2AnvL3HX7wjo8fsNrFU7k4G+XzjP9W
ua1vhcb1wgln7zFl3zXud8twxjWffvjcBWvd9kt33FvlHzL1vKe/85mvLHjV
0Yevc+ULd77gfO7J9tNe95H0nu70vmtbD2vlF9vjqPz9xlup3O5XodzGifO6
J0cZXkr3dirl7+88Xj7ORrndr1b5dp0eCrHnaa3c1vNK+X+YelUqt8dd8/bL
8r02HnP4XN8fLZyfUrq3Uym39blWbuNslNv90noil5p6ku5znW7Odx33iT2/
9H0QsvOMbf464ya/XrwUUv/J8fXb13Gfi0fPFyHni9jzBfFX8oF1q/9WTFrp
4q+EtBvu+Gq7QephJU92txsyv7vdkO7rYy1f725vhbS3pP7Xckd3+ym2/dTr
lJDrlGzXeR41Yq8jaT7HctxXboLdTqHc1U/sl79eK7fXZWy/DtZDodx6K5Vb
z/jdKuxljkuj3B7HNJ9jrxeIpwq2nhTKXbuh3NZDzSsebL1FnKXr/+h4yvVD
9LwO5Lx2v4v4/XWqUG7Pa80/H2w7oOd1IOe1i0fHle76pe1zIO1zIO2z96zc
tUt6nnVfp4pg221tnwNpn93vavscSPsc3tJZ/3uBXK8DuV4Hcr0O5Hrtj6/y
o7qv16H7OuW3o9frQK7XgVyvA7leB3u9TvMP9vqlx9H1K/R8cdeFNP9gzxet
/74/o9wed203ZJ/udkPu6G43hLQbQtoNd93XdsNdv7T9dO28tp9i289aue2H
p/mH7jhrmdbd3gppb8WOI3Rc4K6beh2Rw8x1RN9/J3Zco+M1md89XnP+dbwm
x3ce98b1G/U65a6POl5z9UfHa+66r+M1WWDHazGeVsj42h1HHV/Lu7rH1/LB
7vG1kPG1kPG1SPf4WvbrHl/LlO7xtTuOOh4NO5rzGv7b8CbLNX5SXt5EtjNg
Pvn9Jlve84Lw1D+xPL/fZLfveUF4SXjqn3T/ruf5/SYbj+cF4SXhFeGpf9Id
Z3Z/h/D8fpONP3sPHeEl4RXh+f2m/if1TyxvCK8JrwgvCU/9E8sLwkvCK8Jr
whvCU//ElSe8JrwivCS8IBx+svKEl4RXhNeEN4S3jLvvuh3C/fmvcRLu6ys+
/vjh4+NTLmQ7hPvn3/Dxz2vh458vwsc/D4OPX9eoHOeL+/fUD+wu7+PN70PZ
7XheEJ76gd3b9zy/D2V/1/OC8JLw1A/sjsfzmvD8PpSN0/OC8JLwivDUD+yO
3/Oa8IrwkvDUD7S8ILwkvCK8Jpyt420IrwmvCC8JLwhP/StXnvCS8IrwmvCG
ccRJri+eV4SXhBeE9wjHJ9uOdPOS8IrwmvCGlUd9Jh48LwkvCO8RrnGR/c3i
IbwmvCG8ZdtHe0X2N+uHE+7Hl/7jebrP5coR3hDeEp7uc1leEN4jXOMlcWbj
C8JbwtP9r+54WD8lGy9IN28JT/fFuref9WPlvy/P+m++f9QQXhNeEV4SXhDe
I1z/nbTb2e8SXhFeE94Q3rLyOF7Em+cV4SXhBeE9wvX/ET9ZPITXhDeEt2w7
OF+IB89LwgvCe4Tr9sj+el4T3hDeEp7u07k4CC8I7xGuv0Piz/rthLeEp/t3
3XFm/WfCfVw+nqyfTHi6r9f9u2y8lfVL5b/fDh2fke2kfst/Accau3I=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmWXAFdUWhof52MNsukORku6WMAFRVJSwW7AQAxGDlFbKDpCwUKQUu+N6
7e5uBRGUVEBBuM973/kx337OPvOdM2fvtdd611oNh1wy6OI0SZL7+VPCeH5I
kiqMX/D6QiaegFfB58Gr4OXwRfCT8MPwZfDz8JPwKPgF+Cn4cvhF+Gl4Avwm
/DI8Hn4D/g98BfwS/Ax8Cfw0/Ch8MfwU/Ag8P0uSV+A7GH/hdQO4CWM17ukF
94WrwofAh8K3c98w+D1+R3Xme8OHMT8Ofh1+CS4P94APghvBg+Dj4L3hI+Cj
4b3gfnB/uCE8ED4WrgD3hA+G3+c7xsBn8J1jmX8NfpH5K+H/wM/Ci+AR8EOM
7blGwpcyvxBeB9/K//7L+JvmuVoyP5xxOPdMgd+DX4dv4r56+l7GecyvKXgu
XBHeV2sFnwUPhSfD78KvwZPgd+BX4dPhJfA98AnwnfB8+Fz4IXgZfD78MLwC
Pgd+EF4Kj4FfhV+AB8Lz9PzwifBd8AL4DPgB+F74THgpvBg+Cb4bXggPgOfC
t8D7Fb/3QrgHfDF8CdwdvgiWce7magV3YPyXqyXcnnEXVwu4HWPg/k5wNziD
O8Pd4dJwR3g/eBNXXbgR4x6u1nBH2T33dIC7wpu59oEbM/6pvYebMf4lW4Gb
M27naqy9YryG/30Zfh6eXuz7c/DV8DPw4/D9xbo1Y782ys7gBowTmX8WfgL+
DFuaBO/P3A5eN4FbMW7j2hduwbiRcX1hJwcUtjSS+Q2yV7ge40+yb7g+4/dc
Ea7DuEbnBK7EuDr1Ga/A+KvOElyFsSefeQk8Al7LVR2upr3Ik+RUnVmesQX3
nASfynw3+EL4osKeh8JvcM8t/M4hslu4HPPd4QO5584SP/85vP8br2vANRjL
lOI5Etv0t9o/xuryCfx/LbgHEz/wuiy8N+M32m+4KuM6rppwLcYvueTLyvPn
a+09XJnxD646cF3Gn3WG4YaMP3KVg/dh/KrwfxVlb4y/F+us/dC+XF3s4+bC
FzWAz4TPKvyDzt0Q7Rt8Dnyu7Ag+DT4drgefLl8B14fPgM+EO8Kj4Mvg5vD5
8DC4KXwufJ5sDT5b6yZbKNb5bLgZfB58PtwJvhweJRsv8X6dBt/Gs06E52Ve
/6vhT1m8d4O/qwd7+1rw88t/zOW+0fAHzPXkvenw13Bn3rsCvpzP7AJfCV8B
94JnwNPhfvAN8BydzcT+TWvYgfnLClttV/hD2dhdfNdf8jkljjc/ySfoM5i/
TX45+pnkGxeU2Deu1fqX2K/KlvSb9P/6nOXyMVx/yL8xXlvsl/btTj5zKeNx
0Xuq/b1L/p7rRvi61L5UNij/Opj7vpO9lEmSnYm/9wKuNoWPkl9qW5wX+atW
xVmQH2tf+HadidaFH9MZKZ/ZHzZgXY/l85fw3gLm1vP6NO0N/HruuHUy/Gbu
mHRq5pgin7xStgyfCJ8M/yMfCvdkbMN9b8OLGOdwz5fwh4Vf+hB+C74V5icl
NeHr4W/gj3XmOIPbE+9Bp8z3a13LlvJ7PyfeI/mNcozTeO8D+E14Kvy+zj6c
c++WxOs+g/lPGd9Nvd4bC3tYXNjPlan36BP4ndQ2OrHwDzcz/wP8eep9qA3X
Tm0bvxQ+YbbsRrbK/Cz4c/h9eCb8Gfwe/Dfjai6WMrmJ+e8ZP9PnwN/Cn8A3
wt/pXMCl4IPgXql1heL+YP1ueAA8SA4GPpDhELgyfAw8EN4i+9b6Ma7X+YRb
M+6Ur5QvKWKKYk0Xxq2yFbiz1kfnX/alZ+bqqt8oH8nnHwsfD9eCj4dPlF+H
D4OPkP+ED4UPh9/IrV1OYX3KMh7O/JFaP/gE+CTtEdwX7pc69kk79ZEf1fmA
T4ArwUfDA+CKcH/4GPlX+GC4N3wV/Aj8IDwafhR+SOuZ2W/Lf3/C8xwkv8bc
x/CB8lnwR7lj2LnwZ/Ah8AXwp/DB8DD4/dw6YAj8Dty1xFrrn8QxQ2f13dwa
4kzmP8itIYbKfnPHs7Ph93LHqrPgL+DeOqvwisLG5Df25N6PtWVs97L/t3m9
ssQxRX4p8J2xlH2NbHBHYVflSvl59FyVCq4EVyzOTimtUYlj8e3yUXz3KfDN
jGkpnxmdl8oFfwxXKb7rR+1r9Flqx5f1i7bv9vAR0XbfAe4VrbNbwIdFn8+2
Wsto7dtM+xCtU5tqLaP1/T5av2hNX0/rFK2/68NHRfuRTrmfZVvi3943+sy3
Yb5PtNZsBb+dWx+cnnkNyhXroDUoW6zDW7k192nc0ztam7bM/bvLF7+9Y7R2
rMP8odE6uLVsJDp/aK5Fjz4nv7Ffu3OfvV/h7tG5hHys4sauwudIi0iTSG//
zHuD5IPkS+DB8FXwavlleDT8K3w8PDbz81cs/OP/97bQK9tz2/0s7tmW+zzM
hHfk1n+z4Z/gYxQ74R/hoxWnpWfg/vAo+HuttWIk/Dt8FjwRXifdBU+QXoJP
gccrX8jtL9bwe//OrSPnMP8HPASeBH8HHwmPhL+G+ypWwWvg4+Ax8DeyFXgE
/C18OHwp/Cd8qeKnzlpujXsdvCu3X1tdxvFtd7G2ymdGFvFUsXcP11VcG7i0
6Yqbyn9GFHH8Hj7rGng4Y4XCznW2FM//LT5zVRG/HmD8k7E073+V2EZkK2kR
k7Q3illfyhYVa/nMnblzxV/K+N7KRUzayvwI7rlGugMeCc+AN8BD4cnwdYxf
c+9HqZ+rSmH3G7nnbN6bwj2b4QvgafAmeBg8Fd4CD4enw1/JdqUVMvstrcW9
jD2ic+aG8oXROVWT4vsXcM+81Hs4H54LnwzfBN+Q+vsXwnek/p7F8N2pn+Ve
rX/qvZ0Dz0qdxynnWpT6Ge+B70ydi0nzXJ/apm6Gb0xt79fBs1Pb3S2KmXCD
aB2T85z1o7VOGbhutAYNcMNobRRz5xfKm5pKr0ZrvnK5NZj2UvpENn6H/GFq
7XOr/GFqTfQW/ArcKFpjlS32dizzY1Kv6zh4bGq7Hg+PS32epsJTUp+nKfDk
1OdgMjwp9f4vS1zv0FmcBk9Nbe/L4SXSRTxfZXhYsBZUPng5vLDQV9JZsp0V
ss9Cx36kOM64T7SOz4pzL/08LbW/mQlfm9rHzIZnSm9gX5uK86K4pHrC6NTx
UHpbGlv+aRY8I3X8lJZWvqA4Kc0vTS4dqzxlYupzLJ0/IfX5ngCPTx2HlWso
R+gZXa9pxHM2jtbo5eEm0TlJBbhytOb4m3NUJVpD/ANXiNZD2+BK0bphB1w1
WpvuhKtF5yG74JrROc8euFZ07qTAWT06R/qX+VLRWnYd3Cm67rAX93SJrj3V
hQdG68Ju8m3R+q8jvH90vWlfaYroulJjuHN0XWNvuEZ0Dra7jM91hSK29o/W
wZ3lm6N1YRftXbQu7AoPiNaO+8El/N/WxL6oYrQ+285nlo/Wgn/BdaJztpT7
m0fnS5UVG6PzE+VcLaNzpypwq+jcqSrcNDqXqwi3jq6VVIPbR9duasHNovOx
SnDb6DpODbhddC2mJtwmukZTXTlEdD5ZGu4QXaOpDdeOzidL6XdJnMC/8/yl
o3XwH3C5aC34J5xGa9n18F7RuW4J/xuideEG5stE68tN8r3ROnWz1jxaj26B
y0Zryq1wFq1fN5ZxXqCzcB/j2ty+b5zqXpl9guLp4tx5fhd4We66wP6Zaw6K
98oXlRsPTZx/vRmcO8ue3wrOzbW2qlPoHtm8am3DC//8ZbAPkV79Ktg/SIt+
EexPpF0/D/Yn0q7PBOtz7bXyZT3757lzZp19adpvg3Nq7bXyceVCykFX5q5H
HJQ5F1JOpLx1HfffllgzvBOc48t+/gr25/LfW+BFifXJ5uC4oJi+MTh2SM9I
hyv3UQ6r+ojqJMqrNwT7XumfTcFxR5pnee6ayAFay2CfLK2ieoH8ibT0h8F+
WHq7RuZ6l3LT+3LXULoy17Twh9IMD+Su6XSHmxR5pfJR1RBVE1Nu/jefeV/i
/LcU18rEcfb+3HWc/eCQOf9VTHuU+49K7FtULJIfVuzeE+zDpX8eCc5Z5Fse
C85ldPYfD87X5Iu2B8dNaaodwfFUWmtbcKyU7X0UHGuUO3wcHGuUjzwRnA/K
j90SnPfpvNQvYoT02NLcNbieyoe4/ptYK9bMXDOUVnwyOMdUDWlF7vrdgcx/
Euy3lcusDY7F0oo/BMcO6Yrvg+OCNM/4olYmbfZY7prgYcw/nrvmeDh8RVHb
V3yeEJxTS0M+lbu+eST3PJq7XtZX6527TtdHdp677tkfXpW7Ptgbfih3DbGX
1jx3Pe5Q+Onctcuj9Btz11WP0LrlrsP2g+8NzqPlWxYE57zyG/PhLol9wu3B
+bLy1NuC82X5mYXBdQ/5lkXB+bV8y/LgXFjxaBncJ7F/XgwfkNjnXBkc36UP
7wvO9+W37w/ObRXXlgTnxaoBPJe71nyM9jB3TfN4+JXcvYQT4OncXz9xDrI6
WF8pJquOLP0gHfEz89cn1th1M/c7lK9JVyimqBa0JljvSbf/GqzNlBfsnbkn
otznu2AtoRz2x2C9J23/dnDNUHHhp2AtJ23/YO767yHwXpl7N8oHn+aewYn9
/7O5685HS5sH6zfVKl7OXU8/Tmc9d539WHhOcH1D8Xo23DRxLvZq7h7JidLS
wTUNxYuXctfiBzP/fO46/gB4WnBPR3n3a7n7Oidl7lWoZ6Ga3Yu56/WDmH8h
dz9gYGZ9I7+kGuCS3HXhbszfyme2TRzLpOWUH6h2pfq7fI7y6F+Kerv2aFZw
v0C2vW/mnpRy59+ZvzZx/G2UuZ+lnHcn87cnjsXNM/d9lI83yNwLUy4sP/Bc
4ty2Yea+mHLYm4L7R3r+xoX/lD9skbk/pVz+xuD+lNZncnDvQ+d3SnDPQmdn
UnAfRGe8euEb5YdLMvdipJcmBvdHdJZvhvdPvIYtM/fgpJ1mBPdHdPYvDo4R
8tUXBtf/5XuHB/cI5NtbZe7lqSawK7gHpDz9qaKGLD+2NbgOLB2yKrhfoHrU
lsL+axS2p3xcdYAHCh+os7Y0uB8nG0gz96ek3+rIlyXOlUpnjoOKBcsKG1a9
9GH45MT1Up21iYk1Ve3MfUzVPWLm/pdqHR0z1zClJy8I7o9IV+wOzhGUg3fI
XNuU9mufuR8nTVhW8Slx/aRtZluVhvwnuLclfVUucy9MtZSZwf0p+cN2mXtz
0pnXFv5NZ+2G4F6J/MyfhQ9RrJ9d+EOdzXnBfU+do1eDexDKre4K7lfKL1XM
3HtSnlu5sEPludUy93CljXP4scS56oPBdULp9rmF35O/rZq5Jyhdrd6PegrK
++4O7pPK790DH5n4vCt2S5NIt98R3HuVr3g2uK4orTi/8MnyJyuC65DKL7LM
tUTl0c8F1zmlV1cG1zmVd1TK3C9TXaJK5r6k8pcymWuPysf/G9xnUR76SnCf
RfmjeljqG9RDb74c3JdRPjs2uJenWDYmuNemWDYyuKcmbXlpcP9IcXx9cL9D
unpccJ+uTxF/5QMV+y4K7m11K9Zfekb5/kvBvWnVxy4L7gNKa02F2ySOj6OC
e5TSAKODe47y288H12+VaysXVUyRbryq8NWK6S8E9wWUe/4PGTzEyA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmgW4HFXWRSt1qXod3CUECBqc4A7Bg7u7u7s7Ce5OcHd3DS7zzwyDu7u7
86/Fru+jSK2+1d3Vt+49e59z3tRb7LrGLnVVVRvwv9H495ymqubi39FKVT3c
q6pz4bnhBn4EXohjO3gHrp+pf1WNA28DbwcPhseGt4a3hWeAv+mrqvngheE+
eMe2qobDR8Mvc+1lfO5Xfh7HjrxW89panK/L+WRc38Drdvc3EP6AzxsXHgP+
nbFxObaFt4dnZPxj7vcoeGU+9x3GCsfa8HqMD2D8Ul7/Et6PY19e+5Trj+F8
VV5/j2u/hk+A14I/hEfn2BTenGun4f0f8f2TwgPgPxn7EJ4EnhT+A2451oM3
hKfg+jHgzeAt4Gnh0eB14PXhyf08vu9IeCW+723G+nNsAm/G+NSMjwlvCW8N
Twf34I3hTeFB8Hm8fx645f2jGPuO+1kAXpTx/oyPxWtbwdvA08N7cf1Y8Pvw
DYz1cWwEbwJPxXg/eE14HXhSeAme1zTwYPhGxj7h/UfDq/B978LHMT4Kvp/x
n+BD4SvgS+DP4ePhR+EH4J/hE+Fn4cfgX+Gf+LzTnS8+71PXFux6fJX/XQ6f
wPXPwI/Cv8B7MD4G/C58HXwI45fDF8OfwbszPjr8DnwtPJTxKeHp4HP5jh0Y
55/qNfgKxveEx4Tfg6+Hl+T6aeEZ4ZvgA+CR8LnwR/Dh8HXwlfCX8MHwZfBF
de7/IPhS+EL4E/gI+Hr4KvgreB/4LPj0Outtb/hM+LQ683kkfAN8Nfw1fCB8
IXwe/DG8H3w+fDb8Abw/fIH7ts56PQy+Fr4C/gLeFz4PPgt+H96N38tjrd6G
r4F/hE9zf5Xc7zFcfzt8E+PfwX+znlaF14An9o28thr/rAlPAv/F+Crw6vBE
8G/wcvCK8Hjwr/Cy8ArwuPDP8NLwMHhs+Ht4UXgJeHTjBfdzIrx2yXz/1eT3
blEy3z9x/VB4aa4fi+t/gBeDl4THgH+EF4eXgseE/4RXhleDJ4T/gFdyv8MT
wL/Dw9x/8PjwTnwf/1VvwFfxfccyH/fDd8I/wjs2iZOvw1fCRzN+G3wj/C18
FHwrfAP8DfwLn78MvDw8Dp8/gvH74DvgHxj/mc87A96oZP2ezviG8MaMT8n1
w+F74dvh7xn/s8nz3Lzk+e4Mc0n1JuNX+31N1tPGJftvdT7jGcb+y2tzc+Gi
HJNzPmW3f1wPxrO34DW59hX+PaNkD7oXf+O4yvjAa0OcP/hq4w88Z//czzXG
K3gueA2OszifmNd2afKZZ5esOb9rb46xXa8l+7Hmfm40vnE+NxcV+CbjFTwP
PAH8ELw3vAh8Pv9ewLEbrz3BZz3FsQfnQ3htJMf4XP8gvBfnC3P9i02uvRC+
iGM8xh+A9+R8IeMxfLN6Bc8LD4ZfgEfAV3Jcy3GdWtLN31pcczX8KjwrvAjn
F5fcw0t819qMXwM/B8/O+HQc/1HveG05xmaEX4SPhYfBM8EvwcfByztXbfTp
khJ9dQ2c596ssjb8ri84/4tjdzWC1/7F+RG8vjTXPsc97APPU6LHj8O7ei8l
+nUm128Bb1Vnvh5lfGd/S4mePAbvAs9Woj9TcP3T8CHwkvBA+Cn4YHgJeHL4
SfggeCg8M/wyfDy8AjwL/Ap8Arxi/8yZc3civBI8Lfxv+Ch4WXhC+GF4H3hR
eBr4/+Aj4WXgAfAT8IHw4vCk8OPwAfBi8KA2c384vJT6B98D7wov2D/P81l+
+/NqBmNjctztWuX1BdRr+C54Z3h++M4m+j9VSfy7q4meDyqJf1c1iYfjlcSj
K5rEw3FK4tG9TfR72hI9fbCJXxlc4mfua6LP05X4nfub+KfpS/zKA0381Qwl
fuGOJv5gypJ4e3aTeFjDDXxyE/3/XS8FX9gkHvdnvAePbBKPeyV+7IIm8akP
buEzmsRTRbLAFzWJj6OX+ImzmsTXfvBo8GVN4uvYJfH7xCZ+71cDCHwSPD+n
v8H94Cub6Mm4JfH59iZ+ZoqS+HxdE/83UYk+DIeHwN/z/r/Ve3gw/Hnntw6F
Z4S/6PzY9J0fGc77fzM+Mz4H/B3jf8HnMf4Y/GCd/W1s+tD7NYbrobh+J85n
KfFD+8CD4A86v6lnvYKxb6p42Sm7eH5YiZ/ZGj7M/VIn3tzUxA9OVqIvNzTx
f5OU6OH1TfzpxCX6cGMTvztpiX7e2sSfDSzRq4ea+O8ZS/ylselH+CeO60ti
93uc/6wGlcSq732c/YhzPkPu7054J87n657vgvAYxoJeYqrxco4SvzqZOUAV
/2B8P7yJfnwN36FfgaeAv4XvgufoZT8+VHfxrZf9p34ZPw7g+gnhT+CbGZu9
l/1+X534uD/jE8Afd/5r1l7i+T119v9svejBvXXixX5cPz78UedPB/eyf2+t
E4+m6UVfrq2jBzP2st9vqxO/hvQSTx6uE3/n7CWePVInfk3bix5dV0d/pofv
gG+uE2/cbzPBf8D3MzZDL/N7S534NHUvfu6aOnozXS96c32d+DZzL/7irjrx
apZe9OnuOvH8QD5/IvhT+BbGvsBPzK4W1dmfX/Vlf8xbZ/9/Dc8LL1RnP1/C
+xeGx+J5Ps77v+zLfpinzv69mvEl4QkYf4Lxa+Cl4AnhJ+FT4VnUG65/EL4Y
Xggek/HH4NPgWeG/GX8I/rwv+3H2Lv580pf9M0O3f92vk8FfwrfpV+EB8Ffw
7frnJt7hM/hW+FPeP4P61MWTz/qy/2fr4skRXD8Q/ga+k+s/Znwq42e3309h
fGb4T/gB+Nu+xKNF6sTDuXrRs1F19GlS+Bz4zDr+Rg/TJ5d4m4Xb3P+Azj8P
dE7gkXX8w+TwRfAFdfzLl032z+q8fzZ4ql780+V19GYi+GT1EJ5dP9vk89bj
+jng8fT48H6Mzwx/3uT+VmN8Vv1zk+9bt+T9U3R+8dCSfGnKXvzbZXX0bEAv
+cT5dfzWM7x/L3iukvzwWT2a66skf5+E68+Gz6jj/6aAr4QvrRM/nub6PeE5
S/LTf8H7uh5L8vGJfQbwSXV+zxuMHwsvWfJ7zMHNxY2nlxsje4mfh/L6LIx/
0OT9y5fwhL28f3id+Zy/TTwZr/Pj87WJH+N0+d28beLDWHXyST3Z695PiVdb
oM3+mqDz+4u3iWfT1MmPF2uzvgZ1+eEibdbrwDr55abwAd3zec58l/udHv4F
vg+euxf/ZP6q35mnF3/yBLwyPKJJfv0jfDdjg3rx0+Zv+pUJ4BHwMXWe93y9
+KGn4FW9/178pR5fr39sk/z1J/gexo6Dp1MP4Hudj1784pPwKs5fL/7raXg1
eME2+2+iLp/4ivcfD69Zkm+ey/jXVTzoWZx/y/hJnK9Tkp/qAczl9BB6g6LO
1KkpWVvSQ7/D+ekl93sT//4Jf17Fo7un3dvGEL3DxJz/wvkH3R40Zhm7jHl6
kWk5/834XyWnmIvPf5vz00p+zzElc+Mc6cWfN+6hhT90a0APrZf+rEoOMSfX
vMX5qSXz65pybbmmzP3e74tf0DeY2+iJrLWooWqpMcXYogfTexmzjF3GLL3R
BW30WF02lzBGGivVELXEmGXsMmYe3c2fue7QKl7PGGosnbqKN/IZz9/Nr89e
DTeXHdbdjzF6ZbWtSuy2preM2tc9D9fognVqSK5dNWzR7v69H2PmYt3vM5bq
sYx9xkBjuXvMveYes7biHnIvuSfNpY1/x3G+Rkn9Qc9mrcycUy+3a/NPSeGf
OT21jYYMraNZaouas3gdzVGL1LBV1OYq2mZ9x2f/sde38bTWGo3xel1rItZG
rCFY27NGY63m0iq1J9e0tRRzate6Obi1pMuq5ObWRKzlXFKlVuKede+6h+Zo
k2Nb67IGZe5tzcJakTUZaxkrlMQ+Y5ix7E3GT6izZ95rMid6KzXCubIGZC3I
moC1Nj2s+Yr5u97WmpG1I3N8a5fWDE+pU8OxlviWegKf6pw2qYGeWqfGZm3U
PWotyZqWe1eNMDYZo9QOPay1OWtuelvzRffGH8YMrt/ee67iMU8211Ln2U/f
VsmZrR9Ymx23G1+ozd71Gfus1VD3sa+d0iYmG5vHq1Jv0D8bC4wxxho9ttrQ
j++41FzQPVAlRzZXno3jtSp7amQbf++9fMdxfpsY7z53v19kLa3Nue/xvf4m
f9unHGe0ybE/4fx315e5u3u4X2rU58DzcDT94rnNH98w5tepWb3bpEa+bB1P
Ze3cmLtAnRq6sVjNVXvVbGsfegS9wsVVah9qprVsPb5aqkaqLWqM2rldyXp0
/TZtNFgtVuP19nqQkd16tbahZqvdegZrOdYArGVvVqU2YM5vLdmc0lqAHsBa
8dZVvIEewFq+OajewJqAtWlzYmsF1his/ZvTWnuwPrNlnRqD82kOYe178yq5
hR7BWrY5r95Bj3Vmt/6tLZljnNXtR2tLxm9ry6O69a/n1nvrsc39zTHMNfTw
1lb07Hp3PZ21CD293l5Pb61FzVP71NAhbWK8WqoGGvvV6Ee79W+twpzE3OSR
Tj/MYcxl7u32izmEuYQ5jrURPbve3ZzF2ow5i7mLOYu1DHMWc5eHq9Q+9Px6
fz2/tQtzBnMHcxhrHdaA7LVs3613cxpzG3MYay961lHd/rXWYg9guToe3t6A
nk/vp+e0tqHn1HvqMax9mGNZ69aDmHuZY8xcxzOYe+hxBnbx3tr6D3VyjSGd
/pjzzVUnBzAX1IPPWSdn0Jvr4Wep44n09uaMQ+p4cnPJazo9UQ+sD+qx9Frm
mNbm9UT6hzmreCU9id5Ez2bt0xqmtUw9mb0Bc8qZ6nggc81/csJOL80V9XR6
Oz2dvZAP6+jpoCq5vjnIHJ0em5uYo8ze+RH1zh7H/d16mKhNTmluaY5o7XHf
ktrvrd24OZ+5nzmotUdzPnO/W6rUuvTEJ3XxWu9vjmmuaY5o7XP9knh+Wqc/
ekK9oTV+a1t6YL3wcZ1+6JH1zod3eqNGvWEsLtEuf+9YnV47H9Y0xujir79f
j6nX1GOba1h/tBZtDWLBXnKMEzs9M/ewRmLvyBrOqE7vDoOP6PTHGvUV3Xpz
P/t7Rnbxzt9rTfv2bv/4e7Zt0w87nNf+x9h2bfp5R8AvwNu36T8dCb8I79Cm
f3cU/BK8WxttNSYbmzeDD3Rtq9nwrm1i9XHw6/DubfIvNVlt3qVN/+9Y+DV4
c/gg15IxA94KPhQ+WE2GV2zjvVyjrtWV2sR6PZnebOU23koNUAs2gjeAN3LP
wlvCh7g34P/AW8AHu/eMSfA2bebSOX0evlsNNZboa+Gd2/jzEYy/Cu/UZi24
Jl6BX2tSD16iZH7UMLVsvpJ85d+M7+j9lszP803qwQuWfP8LTerHC5f83v81
qQ8vVHK/9jDu6OLh2G1i6pucn1ISa//bpJ62QMn8bdImlhnTnu2lZm7tfNGS
3/dyl08uVvL832ry/JYu+X1qoFq4VMnve7VJvjq0ZD2s0qb+oafV26rJzu9y
Jeth4zbapEY5f+80me9lS9bDK03y4cVL1tvbTZ7/MiXrwZqKtRVrnNZOre/p
rQcw/hTjq7bxynpovXTbxkvuUNIf2quNt9OT6c32bOPN9HB6uT3a7HX3vF6u
r4233LGkH6fmq/3bl/SX1m7TTzPmG/vXaXM/5gDmAhsaQ6r0o70/a0bWjqwB
Weu1eaQX3Kqk36jmqX1XdfmJe9j1t2LJ/fzdxNtuWdLPPKlNLV2Pqlc15hn7
9iuJla4J+6W7l6yVcdr0Q/co6adN3KZ/tn9Jf3itNtqlh9JLGROMdbuVxIo1
23grcxhzGXtBejdzSHPJpdpolxqgFizdRnvUNLVtmTb1JDVJbVrBGFpFw9Sy
ZdvEfmO+sf/mJrnG5CX7dfU2uYk5ibnJ8m20T81T+4a10T41Tq1bro3WqSlq
i57f+DGsJN6sp4ZXyWnMbdZt833mbOZuq7XJfczBzMWs//o8ZyrZPxu06dev
Xade599Q+LcUetiZrVkxvkiVnMrcav028WOtOvU+a4bzdvpqfmnObC3AfNlc
2s/0s32PtUFr9vZWh1ap5bumXFvWuN0L1vDttdoDsbbvd/hdq1epNY5f0ju2
Z3JV5ycGd/5DfbenYS/ZHoG9Dnsg/u2GNXN7I/ZMNui+z16Ka9DeumvMtemc
GFv0z86VPeMrO720l2wPxb+9sMZub8U9eWOn1+5V95i9b9eke89nbqx2zm/u
7t+1t2T3e6Yu8bebVekNWaO3t2xPxNq9MWtEp8/GMmOM2qPGGHuMKWqNMdxY
Y83f3vmwKr0AY5SxSv9s7LeH4N5evptveyT20pep0juxh2CvedkqvQV7DPbe
7QHd0OUP13f+wvzAHsKG3e9zvowpN3T+xFhjT8q/xbFHYa/KGOHfJriHjR32
tPxbEXs29rrsgVmvWKJ7vmqE2maMVTvUELXTmKy2uOf925BRVWKBMcFeuz2V
cTo/pf9+uIpfsue2Zree7urmf61ufTo/apbaacxWy+zX+LdGeoSFe9EgtVxN
UZvs6a3RrUd7fWrQYZ1/UpvUSPMva7Bqpz09/9bAHpi9PjVTb6EmqaX2g/Vf
h1Wpj6m5ehM9i1qsZg3v/JVapsbobfQ8ao+ad3jnn9RCNU2vowdS6/4f39Wv
JA==
          "]], Polygon3DBox[CompressedData["
1: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
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
KnBP8yPcg9edGbxfWuu3R/dJqgslgnucNsyfHdxfPAPfBL8Fd4CvyuqIcov6
LdXZsuo5grX6EK5pG6zDB8NtgnvnQXCR1P6LerTiwX1TK3gz9/Zu+B74hWAd
+x7cIljn94cbBvtsr8ONlNPhXnDjYG/tjQL/Bn23K/k+pwb3aE8zvzXas1Df
tzRxn34nvDpx/14efjzYl+utvc98WfgueEnivVmuwL2jvufeIr7Xuufqa5oE
+3h9tGZSeyvqNx8L9gNfg5vBq+C+cPNgn6FfgftOzTflvc9J7bOoD60TrHl6
wlWD+5HuyidZfla9UF+rtdRemj+4r3mVax4J7pVehqsH9zWvaD461yin1ZKG
1vXqX6P7SeWQo9G+m2pE0+h+Xnvnn2gPTvXiCJzkuzb9He3ZqYY+Gd3nK5+c
mNpHUy3+nfmjOeuHoqk9NWmG81N7Vaopeal9OtWgFtG9sbT9m3B+vvdg3+xz
pZf6wLl815QZ0f2S1t4huEi+tVCzaJ9FOa1qdD5V/mwe7Xcopx3O3l96oHRq
P0i1tUm0n6L8dnJqb05644zUXqE0wPjoHlXP/fFoH0T59vTUHp+0xNmp/S/p
hLNSe1XSErnU/pfqdYNoX0a55czUPpd0wkfR/aHWzCmpPUHpq1NT+4bSPC2j
vQP1Pg2jvR7Vr3NT+32q3aVS+4PSDyVTe3DSKiVS+2XSKsVSe5TSV42ivRvV
iNNS+6TSQp9E97rKXb2z+6xc0S/aw1KtHxDdJytXvB3dV0vzPxrtbWlPDY3u
w6X/J0X3rsqZPeEjOdfu17I1o/zwKvx3znu5B3w451pwQmrvVfrw2NSerPyN
2dG9sXJgktpPlE6eEN17a99Nie51lZ+nRveiypP5qT1H6d6Y2m+VLp0Y3cMr
F4XU3qv07TGpPW7p2zS17yxN+wrX/5VzLS5I7YdKY7/M/KGc62DnaP9LNWtg
tB+h3ucgXCjfun1atC+g/PknXDjfvcCgaA9CPc6QaH9Efdb06F5auXdWtNej
mjI42tdQv/ZG9j7K7a9nn6VaMDM6L6geFU7ts0tbto7WBKqVx6X28aXhu0T7
j6qzT0TXctXWbtHepep412i/UvX6r2zPqjcplNqvly7tzvyfOdf637Jnrf6i
cbSPKd2yOvrsSr325mhvWv3p4ujzKvXpS6LPjdRfj432cFUv5kR7IqopY6I9
I9WOLdGetXquH6LPOdQbvhitKaUJf83WpHqlRdHnYer9P4j2hVV3Rkf7Tcrz
70f7U8rDC6LP6uRFzIs+k5PPsDT6TE5ewdzoMzx5EXWi/WLVpoXRZ2zyKz6N
PtuTj/Fd9NmVesxV0Wd48iW+jj7LUX9aO9qDVs3aG32epF51d/Q5nPrcXdHn
dvIKvog+t5OHUD3ay5Yu3Rl9Jiev4Kvosyj1rdujz/bkG+yJPjf6X28bfY4l
j+L76HM19d3Vos/PpHtrxsxDhztF+6rSbz9Fn12pH9+XrQf1TQey/a6etEbM
PHfpuugzNvXd+7M9pX7ql2zfqYd6LNrLVn3/PPqsQj3g/OjzVPk8o6J9f9XZ
dtFes/qL56K9V/UIz0b7quodNkWfkag3Hx59nqc6uy76DFJ+zobo8zB5OBuj
z8nk7Twd7f9KJ6+NPsuUJ7Mi+pxSHsuw6HNE+SEro88y5R09Fe0LS3u3ivaa
pbE7RHvi6o/aR/vm6qGej/ap1Wd1jPa71Wc9E+1HS9+ujz5DlUfUJtpHlgZ+
L/rMUnqjbbQvrz5rXLTHKo30bvTZp3TpsujzY/ldy6PPWeUR1Y0+P1B/dFLq
8zP14/Wjzx6k90ZEn4NKn7wQ7aer7/svWNsqTQ==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmWg5dQVhd8lyZy8h7u7FXcpUtytDO4zuFuLO4UWKcXd3d3dZXAYHDrM
ULy4l1Lo972VH3cmX5Kbm5ycs/bae78Zt95j6O5j9fX1bcs/Nf8/PqSvb5Fe
X98twBv9fX1vw2vAI+D34VfhleBH4DHw9fA08LnwU/Bj8MLwzfDr8J3w7PBl
8AvwE/Ci8K3wm/Ar8Irww/Bo+FF4Ifgm+DX4Onhq+Bz4SfgOeDb4Uvh5+HI+
W7D9IPu2LH1913J8KrbPZt8THLubz0Fs/5N9B3H8Xo7PxfbV7HuZYzfC08Hn
w0/D98Fzw9fAI+Eb4Gnh8+AR8K3wzPBF8DPwc/DS8L3wKPh+eB74WvgV+B54
Tvgq+CV4JLwC/BD8LnwbPAt8MfwsfDs8K3wJ/Bz8LLwUfI/PAD8AzwtfB78K
fwpvCr8Bf+L98dmmYezY92ee9+8l5z9T5fmOLXn+x6uM5zEl9/dolfG6hutN
CZ/J9R6Hj+QzCdv7sm8I5x5f8nwjqozH3+DfwffDj8F/LXnf98KPwue03Bu8
L9e4Az6uZHyfrDJf/lLy/LfDD8GXcP4Y+HDOfwC+CH4XPhS+D76gzbs8GL4H
/pzPFGwfwL6fufdzOf4m2/ux706OHVUynndy/Yd9npL3dyv8IHwe578F78/5
d8Fnw6/D+8C3w2e13VjCt8EnwU/B28PXwmfAL8J7wDfDp8MvwLvDN8Gnwc/D
u8E39mfOvMhvL9jLXLrQdQEv4JoZkjnwUpU14Nz4E98/gu3pOe+E/sz5kVXW
qGvBOfJylTXn3DmT819ie0/Ov4Vjp8BPwzvC18MnwA/Dw+Cr4H/AT8DbwlfD
/+LzE9fbhH1vcb2LOT6a7cM4fj/H/g4/BG8FXwmfCD8JbwdfAx/fdmsRvqI/
c/ADeGiTuXkyx0fAO3D8OtcXn13rbow490KOj2L7EPbd6/yE74Y3gi/tzz2t
Dj9V517/DW8Gvwl/Cg/jd76F/+tvNNnXz7Gdezn3cK53Fdsrs+/c/qyZlu2d
ellLR3L8GrZXZd/5HDsCvhpeBT4PPgy+GF4WPgf+lu9sA4+G/+34wevBL8If
wu/Aa8JPwx/0Z456Lx/XmbsX8FnbucK+dXj+f8Azwn+Bp4b7muxzexo+Z7A9
P8dP4fgC8Ptcb322X2LfR85fPsvU3T2W7OvVuUfPHbyHKmPmvanp/6miIWr9
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
YTDHL/GIesNNmnhHNcncVY+jVqlJq9WZw2qVnnegzhrTC5uT/L6OppmruKZW
r7MGXGvvlHhRY4SxwhhuLWSwRlKS0xsn1eTRJZ7GWo2eQa+jZx67zhrWSxvD
x+vyJWO7HnScOpqmN/0vvEidmDYLx3+GF64T02Yq8WTrdOOhVzMGHdC9H2PT
C53+b1pHf5/r9N58z/VrjNm/m1/OF2PMXvDLvcSe57t4sUmd9a+Hc/xv6cXb
PVWiVb4j39Wj8JXwSnXi/ROd/juGjuWTnd44B5wLj3V64jvyXbkGXAvv9eJF
5mcs163jafQ2z7rm2F6/jn490unZinXi/cOd/qxQJ96P6PyQ11B/nu70bWgd
vXim80fr1dErP257jlrmOUO731drvMa63fOrbeZg5tKDOTb8H3ihOh5ohpJ7
9F79DbX3J44vWMczTVeSE1orMucwV3yo07Pl6/gncxBzdz2/uYme2tqPHlyv
vWyT2pbz39z1rW7+OwecCw92+rtcHX9mDJu8To5mbNPD7F3H8+ltzKnMpVdv
kmtZU7C2YM42u7ERnrJOzjh2iYb/1NVL1PZ/lNTqrOlZ23MOOBd8R3rBmzr/
psapdTd0fmxO+Ov+5KilTowwd72a47v0UrOydmUOOaROzDC3NMe0XmUNydzz
+pL6whzs+4pjt5Tk9mqu2ntzifaq4Wr5jSVaq6aqreeU1PPfq1LvN0du6sQg
c+ezSurVo6vU488uqdePqVLfNweu68Qwc+PrSrRQTbTWM393P+M18TJXldy7
z2Dt7dySXPFfVfoBt5bMFTVb7b69ZO07x5xreoL/VvFQegVj5vdVcnhjqZ7o
f1U8lV7pmpLc1ZqNtRs9xC9VPJLewhj7QxXPZew1xzW3HVMn972L75/VS8wx
9txZEnvUKLXq7s4PWr/S31uzsLZpDm0t444SLVPD1LL7Or+yZB1/f3/nV5aq
4+8fKPF6S9fJV24rWVuuIdfSPSWxWs1Wu+/t/JAx3Fhuzm2t5rY6ufh5JfXS
j6v4bz3gr119S294Occ376UmaG1wgia1TXN0c/XLSmqF1gitFZrzmyu/XKcW
4Jp17brmzIWuLBk/a47WHtUktck1bm5yacnacQ1Zv/1jE/0d2emfz+yzOybm
bmqcWqfGmes4Ro6VY2huZM7u/Hm0Ti5/cUk99Osq/STH2LF2jMytriiphVoz
tHZoT+aNKjUVaysXldRvv6rSn1FD1JJLesn9fMe+63O6eH+Zc6aXmrP51Ikl
tXhr+NbyTyqp1Vujt1Z/cokXs4ZvLf+Mkv7R21X6RdYTvTfv0friKSXvUw+n
l9OzW5+03qmXP7+kP/dJlXriJSXv55sq/TlrdtZeLq9Tyzu9pJ/0VpX+1hHw
r77fXvIfawCHd/HI2sCFfNZi+99V+lsXlNSzP63SjzoT/gP8TpV+1GDNoIun
1hJOK6l3vlml33ZqST7omDv2y3TzfdomucDjJd5Dz6J3WbuLt3M3qR1a01m2
ex/6IWtq9n8O7KXWZo1m1c7v6N2XbpPrmvNaD3OMHWvHwF6dNW5r3eY005bk
QJPVqSGaG1lTfb2bHyO6fo29o8Ee0pDUxK2NmyNNX1KTmLRODdBaxWDNqvNj
1rK8B+9lpl5qddaw7EUM9hhKNFgtVmPtxaqJaqMabe9UzVV71WR7reZ8rm3X
+GBvpE09+KMq+eNebeop0+pR4c3baLUar9Zv0UbrjTHGmq3axCL12VizZZvY
Y4wyVm3XxrtZ8zbfO6tbD2qgfvPFktruZnXyqzXa1KO9R+/VmtOt3fObz1uT
W6xbT9bqhnH+rr14VL3q1m28ox5Rr7hNG69ojmKu4jP6rP6GufO2bXIXPaZe
0xqpvc05u/VtjffDKmNk7Xd4Gy+sR9Wr3sj/71apwVuLX6ZNLcNreK23u/H2
96xtWFO7vZsP1trMwex9mmOZm63YZu44363HW/OwV2qP1FqIPVB7ofZk7aVb
I/gSHtpL7cB+hFqkJtnfWKFNbcY56dxcFp4ffr5Kfd8c0V6nPVVzR3s09mqs
mc1You8LdH5MPbMnbG/Ynq69cHu69nbt0dr7Xq1NLcQxc+ysUXxRpQZv7cIc
0lzSHqu553Jt6s/2NO1fWIP4vEqN2tqEPefHu/dhb3/lNv2JUVXq137nha4/
6virYWqZmu7fHqjJX3XjYy9dDVKL1EB75eZLy3XxSL9qz8nekzWOmUs08pNu
vdiLMUZ83Y2vf4vwYJ3x9/nsNah5ap+aZ6//iW4+OSesd6lpapua5t8WrMTz
LGMsqNKPUGPVWjXQvy1QI9VKNd9e/ipt5ppzbng3/17s+r/+LYTv9PmuP2wv
x5rRZ1V6HtaSrCH82PVrrS3oKfWWesIJSno49moHe74lPVl7s4M93JKesv07
6+3WZVzTrm37W9Z2zJk27vy3empOZW5ljmStS01RW6xhTmrsbXMvxne98npt
vJX36L2a3wzr7sd8yhrdznVqitbu9LB6WT3kOOplG6+mp9PbbdzG2+lh9DKb
tPEyxkRj4ysltQBrAtb3NuD4Fr14Rr3jhm28ox5QL7hum1qsHlIvac5n7mfO
aC3ozZLc0pzR3PEN+JVecghziddLvIsexlzyOK4xTR3NnZhjx8JT1+m5TFji
d4yvY7r4aI9l4+73rE1WnV/9qk4vxJ6YvfnBHnuX/wyvUyM1X722JPYZA+0n
v1xSr926Tj1rsKfH9iO95Etqstpsjmwt7KWSa3lN6+evlryLnerUS0fCj8Pb
1Kmnb9Hp+5JNepGvdfmT79B36Zjv2Plfn2doG2+ux9Zr2+vSa/zMZ/uuJutv
+c6s1e7ZZqwcQ8fSNeRaUiPs9e3cJrYao43VrtfRXTxUD3Zq0+8zBhuLd2zT
r/NvWKxf7tImtpsTmhua0/j95bv1tmXnB5fo9N01Ym1m6SZrZze+f1AvOaG5
4a5tckvHXy+yR5vak+/cd79Zm3qoOZK5kmv83e731Jd12miNmqP2+8627t6v
tcm122inmqv2+o6Gd+/T+oDvxHfjO7f3YT/eXMc55FxSU0d18cxe4Q5tapf2
qK3f2nOw92ANd3K9HcfX7kVj1Jrd2+S+1tSsra3VRnvUdLXdHr29emvGs/L9
/wPniSQT
          "]], Polygon3DBox[CompressedData["
1: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
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRkEUANDh89n3CBFBRKKjUvILqJR0OgpK9GJpCQoVQYUQ9BJK+74v
UUhEpbAWnEkk775z52buezOTqensbetJCSGMinxJzLO9ntiVDKGQfazmEBs4
wWbOsZVr7OBMegg/7BbxQwfqA9JbjvCVU/zhQvyP+Rss5zan+cZCvcfMZarY
SQ3hxHiXp9zjGfd5zgNe8JCXXEmEkNB3JU/jkfq1/Jg3POEtT3nHM97znA9c
1P/OIr2PzGNSNFrfkXEdt1jGdWZynl/2NckXDnNWPUVfv/w3rlu9i5ts5ypb
4jw2cZz1HGQVx/Q/s8A3CpjDb9ZaZz5rmMdq5rKSOaxgdjxXZnHZfr7iOsWn
KFXPYAn9IhQzGc+dafEeMBHPn56wZPDxfz/+AKuZQ10=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssHlAYBuCjP34kOtT9zkQsuomFTSwMErGwiDBUarAxubUo7couYRZB
RAhBREQMjIi0pRe0pBGhpM+fDm+e7yQn5/tyzilp6258GxdCGJboixBeWUT4
h9OJIZRwjq+5zhoesIGnbOU1u/jEPqZGQ3gpY+pyTrGKs6zjIpu5zQ4e8Yz3
TNb7CxP4xIH4EL5ykOcc4gWH+Y3v+J3v+YMj/MlRjsml+gOvOM5rTvAXP/I3
P/EmNktCCA9M0fuWiXxmv9k+s4eHbOcWm7jAWs6wkpMsY6mMxs5iLx/dzRte
soXHrOc+q7nGCp7Yf8ckvYsZz7/ci4RQxF0WcocF3GY+N5nHDebGzuOq5KhX
mM1lZnGJmVxgBueZHntnprHTPTzG/f8P/wAbRkqy
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1385, 1679, 728, 1384, 2212, 1589, 1386, 2213, 1590, 1387, 
       2214, 1591, 1388, 2215, 1592, 1389, 2216, 1593, 1390, 2386, 1680, 1594,
        1391, 1681, 2019, 2387, 1392, 2217, 1595, 1393, 2218, 1596, 1394, 
       2219, 1597, 1395, 2220, 1598, 1396, 2221, 1599, 1397, 921, 1600, 
       1682}], Line3DBox[{1399, 2020, 2299, 1398, 741, 1400, 2222, 1601, 1401,
        2223, 1602, 1402, 2224, 1603, 1403, 2225, 1604, 1404, 2226, 1605, 
       1405, 2021, 2300, 1406, 2022, 2301, 1407, 2227, 1606, 1408, 2228, 1607,
        1409, 2229, 1608, 1410, 2230, 1609, 1411, 2231, 1610, 1412}], 
      Line3DBox[{1414, 2023, 2302, 1413, 2024, 2303, 1415, 756, 1416, 2232, 
       1611, 1417, 2233, 1612, 1418, 2234, 1613, 1419, 2235, 1614, 1420, 2025,
        2304, 1421, 2026, 2305, 1422, 2027, 2306, 1423, 2236, 1615, 1424, 
       2237, 1616, 1425, 2238, 1617, 1426, 2239, 1618, 1427}], 
      Line3DBox[{1429, 2028, 2307, 1428, 2029, 2308, 1430, 2030, 2309, 1431, 
       771, 1432, 2240, 1619, 1433, 2241, 1620, 1434, 2242, 1621, 1435, 2031, 
       2310, 1436, 2032, 2311, 1437, 2033, 2312, 1438, 2034, 2313, 1439, 2243,
        1622, 1440, 2244, 1623, 1441, 2245, 1624, 1442}], 
      Line3DBox[{1444, 2035, 2314, 1443, 2036, 2315, 1445, 2037, 2316, 1446, 
       2038, 2317, 1447, 786, 1448, 2246, 1625, 1449, 2247, 1626, 1450, 2039, 
       2318, 1451, 2040, 2319, 1452, 2041, 2320, 1453, 2042, 2321, 1454, 2043,
        2322, 1455, 2248, 1627, 1456, 2249, 1628, 1457}], 
      Line3DBox[{1459, 2044, 2323, 1458, 2045, 2324, 1460, 2046, 2325, 1461, 
       2047, 2326, 1462, 2048, 2327, 1463, 801, 1464, 2250, 1629, 1465, 2049, 
       2328, 1466, 2050, 2329, 1467, 2051, 2330, 1468, 2052, 2331, 1469, 2053,
        2332, 1470, 2054, 2333, 1471, 2251, 1630, 1472}], 
      Line3DBox[{106, 619, 107, 620, 108, 621, 109, 622, 110, 623, 111, 624, 
       112, 943, 253, 113, 254, 625, 114, 626, 115, 627, 116, 628, 117, 629, 
       118, 630, 119, 631, 120}], 
      Line3DBox[{1486, 1687, 2345, 2106, 1485, 2344, 2064, 1484, 2343, 2063, 
       1483, 2342, 2062, 1482, 2341, 2061, 1481, 2340, 2060, 1480, 925, 1685, 
       1479, 1684, 923, 1478, 2339, 2059, 1477, 2338, 2058, 1476, 2337, 2057, 
       1475, 2336, 2056, 1474, 2335, 2055, 1473, 2105, 2334, 1683, 1697}], 
      Line3DBox[{1488, 1688, 2252, 1631, 1487, 2253, 1632, 1489, 2254, 1633, 
       1490, 2255, 1634, 1491, 2256, 1635, 1492, 2257, 1636, 1493, 927, 1637, 
       1689, 1686, 828, 1494, 2258, 1638, 1495, 2259, 1639, 1496, 2260, 1640, 
       1497, 2261, 1641, 1498, 2262, 1642, 1499, 2107, 2263, 1643, 1698}], 
      Line3DBox[{1501, 2065, 2346, 1500, 2264, 1644, 1502, 2265, 1645, 1503, 
       2266, 1646, 1504, 2267, 1647, 1505, 2268, 1648, 1506, 2269, 1649, 1507,
        2066, 2347, 1508, 842, 1509, 2270, 1650, 1510, 2271, 1651, 1511, 2272,
        1652, 1512, 2273, 1653, 1513, 2274, 1654, 1514}], 
      Line3DBox[{1516, 2067, 2348, 1515, 2068, 2349, 1517, 2275, 1655, 1518, 
       2276, 1656, 1519, 2277, 1657, 1520, 2278, 1658, 1521, 2279, 1659, 1522,
        2069, 2350, 1523, 2070, 2351, 1524, 857, 1525, 2280, 1660, 1526, 2281,
        1661, 1527, 2282, 1662, 1528, 2283, 1663, 1529}], 
      Line3DBox[{1531, 2071, 2352, 1530, 2072, 2353, 1532, 2073, 2354, 1533, 
       2284, 1664, 1534, 2285, 1665, 1535, 2286, 1666, 1536, 2287, 1667, 1537,
        2074, 2355, 1538, 2075, 2356, 1539, 2076, 2357, 1540, 872, 1541, 2288,
        1668, 1542, 2289, 1669, 1543, 2290, 1670, 1544}], 
      Line3DBox[{1546, 2077, 2358, 1545, 2078, 2359, 1547, 2079, 2360, 1548, 
       2080, 2361, 1549, 2291, 1671, 1550, 2292, 1672, 1551, 2293, 1673, 1552,
        2081, 2362, 1553, 2082, 2363, 1554, 2083, 2364, 1555, 2084, 2365, 
       1556, 887, 1557, 2294, 1674, 1558, 2295, 1675, 1559}], 
      Line3DBox[{1561, 2085, 2366, 1560, 2086, 2367, 1562, 2087, 2368, 1563, 
       2088, 2369, 1564, 2089, 2370, 1565, 2296, 1676, 1566, 2297, 1677, 1567,
        2090, 2371, 1568, 2091, 2372, 1569, 2092, 2373, 1570, 2093, 2374, 
       1571, 2094, 2375, 1572, 902, 1573, 2298, 1678, 1574}], 
      Line3DBox[{1588, 1696, 938, 1587, 2385, 2104, 1586, 2384, 2103, 1585, 
       2383, 2102, 1584, 2382, 2101, 1583, 2381, 2100, 1582, 2389, 1695, 1694,
        1581, 1693, 1692, 2388, 1580, 2380, 2099, 1579, 2379, 2098, 1578, 
       2378, 2097, 1577, 2377, 2096, 1576, 2376, 2095, 1575, 934, 1690, 
       1691}], Line3DBox[{1700, 2013, 1168, 1699, 2495, 1922, 1701, 2496, 
       1923, 1702, 2497, 1924, 1703, 2498, 1925, 1704, 2499, 1926, 1705, 2500,
        1927, 1706, 2501, 2108, 2390, 1707, 2502, 1928, 1708, 2503, 1929, 
       1709, 2504, 1930, 1710, 2505, 1931, 1711, 2506, 1932, 1712, 2211, 2599,
        1933, 2014}], 
      Line3DBox[{1714, 2109, 2391, 1713, 1183, 1715, 2507, 1934, 1716, 2508, 
       1935, 1717, 2509, 1936, 1718, 2510, 1937, 1719, 2511, 1938, 1720, 2512,
        2110, 2392, 1721, 2111, 2393, 1722, 2513, 1939, 1723, 2514, 1940, 
       1724, 2515, 1941, 1725, 2516, 1942, 1726, 2517, 1943, 1727}], 
      Line3DBox[{1729, 2112, 2394, 1728, 2113, 2395, 1730, 1199, 1731, 2518, 
       1944, 1732, 2519, 1945, 1733, 2520, 1946, 1734, 2521, 1947, 1735, 2522,
        2114, 2396, 1736, 2115, 2397, 1737, 2116, 2398, 1738, 2523, 1948, 
       1739, 2524, 1949, 1740, 2525, 1950, 1741, 2526, 1951, 1742}], 
      Line3DBox[{1744, 2117, 2399, 1743, 2118, 2400, 1745, 2119, 2401, 1746, 
       1215, 1747, 2527, 1952, 1748, 2528, 1953, 1749, 2529, 1954, 1750, 2530,
        2120, 2402, 1751, 2121, 2403, 1752, 2122, 2404, 1753, 2123, 2405, 
       1754, 2531, 1955, 1755, 2532, 1956, 1756, 2533, 1957, 1757}], 
      Line3DBox[{1759, 2124, 2406, 1758, 2125, 2407, 1760, 2126, 2408, 1761, 
       2127, 2409, 1762, 1231, 1763, 2534, 1958, 1764, 2535, 1959, 1765, 2536,
        2128, 2410, 1766, 2129, 2411, 1767, 2130, 2412, 1768, 2131, 2413, 
       1769, 2132, 2414, 1770, 2537, 1960, 1771, 2538, 1961, 1772}], 
      Line3DBox[{1774, 2133, 2415, 1773, 2134, 2416, 1775, 2135, 2417, 1776, 
       2136, 2418, 1777, 2137, 2419, 1778, 1247, 1779, 2539, 1962, 1780, 2540,
        2138, 2420, 1781, 2139, 2421, 1782, 2140, 2422, 1783, 2141, 2423, 
       1784, 2142, 2424, 1785, 2143, 2425, 1786, 2541, 1963, 1787}], 
      Line3DBox[{1789, 2144, 2426, 1788, 2145, 2427, 1790, 2146, 2428, 1791, 
       2147, 2429, 1792, 2148, 2430, 1793, 2149, 2431, 1794, 1263, 1795, 2542,
        2150, 2432, 1796, 2151, 2433, 1797, 2152, 2434, 1798, 2153, 2435, 
       1799, 2154, 2436, 1800, 2155, 2437, 1801, 2156, 2438, 1802}], 
      Line3DBox[{1806, 2543, 1964, 1804, 2544, 1965, 1808, 2545, 1966, 1810, 
       2546, 1967, 1812, 2547, 1968, 1814, 2548, 1969, 1816, 2549, 1970, 1818,
        2550, 1280, 1820, 2551, 1971, 1822, 2552, 1972, 1824, 2553, 1973, 
       1826, 2554, 1974, 1828, 2555, 1975, 1830, 2556, 1976, 1832}], 
      Line3DBox[{1831, 2452, 2169, 1829, 2451, 2168, 1827, 2450, 2167, 1825, 
       2449, 2166, 1823, 2448, 2165, 1821, 2447, 2164, 1819, 2446, 1279, 1817,
        2445, 2163, 1815, 2444, 2162, 1813, 2443, 2161, 1811, 2442, 2160, 
       1809, 2441, 2159, 1807, 2440, 2158, 1803, 2439, 2157, 1805}], 
      Line3DBox[{1834, 2170, 2453, 1833, 2557, 1977, 1835, 2558, 1978, 1836, 
       2559, 1979, 1837, 2560, 1980, 1838, 2561, 1981, 1839, 2562, 1982, 1840,
        2563, 2171, 2454, 1841, 1296, 1842, 2564, 1983, 1843, 2565, 1984, 
       1844, 2566, 1985, 1845, 2567, 1986, 1846, 2568, 1987, 1847}], 
      Line3DBox[{1849, 2172, 2455, 1848, 2173, 2456, 1850, 2569, 1988, 1851, 
       2570, 1989, 1852, 2571, 1990, 1853, 2572, 1991, 1854, 2573, 1992, 1855,
        2574, 2174, 2457, 1856, 2175, 2458, 1857, 1312, 1858, 2575, 1993, 
       1859, 2576, 1994, 1860, 2577, 1995, 1861, 2578, 1996, 1862}], 
      Line3DBox[{1864, 2176, 2459, 1863, 2177, 2460, 1865, 2178, 2461, 1866, 
       2579, 1997, 1867, 2580, 1998, 1868, 2581, 1999, 1869, 2582, 2000, 1870,
        2583, 2179, 2462, 1871, 2180, 2463, 1872, 2181, 2464, 1873, 1328, 
       1874, 2584, 2001, 1875, 2585, 2002, 1876, 2586, 2003, 1877}], 
      Line3DBox[{1879, 2182, 2465, 1878, 2183, 2466, 1880, 2184, 2467, 1881, 
       2185, 2468, 1882, 2587, 2004, 1883, 2588, 2005, 1884, 2589, 2006, 1885,
        2590, 2186, 2469, 1886, 2187, 2470, 1887, 2188, 2471, 1888, 2189, 
       2472, 1889, 1344, 1890, 2591, 2007, 1891, 2592, 2008, 1892}], 
      Line3DBox[{1894, 2190, 2473, 1893, 2191, 2474, 1895, 2192, 2475, 1896, 
       2193, 2476, 1897, 2194, 2477, 1898, 2593, 2009, 1899, 2594, 2010, 1900,
        2595, 2195, 2478, 1901, 2196, 2479, 1902, 2197, 2480, 1903, 2198, 
       2481, 1904, 2199, 2482, 1905, 1360, 1906, 2596, 2011, 1907}], 
      Line3DBox[{1921, 2018, 1380, 1920, 2494, 2210, 1919, 2493, 2209, 1918, 
       2492, 2208, 1917, 2491, 2207, 1916, 2490, 2206, 1915, 2489, 2205, 2598,
        1914, 2012, 2597, 1913, 2488, 2204, 1912, 2487, 2203, 1911, 2486, 
       2202, 1910, 2485, 2201, 1909, 2484, 2200, 1908, 2483, 2016, 2015, 
       2017}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{524, 729, 2212, 525, 741, 550, 2303, 755, 564, 2308, 769, 
       578, 2315, 783, 592, 2324, 797, 606, 2335, 811, 620, 823, 2253, 633, 
       835, 2264, 647, 2349, 849, 661, 2353, 863, 675, 2359, 877, 689, 2367, 
       891, 703, 2376, 905, 717}], 
      Line3DBox[{526, 730, 2213, 527, 742, 2222, 551, 756, 565, 2309, 770, 
       579, 2316, 784, 593, 2325, 798, 607, 2336, 812, 621, 824, 2254, 634, 
       836, 2265, 648, 850, 2275, 662, 2354, 864, 676, 2360, 878, 690, 2368, 
       892, 704, 2377, 906, 718}], 
      Line3DBox[{528, 731, 2214, 529, 743, 2223, 552, 757, 2232, 566, 771, 
       580, 2317, 785, 594, 2326, 799, 608, 2337, 813, 622, 825, 2255, 635, 
       837, 2266, 649, 851, 2276, 663, 865, 2284, 677, 2361, 879, 691, 2369, 
       893, 705, 2378, 907, 719}], 
      Line3DBox[{530, 732, 2215, 531, 744, 2224, 553, 758, 2233, 567, 772, 
       2240, 581, 786, 595, 2327, 800, 609, 2338, 814, 623, 826, 2256, 636, 
       838, 2267, 650, 852, 2277, 664, 866, 2285, 678, 880, 2291, 692, 2370, 
       894, 706, 2379, 908, 720}], 
      Line3DBox[{532, 733, 2216, 533, 745, 2225, 554, 759, 2234, 568, 773, 
       2241, 582, 787, 2246, 596, 801, 610, 2339, 815, 624, 827, 2257, 637, 
       839, 2268, 651, 853, 2278, 665, 867, 2286, 679, 881, 2292, 693, 895, 
       2296, 707, 2380, 909, 721}], 
      Line3DBox[{534, 917, 2386, 918, 535, 746, 2226, 555, 760, 2235, 569, 
       774, 2242, 583, 788, 2247, 597, 802, 2250, 611, 923, 924, 943, 926, 
       927, 638, 840, 2269, 652, 854, 2279, 666, 868, 2287, 680, 882, 2293, 
       694, 896, 2297, 708, 935, 2388, 936, 944}], 
      Line3DBox[{8, 1391, 23, 1405, 38, 1420, 53, 1435, 68, 1450, 83, 1465, 
       98, 1479, 252, 113, 239, 1689, 128, 1507, 143, 1522, 158, 1537, 173, 
       1552, 188, 1567, 203, 1581, 218}], 
      Line3DBox[{537, 735, 2217, 538, 2301, 748, 557, 2305, 762, 571, 2311, 
       776, 585, 2319, 790, 599, 2329, 804, 613, 2340, 817, 626, 829, 2258, 
       640, 842, 654, 2351, 856, 668, 2356, 870, 682, 2363, 884, 696, 2372, 
       898, 710, 2381, 911, 723}], 
      Line3DBox[{539, 736, 2218, 540, 749, 2227, 558, 2306, 763, 572, 2312, 
       777, 586, 2320, 791, 600, 2330, 805, 614, 2341, 818, 627, 830, 2259, 
       641, 843, 2270, 655, 857, 669, 2357, 871, 683, 2364, 885, 697, 2373, 
       899, 711, 2382, 912, 724}], 
      Line3DBox[{541, 737, 2219, 542, 750, 2228, 559, 764, 2236, 573, 2313, 
       778, 587, 2321, 792, 601, 2331, 806, 615, 2342, 819, 628, 831, 2260, 
       642, 844, 2271, 656, 858, 2280, 670, 872, 684, 2365, 886, 698, 2374, 
       900, 712, 2383, 913, 725}], 
      Line3DBox[{543, 738, 2220, 544, 751, 2229, 560, 765, 2237, 574, 779, 
       2243, 588, 2322, 793, 602, 2332, 807, 616, 2343, 820, 629, 832, 2261, 
       643, 845, 2272, 657, 859, 2281, 671, 873, 2288, 685, 887, 699, 2375, 
       901, 713, 2384, 914, 726}], 
      Line3DBox[{545, 739, 2221, 546, 752, 2230, 561, 766, 2238, 575, 780, 
       2244, 589, 794, 2248, 603, 2333, 808, 617, 2344, 821, 630, 833, 2262, 
       644, 846, 2273, 658, 860, 2282, 672, 874, 2289, 686, 888, 2294, 700, 
       902, 714, 2385, 915, 727}], 
      Line3DBox[{547, 920, 921, 548, 753, 2231, 562, 767, 2239, 576, 781, 
       2245, 590, 795, 2249, 604, 809, 2251, 618, 2345, 929, 930, 631, 932, 
       933, 2263, 645, 847, 2274, 659, 861, 2283, 673, 875, 2290, 687, 889, 
       2295, 701, 903, 2298, 715, 938, 939, 940}], 
      Line3DBox[{716, 904, 934, 702, 890, 2366, 688, 876, 2358, 674, 862, 
       2352, 660, 848, 2348, 646, 834, 2346, 632, 2252, 822, 931, 619, 810, 
       922, 2334, 605, 796, 2323, 591, 782, 2314, 577, 768, 2307, 563, 754, 
       2302, 549, 740, 2299, 523, 728, 916, 941}], 
      Line3DBox[{722, 910, 2389, 937, 709, 897, 2371, 695, 883, 2362, 681, 
       869, 2355, 667, 855, 2350, 653, 841, 2347, 639, 828, 928, 625, 816, 
       925, 612, 803, 2328, 598, 789, 2318, 584, 775, 2310, 570, 761, 2304, 
       556, 747, 2300, 536, 734, 2387, 919, 942}], 
      Line3DBox[{946, 1169, 2495, 947, 1183, 975, 2395, 1198, 990, 2400, 1213,
        1005, 2407, 1228, 1020, 2416, 1243, 1035, 2427, 1258, 1050, 2440, 
       1273, 2544, 1065, 1288, 2557, 1080, 2456, 1303, 1095, 2460, 1318, 1110,
        2466, 1333, 1125, 2474, 1348, 1140, 2484, 1363, 1155}], 
      Line3DBox[{948, 1170, 2496, 949, 1184, 2507, 976, 1199, 991, 2401, 1214,
        1006, 2408, 1229, 1021, 2417, 1244, 1036, 2428, 1259, 1051, 2441, 
       1274, 2545, 1066, 1289, 2558, 1081, 1304, 2569, 1096, 2461, 1319, 1111,
        2467, 1334, 1126, 2475, 1349, 1141, 2485, 1364, 1156}], 
      Line3DBox[{950, 1171, 2497, 951, 1185, 2508, 977, 1200, 2518, 992, 1215,
        1007, 2409, 1230, 1022, 2418, 1245, 1037, 2429, 1260, 1052, 2442, 
       1275, 2546, 1067, 1290, 2559, 1082, 1305, 2570, 1097, 1320, 2579, 1112,
        2468, 1335, 1127, 2476, 1350, 1142, 2486, 1365, 1157}], 
      Line3DBox[{952, 1172, 2498, 953, 1186, 2509, 978, 1201, 2519, 993, 1216,
        2527, 1008, 1231, 1023, 2419, 1246, 1038, 2430, 1261, 1053, 2443, 
       1276, 2547, 1068, 1291, 2560, 1083, 1306, 2571, 1098, 1321, 2580, 1113,
        1336, 2587, 1128, 2477, 1351, 1143, 2487, 1366, 1158}], 
      Line3DBox[{954, 1173, 2499, 955, 1187, 2510, 979, 1202, 2520, 994, 1217,
        2528, 1009, 1232, 2534, 1024, 1247, 1039, 2431, 1262, 1054, 2444, 
       1277, 2548, 1069, 1292, 2561, 1084, 1307, 2572, 1099, 1322, 2581, 1114,
        1337, 2588, 1129, 1352, 2593, 1144, 2488, 1367, 1159}], 
      Line3DBox[{956, 1174, 2500, 957, 1188, 2511, 980, 1203, 2521, 995, 1218,
        2529, 1010, 1233, 2535, 1025, 1248, 2539, 1040, 1263, 1055, 2445, 
       1278, 2549, 1070, 1293, 2562, 1085, 1308, 2573, 1100, 1323, 2582, 1115,
        1338, 2589, 1130, 1353, 2594, 1145, 1368, 2597, 1160}], 
      Line3DBox[{958, 1175, 2501, 960, 1189, 2512, 981, 1204, 2522, 996, 1219,
        2530, 1011, 1234, 2536, 1026, 1249, 2540, 1041, 1264, 2542, 1056, 
       1279, 2550, 1071, 1294, 2563, 1086, 1309, 2574, 1101, 1324, 2583, 1116,
        1339, 2590, 1131, 1354, 2595, 1146, 1369, 2598, 1161}], 
      Line3DBox[{962, 1177, 2502, 963, 2393, 1191, 983, 2397, 1206, 998, 2403,
        1221, 1013, 2411, 1236, 1028, 2421, 1251, 1043, 2433, 1266, 1058, 
       2447, 1281, 2551, 1073, 1296, 1088, 2458, 1311, 1103, 2463, 1326, 1118,
        2470, 1341, 1133, 2479, 1356, 1148, 2490, 1371, 1163}], 
      Line3DBox[{964, 1178, 2503, 965, 1192, 2513, 984, 2398, 1207, 999, 2404,
        1222, 1014, 2412, 1237, 1029, 2422, 1252, 1044, 2434, 1267, 1059, 
       2448, 1282, 2552, 1074, 1297, 2564, 1089, 1312, 1104, 2464, 1327, 1119,
        2471, 1342, 1134, 2480, 1357, 1149, 2491, 1372, 1164}], 
      Line3DBox[{966, 1179, 2504, 967, 1193, 2514, 985, 1208, 2523, 1000, 
       2405, 1223, 1015, 2413, 1238, 1030, 2423, 1253, 1045, 2435, 1268, 1060,
        2449, 1283, 2553, 1075, 1298, 2565, 1090, 1313, 2575, 1105, 1328, 
       1120, 2472, 1343, 1135, 2481, 1358, 1150, 2492, 1373, 1165}], 
      Line3DBox[{968, 1180, 2505, 969, 1194, 2515, 986, 1209, 2524, 1001, 
       1224, 2531, 1016, 2414, 1239, 1031, 2424, 1254, 1046, 2436, 1269, 1061,
        2450, 1284, 2554, 1076, 1299, 2566, 1091, 1314, 2576, 1106, 1329, 
       2584, 1121, 1344, 1136, 2482, 1359, 1151, 2493, 1374, 1166}], 
      Line3DBox[{970, 1181, 2506, 971, 1195, 2516, 987, 1210, 2525, 1002, 
       1225, 2532, 1017, 1240, 2537, 1032, 2425, 1255, 1047, 2437, 1270, 1062,
        2451, 1285, 2555, 1077, 1300, 2567, 1092, 1315, 2577, 1107, 1330, 
       2585, 1122, 1345, 2591, 1137, 1360, 1152, 2494, 1375, 1167}], 
      Line3DBox[{972, 1377, 1378, 2599, 973, 1196, 2517, 988, 1211, 2526, 
       1003, 1226, 2533, 1018, 1241, 2538, 1033, 1256, 2541, 1048, 2438, 1271,
        1063, 2452, 1286, 2556, 1078, 1301, 2568, 1093, 1316, 2578, 1108, 
       1331, 2586, 1123, 1346, 2592, 1138, 1361, 2596, 1153, 1380, 1381, 
       1382}], Line3DBox[{1154, 1362, 2483, 1379, 1139, 1347, 2473, 1124, 
       1332, 2465, 1109, 1317, 2459, 1094, 1302, 2455, 1079, 1287, 2453, 1064,
        2543, 1272, 2439, 1049, 1257, 2426, 1034, 1242, 2415, 1019, 1227, 
       2406, 1004, 1212, 2399, 989, 1197, 2394, 974, 1182, 2391, 945, 1168, 
       1376, 1383}], 
      Line3DBox[{1162, 1370, 2489, 1147, 1355, 2478, 1132, 1340, 2469, 1117, 
       1325, 2462, 1102, 1310, 2457, 1087, 1295, 2454, 1072, 1280, 2446, 1057,
        1265, 2432, 1042, 1250, 2420, 1027, 1235, 2410, 1012, 1220, 2402, 997,
        1205, 2396, 982, 1190, 2392, 961, 1176, 2390, 
       959}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
iVW2JPrzw5jgE+jPA/W6bFy/ez/vHcZ5Y8GlbHz/fnIqG4eOwH5RjEvzA9LY
eKTteZXdN413itnjPjqjQIvdP79f3COO6/bKkSZ+XPd0/dJ5SecpnZ/Uj9Sv
1J8T5CwmLOn9SGjbsNZ5xM6oLjjfJsHLyzDVkfdUSB4RVEj+fv4ER093azL9
wE3GQBL7Lzn/XgD7C0YsWMPohwa/t4qof//z+gmo/3TJhQ7GHoiZvUca7ZlX
/iEd7TGX7ZFk7Idlg/cG8xj7SxsKvdF+24MvSpnxwr5t621wvN9XTPyM4x13
/MMjxj9Q2HJVGP2T+BWSWP/0bHdj/AmPoh2y0J/L141KQn/+mydp6dB86d+4
rqtD4/u/cUhfh8ajf/dNQx26f/67zo116Hr/d16a6ND5+a8fTXWoPwf/4H9r
dP5tu8HgY3Ap0x+crgo2Yv+/7SdYYUwsGf2w6poNF/X/bTsgO6FrA2MPbNSy
CEJ7/rat8G628x3GfnCfEGOJ9v9tm+Ga9fT3zHjBT3xRAY73b9sIEYuvXGP8
A05aX5aif/62HNgncyqJ8ScsU3r2G/35t2Xy0vOubN5Z8fkVF/PQm3HObP55
5748myc99klUwbzJfd4tNl+icZ3GeRrfq8YNY+PW8aamWRiXzumsOoXzge6b
dB+l+ydd53Td0/VO5yWdp3R+Uj/+69dPUHaySh370fZatjwf9v+sK7UK53N/
b6AF6u+znCGJ+gVGf2vD+ewTn7kc7bme/ukN2rPo3mkJnM/KjvcV0f6jz656
of0vA7eX4HwWfjDMF8fLFz2zB8f76lbxQ5zPfSpVSuif36FTX6B/rt28hvsD
1Pza1Mj684/2C/SnuNkTNo8XDzCch3m9VfkwH9xP6vuD2bxz8W9rE8xDa87Y
s/ln1tnHbJ40zrbFHfOmGUqGbL605OIGR9yfB+ZOP4Jx3u691BPc32gconGJ
xiO6b9J9lO6fdJ3TdU/XO52X/87Tjv/8SP1K/em2ZU4/o/+/tnfxehPUv+fr
xMO4P+8MVl2N9hw4u04U7ZlwUWwv7s+HG1xd0X7lBs5jtP9b5aQA3J+D5WMO
4Xg1NC/74Xgt+cLscH/+CZ1G6J+qN2HJ6J+P+b8A92efOQVq6M8QA2lv9OeI
Pxs3Y76x4Uq4GtZJ55YrhWF8nFp1nc3jR7y+vR/z+ns3vrP5vK+kM5t3upxa
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
HV3y32a2klMVU6wOqHBAelvBBW+rOnD0yhFUS2shPioWJgeN6+D18qCEQxEN
sOhsqdnThzzCLynxdNfCGjB7pXpa6EkTKBcI15UENBPlb0tirLSrIFzE643d
5mZ46alCgjy4pE0zMNNsZwWUNN06JtnXQnSX5t30lOWQeNHPG4Pdq+F5wOSj
AuN45GWuhvak8gbCnZ7wfVdQLfAbiEnmRTSRi0k7JbD12NM1piC5Hs68mvj5
4CMO2VKi+qDWo5lYT4yadoDDAfs9A49GKleRBKfzVkfnt5CLJ8rKA1KY+nGt
7hru10Jy7nMi2DxuJds6Jr0vWd0IL+ce23FDIZ0cNpm2XvdZG1HaKQXhzH5c
IZIWXpKeAZ2St0rKRFqJTdCGvjmHufD0nGyUYVAxzI6UJVs8Wsg5dxvpEocm
mC/iqWm5shoW6R9dJnCVR+qyBK6HTGHyBcXHVdszOdDjNnnSde9mQnp8toen
cqB2xLJXGoZNwI273SFlwyU+xYVbppTWwddPC9Pu6zfDmYpoaVkmX9uScX/W
Z2a9eOcLXu6p4MG3tQb2C+c1EqfI+2seyFSBsKPg+00728icqAnjeVWVxG/M
jxFS0rWgK1z8/HZkC1neq9u+Ua2W9B0LelzFxC3jCaNyU62aydY/go++O3PI
z2jNMC3dBhirddaC376RBC0Zxraa8nKvHtxvBHLsREmeaS25cmV8nulGLgmy
EH4/m9sEyS3jy0NsSsiRppI/juN5pGaX6s/1+VyYfFDO3DozgyxTEt+SbdtC
7mwXCT25qBlabc7u3lySDQdiXYSiuVxizImW8D/eAh2RwpU35pXBtvTfyXrb
uGSTxdLEQWEe+L/9cHOKVx1UrdGq8j3RRATkLd/9MOTChLUiDpHujcDVvCfE
tOS5JL8dfj5wfP2ahl4uXNW3WvTOoYGMC0le//sdB2K3iQoJ1vKAKzYx8rot
h1wzGSk/8kwdjHg3e9vCja0QaDFso1R1HZk+dat2aWk1HHl+OVHtejuZ6F3s
52pdRETz+Iv2uteB7KWl5+LE2sjRlqOxuWalhGTGyS/L48CyU4m+Ct95ZKPd
peGNKRUkYeQ9ca1zjTDeNqDbdTKXKJmJuiy6VEP67S3jE+248POY8uMmM8bv
/2vfSM/ZemAWDw621PCGS5WTOQa9V12NG0nPXq25o4Nb4Iu0xXPrymySvuVS
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
/X8AlJZrug==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{690.9071510283859, 602.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.9999994285714693, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.7827227744485985`, -1.8499716238035455`, 2.202159054333726},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.630165792228853*^9, 3.6301658249678535`*^9, 
  3.6304997778695955`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using a sigmo\[IDoubleDot]d to simulate the step function", "Subsection",
 CellChangeTimes->{{3.6309339036211033`*^9, 3.630933922995212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigmoid", "[", 
    RowBox[{"x_", ",", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"1", " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "k"}], "*", "x"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"sigmoid", "[", 
      RowBox[{"x", ",", "k"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "1"}], "}"}], ",", 
     RowBox[{"1", "/", "100"}], ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.630496839054505*^9, 3.630496840613594*^9}, {
  3.630496909384527*^9, 3.630496966159775*^9}, {3.6304970209509087`*^9, 
  3.6304971093599653`*^9}, {3.6304990498349543`*^9, 3.63049908263383*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 4.20958, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 1}, 
      Rational[1, 100], 100}}, Typeset`size$$ = {360., {111., 116.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$17935$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$17935$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`sigmoid[$CellContext`x, $CellContext`k$$], \
{$CellContext`x, -10, 10}, PlotRange -> Full], 
      "Specifications" :> {{{$CellContext`k$$, 1}, 
         Rational[1, 100], 100}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {162., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.630497055798902*^9, 3.6304970770451174`*^9}, 
   3.630497110359022*^9, {3.630499052259093*^9, 3.6304990832708664`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"sigmoid", "[", 
    RowBox[{"x", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6304991515447717`*^9, 3.6304993524482627`*^9}, {
  3.630499391167477*^9, 3.630499450646879*^9}, {3.6304994842157993`*^9, 
  3.6304995178227215`*^9}, {3.630499626293926*^9, 3.6304996334693365`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{"5", " ", "x"}], "2"], "-", 
   FractionBox[
    RowBox[{"125", " ", 
     SuperscriptBox["x", "3"]}], "6"], "+", 
   FractionBox[
    RowBox[{"625", " ", 
     SuperscriptBox["x", "5"]}], "3"], "-", 
   FractionBox[
    RowBox[{"265625", " ", 
     SuperscriptBox["x", "7"]}], "126"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "9"],
    SeriesData[$CellContext`x, 0, {}, 0, 9, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {
    Rational[1, 2], 
    Rational[5, 2], 0, 
    Rational[-125, 6], 0, 
    Rational[625, 3], 0, 
    Rational[-265625, 126]}, 0, 9, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6304995187147727`*^9, {3.630499626696949*^9, 3.6304996338923607`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{"5", " ", "x"}], "2"], "-", 
   FractionBox[
    RowBox[{"125", " ", 
     SuperscriptBox["x", "3"]}], "6"], "+", 
   FractionBox[
    RowBox[{"625", " ", 
     SuperscriptBox["x", "5"]}], "3"], "-", 
   FractionBox[
    RowBox[{"265625", " ", 
     SuperscriptBox["x", "7"]}], "126"]}]}]], "Input",
 CellChangeTimes->{{3.6304996489602222`*^9, 3.630499655400591*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"approx", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.630499657895733*^9, 3.6304997187172117`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/2//A+kQ1vc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.630499671252497*^9, 3.6304997190942335`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", "  ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"altitude", " ", "=", " ", "100.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hitDistance", " ", "=", " ", "100.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"density", "[", "dy_", "]"}], ":=", " ", 
   RowBox[{"a", "  ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "*", " ", "altitude"}], "]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "b"}], " ", "*", " ", "dy", " ", "*", " ", 
         "hitDistance"}], "]"}]}], ")"}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"b", " ", "*", " ", "dy"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"density", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1.0"}], ",", " ", "1"}], " ", "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6296309216593437`*^9, 3.6296311050916853`*^9}, {
  3.6296311376209373`*^9, 3.629631192167392*^9}, {3.629632117181884*^9, 
  3.6296321600011654`*^9}, {3.629632370618225*^9, 3.6296324004262056`*^9}, {
  3.6296324310692697`*^9, 3.6296324324604087`*^9}, {3.629640622667203*^9, 
  3.6296406360455403`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{429., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1., 1}, {0.00045397870460995427`, 9.999542327215142}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6296311078929653`*^9, {3.629631138332009*^9, 3.6296311926604414`*^9}, {
   3.629632119952161*^9, 3.6296321609892645`*^9}, {3.629632371035267*^9, 
   3.629632401311294*^9}, 3.6296324329074535`*^9, {3.6296406237943153`*^9, 
   3.6296406363625717`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1920, 1008},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 146, 2, 137, "Section"],
Cell[729, 26, 1639, 39, 293, "Text"],
Cell[CellGroupData[{
Cell[2393, 69, 168, 2, 57, "Subsubsection"],
Cell[2564, 73, 2570, 75, 189, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5171, 153, 104, 1, 57, "Subsubsection"],
Cell[5278, 156, 14590, 436, 1528, "Text"]
}, Open  ]],
Cell[19883, 595, 12585, 422, 511, "Subsubsection"],
Cell[CellGroupData[{
Cell[32493, 1021, 110, 1, 61, "Subsection"],
Cell[32606, 1024, 133, 2, 45, "Text"],
Cell[32742, 1028, 160, 3, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32939, 1036, 123, 1, 103, "Subsection"],
Cell[CellGroupData[{
Cell[33087, 1041, 1229, 36, 99, "Input"],
Cell[34319, 1079, 1804, 38, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36160, 1122, 284, 7, 46, "Input"],
Cell[36447, 1131, 389, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36873, 1147, 835, 24, 76, "Input"],
Cell[37711, 1173, 41928, 706, 244, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79700, 1886, 303, 9, 137, "Section"],
Cell[80006, 1897, 1924, 68, 111, "Text"],
Cell[81933, 1967, 356, 10, 66, "Input"],
Cell[CellGroupData[{
Cell[82314, 1981, 806, 23, 69, "Input"],
Cell[83123, 2006, 1678, 33, 352, "Output"]
}, Open  ]],
Cell[84816, 2042, 44, 1, 4, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[84897, 2048, 126, 1, 137, "Section"],
Cell[CellGroupData[{
Cell[85048, 2053, 512, 15, 51, "Input"],
Cell[85563, 2070, 100394, 1624, 625, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185994, 3699, 147, 1, 103, "Subsection"],
Cell[CellGroupData[{
Cell[186166, 3704, 1037, 29, 76, "Input"],
Cell[187206, 3735, 1737, 35, 358, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188980, 3775, 422, 9, 46, "Input"],
Cell[189405, 3786, 848, 28, 70, "Output"]
}, Open  ]],
Cell[190268, 3817, 507, 16, 70, "Input"],
Cell[CellGroupData[{
Cell[190800, 3837, 361, 10, 46, "Input"],
Cell[191164, 3849, 7877, 138, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199078, 3992, 1492, 38, 192, "Input"],
Cell[200573, 4032, 9899, 173, 290, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
