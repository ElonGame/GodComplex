AO Map Generator v1.0 by Patapom (2016-04-16)

This generator builds an AO map from a height map and an optional normal map (better results if normal map is provided!)
Basically what this generator is doing is casting a lot of rays in many directions in a "search cone" aligned with the normal map
 and adds the rays that managed to escape the surface as opposed to rays that got blocked by obstacles before escaping.
The ratio of escaped rays to the total amount of rays is your usual AO factor in [0,1].
Rays are randomly picked within a "search cone" for which you can provide the aperture angle: 180° is the entire hemisphere above
 the surface but you want to restrict the cone a little because horizontal rays are very likely to hit the surface and are quite
 useless to shoot anyway.

If you're using the UI version:
	1) Click the left pane or drag'n drop an image to load the main height map
	2) Modify the parameters
	3) Click the "Generate" button
	4) Click the right pane to save the result
	
Otherwise, you can use the tool via the command line with the following arguments:
	-height "path/to/heightmap"												<= A height map generated by a software, black=0, white=max displacement value given by the -dispSize argument
	-ao "path/to/target/aomap"												<= Don't use TGA as a filename as it's not supported (for save only, it's okay to load TGA files though)
	[-normal "path/to/normalmap"]											<= It's optional to provide a normal map, although the results are much better with it!
	[-texSize <physical texture size, in centimeters>]						<= Size of the texture in the world, in centimeters
	[-dispSize <displacement size encoded by height map, in centimeters>]	<= Maximum displacement value encoded by the height map (i.e. white will be mapped to that value)
	[-raysCount <amount of rays per pixel>]									<= Amount of AO rays cast in the search cone
	[-range <search range, in pixels>]										<= Maximum distance for which the rays are traced, if no hit occurs after this then we consider the ray escaped the surface
	[-coneAngle <search cone aperture angle, in degrees>]					<= Aperture angle for the search cone (0° is a single ray aligned with surface normal, 180° is the entire hemisphere above the surface)
	[-clamp]																<= If set, then the texture does not tile
	[-bilateralRadius <bilateral filtering radius, in pixels>]				<= Radius of the bilateral filtering that is performed prior computing AO (bilateral filtering smoothes the results a bit)
	[-bilateralTolerance <bilateral filtering height tolerance>]			<= Tolerance value for heights to be merged together (i.e. blurred)

