(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1636014,      33798]
NotebookOptionsPosition[   1621833,      33429]
NotebookOutlinePosition[   1622180,      33444]
CellTagsIndexPosition[   1622137,      33441]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Finding a Parametrization for the Rough Diffuse Surface Simulation\
\>", "Title",
 CellChangeTimes->{{3.663754510825287*^9, 3.6637545195194197`*^9}, {
  3.6637545562532988`*^9, 3.6637545911168585`*^9}}],

Cell[TextData[{
 "We wrote a program that is capable of generating or loading a microsurface \
and ray-tracing that surface using a very large amount of rays (several \
hundred millions), thus obtaining the distribution of outgoing directions \
after 1 or more scattering events (up to 4).\nWe gathered the outgoing lobes \
for different parameters of the surface:\n\t\[Bullet] Angle of incidence ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "s"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\[Bullet] Roughness ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "s"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t\[Bullet] Albedo ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "s"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6637545061249533`*^9, 3.663754506669348*^9}, {
  3.66375460454135*^9, 3.663754744418909*^9}, {3.66375628129113*^9, 
  3.663756301587434*^9}, {3.6638554012993293`*^9, 3.663855433666153*^9}}],

Cell[TextData[{
 "We then performed a fitting of the simulated data using a modified cosine \
lobel model that uses non-uniform scaling and a local tangent space.\nThe \
matrix ",
 StyleBox["M",
  FontWeight->"Bold"],
 " allows to transform from local lobe space to surface space:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["A",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{"(", GridBox[{
       {
        StyleBox["T",
         FontWeight->"Bold"]},
       {
        StyleBox["B",
         FontWeight->"Bold"]},
       {
        RowBox[{
         StyleBox[
          SubscriptBox[
           StyleBox["\[Sigma]",
            FontWeight->"Plain"], "n"],
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["R",
           FontWeight->"Bold"], 
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           SubscriptBox[
            StyleBox["\[Theta]",
             FontWeight->"Plain"], "l"],
           FontWeight->"Plain"], 
          StyleBox[")",
           FontWeight->"Plain"]}]}]}
      }], ")"}]}], TraditionalForm]]],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubscriptBox["\[Omega]", 
      StyleBox["w",
       FontWeight->"Plain"]],
     FontWeight->"Bold"], "="}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{
      SubscriptBox["\[Omega]", "l"], 
      StyleBox[" ",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["A",
       FontWeight->"Bold"]}], 
     RowBox[{
      StyleBox["\[LeftBracketingBar]",
       FontWeight->"Plain"], 
      RowBox[{
       SubscriptBox["\[Omega]", "l"], " ", "\[CenterDot]", "A"}], 
      StyleBox["\[RightBracketingBar]",
       FontWeight->"Plain"]}]],
    FontWeight->"Bold"], TraditionalForm]]],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubscriptBox["\[Omega]", 
      StyleBox["l",
       FontWeight->"Plain"]],
     FontWeight->"Bold"], "="}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{
      SubscriptBox["\[Omega]", "w"], "\[CenterDot]", 
      StyleBox[" ",
       FontWeight->"Bold"], 
      StyleBox[
       SuperscriptBox[
        StyleBox["A",
         FontWeight->"Bold"], 
        RowBox[{"-", "1"}]],
       FontWeight->"Bold"]}], 
     RowBox[{
      StyleBox["\[LeftBracketingBar]",
       FontWeight->"Plain"], 
      RowBox[{
       SubscriptBox["\[Omega]", "w"], " ", "\[CenterDot]", 
       SuperscriptBox["A", 
        RowBox[{"-", "1"}]]}], 
      StyleBox["\[RightBracketingBar]",
       FontWeight->"Plain"]}]],
    FontWeight->"Bold"], TraditionalForm]]],
 "\n\t\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "l"], TraditionalForm]]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "is the local lobe-space unit vector\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "w"], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "is the surface-space unit vector after renormalization\n",
 StyleBox["R",
  FontWeight->"Bold"],
 "(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "l"], TraditionalForm]]],
 ") is the lobe\[CloseCurlyQuote]s principal axis (usually, the reflected \
incoming direction). It\[CloseCurlyQuote]s defined by one of the parameters \
of the lobe model ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "l"], TraditionalForm]]],
 "\n",
 StyleBox["T, B",
  FontWeight->"Bold"],
 " are the complementary vectors forming an orthonormal basis with N\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox[
     StyleBox["\[Sigma]",
      FontWeight->"Plain"], "n"],
    FontWeight->"Plain"], TraditionalForm]]],
 " is a non-uniform scaling factor along the lobe\[CloseCurlyQuote]s \
principal direction and another one of the parameters of the lobe model"
}], "Text",
 CellChangeTimes->{{3.663756816349247*^9, 3.663756891911521*^9}, {
   3.663756938926691*^9, 3.663756987497876*^9}, {3.6637570379584436`*^9, 
   3.6637570756900425`*^9}, {3.6637571073413444`*^9, 3.663757108152934*^9}, {
   3.663757181586692*^9, 3.663757181586692*^9}, {3.6637572176851187`*^9, 
   3.663757266061214*^9}, {3.6637573516565475`*^9, 3.663757400885263*^9}, {
   3.6637576726107597`*^9, 3.663757756626975*^9}, {3.663757834728038*^9, 
   3.6637578386648006`*^9}, {3.6637579890758085`*^9, 3.663758043348063*^9}, 
   3.6637580770167923`*^9, {3.663758250919363*^9, 3.663758291109692*^9}, {
   3.6637590403357687`*^9, 3.6637591190122128`*^9}, {3.6637593038034563`*^9, 
   3.6637593052194757`*^9}, {3.6637611298935256`*^9, 3.663761134347662*^9}}],

Cell[CellGroupData[{

Cell["\<\
Lobe Intensity in Local-Space, Given Two Directions in Surface-Space\
\>", "Subsubsection",
 CellChangeTimes->{{3.663759466808346*^9, 3.663759501535882*^9}, {
  3.6637595446151905`*^9, 3.6637595491113553`*^9}, {3.663762766189818*^9, 
  3.6637628028156357`*^9}}],

Cell[TextData[{
 "Once in local lobe-space, the intensity of the lobe is given by:\n\n\tf(",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "o"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",\[Alpha],\[Sigma],\[Mu]) = \[Sigma] [(1-m) + m G(",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "o"], 
    StyleBox["\[CenterDot]",
     FontWeight->"Plain"], "Z"}], TraditionalForm]],
  FontWeight->"Bold"],
 ",\[Alpha]) G(",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], 
    StyleBox["\[CenterDot]",
     FontWeight->"Plain"], "Z"}], TraditionalForm]],
  FontWeight->"Bold"],
 ",\[Alpha])] N( ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ", \[Alpha] )\n\t\n\tG(",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 ",\[Alpha]) = ",
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"3.535", " ", "a"}], " ", "+", " ", 
            RowBox[{"2.181", " ", 
             SuperscriptBox["a", "2"]}]}], 
           RowBox[{"1.0", " ", "+", " ", 
            RowBox[{"2.276", " ", "a"}], " ", "+", " ", 
            RowBox[{"2.577", " ", 
             SuperscriptBox["a", "2"]}]}]], 
          RowBox[{
           RowBox[{"a", "(", 
            RowBox[{"\[Theta]", ",", "\[Alpha]"}], ")"}], " ", "<", " ", 
           "1.6"}]},
         {"1", 
          RowBox[{"otherwise", " "}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], TraditionalForm]]],
 "\n\ta(\[Theta],\[Alpha]) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox[
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"\[Eta]", "(", "\[Alpha]", ")"}], "2"]}]], 
    RowBox[{"tan", "(", "\[Theta]", ")"}]], TraditionalForm]]],
 "\n\tN( ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ", \[Alpha] ) =  ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{"\[Eta]", "(", "\[Alpha]", ")"}]}], "\[Pi]"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{
      StyleBox[
       FractionBox[
        RowBox[{
         SubscriptBox["\[Omega]", "i"], 
         StyleBox[" ",
          FontWeight->"Bold"], "\[CenterDot]", 
         StyleBox[
          SuperscriptBox[
           StyleBox["A",
            FontWeight->"Bold"], 
           RowBox[{"-", "1"}]],
          FontWeight->"Bold"]}], 
        RowBox[{
         StyleBox["\[LeftBracketingBar]",
          FontWeight->"Plain"], 
         RowBox[{
          SubscriptBox["\[Omega]", "i"], " ", "\[CenterDot]", 
          SuperscriptBox["A", 
           RowBox[{"-", "1"}]]}], 
         StyleBox["\[RightBracketingBar]",
          FontWeight->"Plain"]}]],
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Plain"], 
      StyleBox["Z",
       FontWeight->"Bold"]}], "]"}], 
    RowBox[{"\[Eta]", "(", "\[Alpha]", ")"}]], TraditionalForm]]],
 "\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Eta]", "(", "\[Alpha]", ")"}], "=", " ", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"10", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]], 
     StyleBox["-",
      FontWeight->"Bold"], "1"}]}], TraditionalForm]]],
 "\n\t\n\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "o"],
    FontWeight->"Bold"], TraditionalForm]]],
 " is the outgoing view direction in surface space\n\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 " is the incoming light direction in surface space\n\t\[Sigma] is the global \
scale factor\n\t\[Alpha] is the lobe\[CloseCurlyQuote]s roughness\n\tm is the \
masking importance factor in [0,1] that allows to bypass the masking term \
(m=0) completely.\n\tG(",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", ",", "\[Alpha]"}], TraditionalForm]]],
 ") is the masking term for the Phong model\n\tN( ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ", \[Alpha] ) defines the cosine lobe\[CloseCurlyQuote]s intensity using \
roughness \[Alpha], angle from local normal axis and global scale\n\t\[Eta](\
\[Alpha]) defines the exponent based on the surface\[CloseCurlyQuote]s \
roughness \[Alpha] (notice the -1 in the end that allows use to have a 0 \
exponent to make constant lobes)\n\t",
 StyleBox["Z",
  FontWeight->"Bold"],
 " is the unit Z-up vector ",
 StyleBox["(0,0,1)",
  FontWeight->"Bold"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.663757028326655*^9, 3.663757028414719*^9}, 
   3.6637573384092183`*^9, {3.6637574408954678`*^9, 3.663757448556851*^9}, {
   3.6637574785980377`*^9, 3.663757567756855*^9}, {3.6637576146369104`*^9, 
   3.663757663501338*^9}, {3.6637577602925577`*^9, 3.663757770915061*^9}, {
   3.6637578091660175`*^9, 3.6637579674035344`*^9}, {3.6637580742428474`*^9, 
   3.663758181287289*^9}, {3.6637582207611065`*^9, 3.663758224997095*^9}, {
   3.6637583017261868`*^9, 3.663758558879424*^9}, {3.6637586603919797`*^9, 
   3.6637587592266273`*^9}, {3.663758796398837*^9, 3.663758951007799*^9}, {
   3.663759014030218*^9, 3.663759015254094*^9}, {3.663759513988614*^9, 
   3.6637595560742617`*^9}, {3.663761140287849*^9, 3.6637611524734373`*^9}, {
   3.663762350582899*^9, 3.663762374825977*^9}, {3.6638554458437357`*^9, 
   3.6638556556676126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Lobe", " ", "Intensity", " ", "in", " ", "Surface"}], "-", 
   "Space"}], "Subsubsection",
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.6637595696027966`*^9, 3.6637595696037984`*^9}, {
  3.663759608835458*^9, 3.6637596166119432`*^9}, {3.6637598450429344`*^9, 
  3.6637598466090374`*^9}, {3.66376279089525*^9, 3.6637627976289916`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\<\" \"\>"}], "+", 
  RowBox[{"in", " ", "Intensity", " ", "Lobe", " ", "Surface"}]}]], "Output",
 CellChangeTimes->{3.6638558506950717`*^9}]
}, Open  ]],

Cell[TextData[{
 "We need to quickly find the length of the surface-space vector ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", 
     StyleBox["w",
      FontWeight->"Plain"]],
    FontWeight->"Bold"], TraditionalForm]]],
 " when transformed from local lobe-space to suface-space:\n\n\tL = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[LeftBracketingBar]",
     FontWeight->"Plain"], 
    StyleBox[
     RowBox[{
      SubscriptBox["\[Omega]", "l"], "\[CenterDot]", "A"}],
     FontWeight->"Bold"], 
    StyleBox["\[RightBracketingBar]",
     FontWeight->"Plain"]}], TraditionalForm]]],
 "\n\nWe know that for an unscaled lobe direction ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", 
     StyleBox["l",
      FontWeight->"Plain"]],
    FontWeight->"Bold"], TraditionalForm]],
  FontWeight->"Bold"],
 " we get the scaled version ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "s"], TraditionalForm]],
  FontWeight->"Bold"],
 ":\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "s"], " ", 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox[
      SubscriptBox["\[Omega]", 
       StyleBox["l",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"(", GridBox[{
         {
          StyleBox["1",
           FontWeight->"Plain"], "0", "0"},
         {"0", 
          StyleBox["1",
           FontWeight->"Plain"], "0"},
         {"0", "0", 
          SubscriptBox[
           StyleBox["\[Sigma]",
            FontWeight->"Plain"], "n"]}
        }], ")"}],
      FontWeight->"Plain"]}]}], TraditionalForm]],
  FontWeight->"Bold"],
 "\n\tL = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftBracketingBar]", 
    StyleBox[
     SubscriptBox["\[Omega]", "s"],
     FontWeight->"Bold"], "\[RightBracketingBar]"}], TraditionalForm]]],
 "\n\t\nAnd the unit surface-space direction is:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubscriptBox["\[Omega]", "w"],
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    FractionBox[
     StyleBox[
      SubscriptBox["\[Omega]", "s"],
      FontWeight->"Bold"], "L"]}], TraditionalForm]]],
 "\n\nNow, if we write:\n\n\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", 
     StyleBox["l",
      FontWeight->"Plain"]],
    FontWeight->"Bold"], TraditionalForm]],
  FontWeight->"Bold"],
 " =",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "w"], TraditionalForm]],
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", GridBox[{
       {
        StyleBox["L",
         FontWeight->"Plain"], "0", "0"},
       {"0", 
        StyleBox["L",
         FontWeight->"Plain"], "0"},
       {"0", "0", 
        FractionBox["L", 
         SubscriptBox[
          StyleBox["\[Sigma]",
           FontWeight->"Plain"], "n"]]}
      }], ")"}],
    FontWeight->"Plain"], TraditionalForm]],
  FontWeight->"Bold"],
 "\n\nSince ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     StyleBox[
      SubscriptBox["\[Omega]", "l"],
      FontWeight->"Bold"], "\[RightBracketingBar]"}], " ", "=", " ", "1"}], 
   TraditionalForm]]],
 " :\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["\[VerticalSeparator]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox[
       SubscriptBox["\[Omega]", "w"],
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"(", GridBox[{
          {
           StyleBox["L",
            FontWeight->"Plain"], "0", "0"},
          {"0", 
           StyleBox["L",
            FontWeight->"Plain"], "0"},
          {"0", "0", 
           FractionBox["L", 
            SubscriptBox[
             StyleBox["\[Sigma]",
              FontWeight->"Plain"], "n"]]}
         }], ")"}],
       FontWeight->"Plain"]}], 
     StyleBox["\[VerticalSeparator]",
      FontWeight->"Plain"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox["1",
     FontWeight->"Plain"]}], TraditionalForm]],
  FontWeight->"Bold"],
 "\n\nThis lets us solve for L:\n\n\tL(",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[Sigma]",
     FontWeight->"Plain"], "n"], TraditionalForm]]],
 ") = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"[", 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Omega]", "w"], " ", "\[CenterDot]", " ", "Z"}],
          FontWeight->"Bold"], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           SubscriptBox[
            StyleBox["\[Sigma]",
             FontWeight->"Plain"], "n"], "2"]], "-", "1"}], ")"}]}]}]]], 
   TraditionalForm]]],
 "\n\nSo in the end, we can estimate the final lobe size in surface-space as:\
\n\n\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]]],
 "(",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "o"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",\[Alpha],\[Sigma],",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[Sigma]",
     FontWeight->"Plain"], "n"], TraditionalForm]]],
 ",\[Mu]) = L(",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[Sigma]",
     FontWeight->"Plain"], "n"], TraditionalForm]]],
 ") f(",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "o"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 ",\[Alpha],\[Sigma],\[Mu])\n\n\n",
 StyleBox["Building the Local Tangent Space", "Subsubsection"]
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQbZVWrSDo89pR43oNmN70XdsWRK92k/QC0bMUgv1A
tKZXdhCIdvtbFw6i+/yOR4LoXfIcFSBay1G9G0SL6Sb0g2ijHzcWgejTU7at
AtGPNgZsB9HH7p/dD6J5Os8cAdEHtNsugGilSVPugGiPg1kPQTSbhPUjEO28
b9pbEP3q18aPINr4zLtvIHqP8pc/IFqBYYqAEJCWSQ41AtGbbs+1AtFmqWpR
IFroM0sciDaY/ykTRG/xc8wH0QdunQXTm+f3V4Nok8duXSD61suUaSC6wGva
EhA9QfDWZhA9Y5nxbhDNX8mzH0Sf6ZYA04t+MxwB0WFvLcB05Zbn3A5A+n8C
Ky+IBgDbPp2m
  "]],

Cell[TextData[{
 "Knowing the incoming light direction ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Omega]", "i"],
    FontWeight->"Bold"], TraditionalForm]]],
 " (pointing away from the surface) and assuming it\[CloseCurlyQuote]s \
pointing upward, we can easily setup ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["T", "0"],
    FontWeight->"Bold"], TraditionalForm]]],
 " as:\n\n\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["T", "0"],
    FontWeight->"Bold"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     StyleBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      FontWeight->"Bold"], " ", "\[Times]", " ", 
     StyleBox[
      SubscriptBox["\[Omega]", "i"],
      FontWeight->"Bold"]}], 
    RowBox[{"\[LeftBracketingBar]", 
     StyleBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}], " ", "\[Times]", " ", 
       FormBox[
        StyleBox[
         SubscriptBox["\[Omega]", "i"],
         FontWeight->"Bold"],
        TraditionalForm]}],
      FontWeight->"Bold"], "\[RightBracketingBar]"}]], TraditionalForm]], 
  "Text"],
 "\n\t\nThis gives us a flat base to orient our cosine lobe:\n\n\t",
 StyleBox["R",
  FontWeight->"Bold"],
 "(\[Theta]) = cos(\[Theta]) ",
 StyleBox["(0,0,1)",
  FontWeight->"Bold"],
 " sin(\[Theta]) ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["T", "0"],
    FontWeight->"Bold"], TraditionalForm]]],
 "\n\nFrom ",
 StyleBox["R",
  FontWeight->"Bold"],
 "(\[Theta]) it\[CloseCurlyQuote]s easy to retrieve ",
 StyleBox["T",
  FontWeight->"Bold"],
 " and ",
 StyleBox["B",
  FontWeight->"Bold"],
 " as:\n\n\t",
 StyleBox["T ",
  FontWeight->"Bold"],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"R", "(", "\[Theta]", ")"}], " ", "\[Times]", " ", 
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}]}],
     FontWeight->"Bold"], 
    RowBox[{"\[LeftBracketingBar]", 
     StyleBox[
      RowBox[{
       RowBox[{"R", "(", "\[Theta]", ")"}], " ", "\[Times]", " ", 
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}]}],
      FontWeight->"Bold"], "\[RightBracketingBar]"}]], TraditionalForm]]],
 "\n\t",
 StyleBox["B",
  FontWeight->"Bold"],
 " = ",
 StyleBox["T ",
  FontWeight->"Bold"],
 "\[Times]",
 StyleBox[" R",
  FontWeight->"Bold"],
 "(\[Theta])\n\t"
}], "Text",
 CellChangeTimes->{3.663762902078595*^9, 3.663763026477274*^9}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parametrization", "Title",
 CellChangeTimes->{{3.663763034563973*^9, 3.6637630536364155`*^9}}],

Cell[TextData[{
 "The results were exported from the simulation application as multiple 2D \
arrays of entries, each entry is 5 parameters in double precision format:\n\t\
\[Bullet] Lobe \[Theta]\n\t\[Bullet] Lobe roughness \[Alpha]\n\t\[Bullet] \
Lobe Scale \[Sigma]\n\t\[Bullet] Lobe non-uniform Scale ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "n"], TraditionalForm]]],
 " (also called \[OpenCurlyDoubleQuote]flattening factor\
\[CloseCurlyDoubleQuote])\n\t\[Bullet] Lobe masking importance m\n\nEach 2D \
array corresponds to a different albedo, there are currently 4 surface \
albedos that were simulated: 1, 0.75, 0.5 and 0.25\nWe\[CloseCurlyQuote]re \
currently focusing on 2nd order scattering since models for 1st order \
scattering are quite well documented already."
}], "Text",
 CellChangeTimes->{{3.6637630611077023`*^9, 3.6637631757244654`*^9}, {
  3.66376329042731*^9, 3.6637633619257064`*^9}, {3.6637641210727663`*^9, 
  3.6637641240548677`*^9}, {3.663855728883236*^9, 3.663855733922784*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6637645077402987`*^9, 3.66376451572393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "So", " ", "Mathematica", " ", "knows", " ", "the", " ", "directory", " ", 
    "for", " ", "our", " ", "files"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"str", "=", 
  RowBox[{"OpenRead", "[", 
   RowBox[{"\"\<results_order2_slice0.bin\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawFile0", "=", " ", 
   RowBox[{"BinaryReadList", "[", 
    RowBox[{"str", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", 
       "\"\<Real64\>\"", ",", "\"\<Real64\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "str", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.663763208438524*^9, 3.66376321592181*^9}, {
   3.6637632611296606`*^9, 3.6637632793955517`*^9}, {3.6637633694990425`*^9, 
   3.66376338245718*^9}, {3.663764062502486*^9, 3.663764062926785*^9}, {
   3.6637642329746675`*^9, 3.663764255166293*^9}, 3.663764295149459*^9, {
   3.663764341804343*^9, 3.6637643531333303`*^9}, {3.663764452685508*^9, 
   3.6637645307285275`*^9}, {3.663764688636799*^9, 3.663764706027054*^9}, 
   3.663765243779076*^9, {3.6638379793349366`*^9, 3.6638379825121756`*^9}}],

Cell[BoxData["\<\"D:\\\\Workspaces\\\\GodComplex\\\\Tools\\\\TestMSBSDF\\\\\
Results\\\\Diffuse\"\>"], "Output",
 CellChangeTimes->{
  3.6637652688487434`*^9, 3.66377958265123*^9, 3.6638270009473*^9, {
   3.6638379762898035`*^9, 3.6638379830225353`*^9}, 3.66384164428986*^9, 
   3.663855850895211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"results_order2_slice0.bin\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855850923231*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.6637652688487434`*^9, 3.66377958265123*^9, 3.6638270009473*^9, {
   3.6638379762898035`*^9, 3.6638379830225353`*^9}, 3.66384164428986*^9, 
   3.663855850924232*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558509502506`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855850961259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"str", "=", 
  RowBox[{"OpenRead", "[", 
   RowBox[{"\"\<results_order2_slice1.bin\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawFile1", "=", " ", 
   RowBox[{"BinaryReadList", "[", 
    RowBox[{"str", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", 
       "\"\<Real64\>\"", ",", "\"\<Real64\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "str", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6637652616586742`*^9, 3.66376526312471*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"results_order2_slice1.bin\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558510092916`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6637652704979057`*^9, 3.6637795847767286`*^9, 
  3.6638270009693146`*^9, 3.663837976313819*^9, 3.6638416443468986`*^9, 
  3.663855851010294*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558510343103`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558510583267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"str", "=", 
  RowBox[{"OpenRead", "[", 
   RowBox[{"\"\<results_order2_slice2.bin\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawFile2", "=", " ", 
   RowBox[{"BinaryReadList", "[", 
    RowBox[{"str", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", 
       "\"\<Real64\>\"", ",", "\"\<Real64\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "str", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6637652603207426`*^9, 3.6637652643205633`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"results_order2_slice2.bin\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558511173687`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.663765272095043*^9, 3.6637795859305415`*^9, 
  3.663827000993351*^9, 3.6638379763388367`*^9, 3.6638416443689256`*^9, 
  3.663855851118368*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585112037*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851143387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"str", "=", 
  RowBox[{"OpenRead", "[", 
   RowBox[{"\"\<results_order2_slice3.bin\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawFile3", "=", " ", 
   RowBox[{"BinaryReadList", "[", 
    RowBox[{"str", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", "\"\<Real64\>\"", ",", 
       "\"\<Real64\>\"", ",", "\"\<Real64\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "str", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6637652591969414`*^9, 3.6637652669224052`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OpenRead", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"results_order2_slice3.bin\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"OpenRead::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851190421*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6637647107333717`*^9, 3.663765273790227*^9, 
  3.6637795869162683`*^9, 3.663827001014346*^9, 3.6638379763608403`*^9, 
  3.6638416443919296`*^9, 3.6638558511914215`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851224444*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stream"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a string, \
InputStream[ ], or OutputStream[ ]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stream\\\", ButtonNote -> \
\\\"General::stream\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851234451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Organize", " ", "raw", " ", "list", " ", "into", " ", "a", " ", "proper", 
    " ", "2", "D", " ", "array", " ", "depending", " ", "on", " ", 
    RowBox[{"suface", "'"}], "s", " ", 
    RowBox[{"theta", "/", "roughness"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"resX", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resY", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rawFile0", "[", 
        RowBox[{"[", 
         RowBox[{"1", "+", 
          RowBox[{"(", 
           RowBox[{"20", "*", "j"}], ")"}], "+", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"resY", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"resX", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rawFile1", "[", 
        RowBox[{"[", 
         RowBox[{"1", "+", 
          RowBox[{"(", 
           RowBox[{"20", "*", "j"}], ")"}], "+", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"resY", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"resX", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rawFile2", "[", 
        RowBox[{"[", 
         RowBox[{"1", "+", 
          RowBox[{"(", 
           RowBox[{"20", "*", "j"}], ")"}], "+", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"resY", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"resX", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rawFile3", "[", 
        RowBox[{"[", 
         RowBox[{"1", "+", 
          RowBox[{"(", 
           RowBox[{"20", "*", "j"}], ")"}], "+", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"resY", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"resX", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "table0", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6637647203041315`*^9, 3.66376478548608*^9}, {
   3.6637648359876523`*^9, 3.6637649485550156`*^9}, {3.663765020139448*^9, 
   3.663765021633501*^9}, 3.6637651656820283`*^9, 3.663765246738164*^9, {
   3.663765285560537*^9, 3.6637652951683064`*^9}, {3.663765367968604*^9, 
   3.66376539249289*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851273478*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558513075027`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558513475304`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585137455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851408574*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558514476023`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851490633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851514649*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851554677*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558515836983`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558516177216`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558516607513`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558516897717`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558517187915`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855851771829*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558517738304`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"table0", "[", 
  RowBox[{"[", 
   RowBox[{"10", ",", "20"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6637653167895336`*^9, 3.6637653635325007`*^9}, 
   3.6637653979577723`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BinaryReadList", "[", 
   RowBox[{"$Failed", ",", 
    RowBox[{"{", 
     RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
      ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
  "\[LeftDoubleBracket]", "200", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.6637653259680014`*^9, 3.663765363904741*^9}, 
   3.663765400092245*^9, 3.663827001054375*^9, 3.663837976394863*^9, 
   3.6638416444079533`*^9, 3.6638558519639645`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parametrizing Theta", "Subchapter",
 CellChangeTimes->{{3.663766197241109*^9, 3.663766203811731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"paramsTheta0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsTheta1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsTheta2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table2", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsTheta3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "paramsTheta0", "]"}]}], "Input",
 CellChangeTimes->{{3.663764127325178*^9, 3.6637641459623394`*^9}, {
   3.663764201095169*^9, 3.6637642017396517`*^9}, {3.6637642761570787`*^9, 
   3.663764286927676*^9}, {3.6637643640099955`*^9, 3.663764450314825*^9}, {
   3.663764538203769*^9, 3.6637645393345833`*^9}, {3.663764577007125*^9, 
   3.6637645813902082`*^9}, {3.663764613555878*^9, 3.6637646819220977`*^9}, {
   3.663765185083721*^9, 3.663765227146367*^9}, 3.663765303319063*^9, {
   3.6637654097270374`*^9, 3.6637654533277674`*^9}, {3.663765491905959*^9, 
   3.663765521094531*^9}, {3.663765829967231*^9, 3.6637658461106224`*^9}, 
   3.6637661698728323`*^9, 3.6637795969663267`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852031012*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852077044*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585211207*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852148096*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
      "$Failed", "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], "\<\"Real64\"\>", 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]},
     {
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"$Failed", ",", 
        RowBox[{"{", 
         RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
          ",", "\<\"Real64\"\>"}], "}"}]}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6637642801608963`*^9, 3.6637642878032813`*^9}, {
   3.6637643563335824`*^9, 3.6637644401006413`*^9}, 3.6637645401781745`*^9, 
   3.6637645820156484`*^9, {3.6637652130053835`*^9, 3.663765228403248*^9}, 
   3.6637653052704163`*^9, {3.663765413865954*^9, 3.6637654228022532`*^9}, 
   3.663765454741763*^9, {3.6637654940744896`*^9, 3.663765522641621*^9}, 
   3.663765863187646*^9, 3.663766170883526*^9, {3.6637795925812287`*^9, 
   3.6637795978939743`*^9}, 3.6638270010724006`*^9, 3.6638379764188805`*^9, 
   3.663841644436962*^9, 3.6638558521771145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"paramsTheta0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorFunction", "\[Rule]", "Red"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["\[Pi]", "2"]}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"paramsTheta1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["\[Pi]", "2"]}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"paramsTheta2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["\[Pi]", "2"]}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"paramsTheta3", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["\[Pi]", "2"]}], "}"}]}]}], "}"}]}], "]"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.663763364442489*^9, {3.6637637497840757`*^9, 3.6637638302497983`*^9}, {
   3.663763861169582*^9, 3.6637638668335934`*^9}, {3.663764053231951*^9, 
   3.663764060714224*^9}, {3.663765601838459*^9, 3.663765631469327*^9}, {
   3.663765684024367*^9, 3.6637657809206934`*^9}, {3.663765826773985*^9, 
   3.663765980921632*^9}, {3.6637660188933907`*^9, 3.663766082050932*^9}, {
   3.663766138745866*^9, 3.663766152967888*^9}, {3.6637662085370593`*^9, 
   3.663766222048581*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, {}, {}},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{356.70617760772905`, 231.87812286478453`},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0., 0.}, {0., 0.}, {0, Rational[1, 2] Pi}}, {{0., 0.}, {0., 0.}, {
     0, 1.5707963267948966`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.423856010218835, -2.7039540928417836`, 1.4530197266272287`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.663765781708229*^9, {3.6637658600954657`*^9, 3.6637658827244153`*^9}, {
   3.6637659230938807`*^9, 3.6637659313276863`*^9}, {3.6637659654447303`*^9, 
   3.6637659768677692`*^9}, {3.66376603861629*^9, 3.6637660840493145`*^9}, {
   3.663766139926711*^9, 3.6637661537194185`*^9}, 3.663766222896187*^9, 
   3.663779609045842*^9, 3.6638270080252886`*^9, 3.6638379765279703`*^9, 
   3.663841644544036*^9, 3.663855852299203*^9}]
}, Open  ]],

Cell[TextData[{
 "No surprise there : the diffuse lobe is almost static and has no prefered \
direction so \[Theta] = 0 \[DoubleLongRightArrow] One less parameter to worry \
about!\n",
 StyleBox["NOTE:",
  FontWeight->"Bold"],
 " Now it\[CloseCurlyQuote]s completely flat because I really constrained the \
\[Theta] parameter to 0 in subsequent simulations."
}], "Text",
 CellChangeTimes->{{3.6637662278577013`*^9, 3.6637662970654507`*^9}, {
  3.6638270235732565`*^9, 3.663827055440708*^9}, {3.6638288368115273`*^9, 
  3.6638288412026215`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting Lobe Roughness", "Subchapter",
 CellChangeTimes->{{3.6637663126264205`*^9, 3.663766319473265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"paramsAlpha0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsAlpha1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsAlpha2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table2", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsAlpha3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "paramsAlpha0", "]"}]}], "Input",
 CellChangeTimes->{{3.6637663347630315`*^9, 3.663766351695986*^9}, {
  3.6638557826661234`*^9, 3.6638557933436627`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852358242*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852399272*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852443303*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558524833307`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
      "$Failed", "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "\<\"Real64\"\>", "3", "4", "5", "6", "7", 
      "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", 
      "20"},
     {"21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", 
      "33", "34", "35", "36", "37", "38", "39", "40"},
     {"41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", 
      "53", "54", "55", "56", "57", "58", "59", "60"},
     {"61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", 
      "73", "74", "75", "76", "77", "78", "79", "80"},
     {"81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", 
      "93", "94", "95", "96", "97", "98", "99", "100"},
     {"101", "102", "103", "104", "105", "106", "107", "108", "109", "110", 
      "111", "112", "113", "114", "115", "116", "117", "118", "119", "120"},
     {"121", "122", "123", "124", "125", "126", "127", "128", "129", "130", 
      "131", "132", "133", "134", "135", "136", "137", "138", "139", "140"},
     {"141", "142", "143", "144", "145", "146", "147", "148", "149", "150", 
      "151", "152", "153", "154", "155", "156", "157", "158", "159", "160"},
     {"161", "162", "163", "164", "165", "166", "167", "168", "169", "170", 
      "171", "172", "173", "174", "175", "176", "177", "178", "179", "180"},
     {"181", "182", "183", "184", "185", "186", "187", "188", "189", "190", 
      "191", "192", "193", "194", "195", "196", "197", "198", "199", "200"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.663766352586584*^9, 3.663779611637661*^9, 
  3.6638270081864033`*^9, 3.6638379765459833`*^9, 3.6638416445830774`*^9, 
  3.663855852486334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"roughness2exponent", "[", "\[Alpha]_", "]"}], " ", ":=", " ", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"10", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]], "-", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"roughness2exponent", "[", "0.95913", "]"}]}], "Input",
 CellChangeTimes->{{3.6637666397619915`*^9, 3.6637667247469187`*^9}, {
  3.6638557606145916`*^9, 3.6638557745664167`*^9}}],

Cell[BoxData["0.32748908608444904`"], "Output",
 CellChangeTimes->{3.6637667251401668`*^9, 3.663779616153843*^9, 
  3.663827008214422*^9, 3.663837976558979*^9, 3.6638416445940723`*^9, 
  3.6638558524963408`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"roughness2exponent", "[", "paramsAlpha0", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ColorFunction", "\[Rule]", "Red"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"roughness2exponent", "[", "paramsAlpha1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ColorFunction", "\[Rule]", "Red"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"roughness2exponent", "[", "paramsAlpha2", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ColorFunction", "\[Rule]", "Red"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"roughness2exponent", "[", "paramsAlpha3", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ColorFunction", "\[Rule]", "Red"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6637663650663795`*^9, 3.66376637457308*^9}, {
  3.6637664890737815`*^9, 3.663766495993679*^9}, {3.663766740727178*^9, 
  3.6637667808954945`*^9}, {3.6637796215756664`*^9, 3.6637796233258996`*^9}, {
  3.663827061737147*^9, 3.6638270939820476`*^9}, {3.6638416674902315`*^9, 
  3.6638416733863664`*^9}, {3.6638557754570494`*^9, 3.6638558049648466`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nD+MG3kVxzd/Ljib3MVJnI2TOMnsxOt4vV6v/4GgQLiChiJAhaCwEHf8
ERKR6GgYeiTSwQFClpAoUSQaSosSDohoaE1DQ5MFDjjgLsTz88vze28+bkb7
8Wdnxt/xG8/z29n9L33zs2+e3dnZ+cL5nZ1zO/KozdLy+Sd2zKMOvAG8CbwF
PAOeA28D7wDvAu8B7wMfAB8CHwEfA58AnwJ/9fPMcjmOnteBN4A3gbeAZ8Bz
4G3gHeBd4D3gfeAD4EPgI+Bj4BPgU+ByHGuOi+d5DXgdeAN4E3gLeAY8B94G
3gHeBd4D3gc+AD4EPgI+Bj4BPgUux7fuuBxfz2vA68AbwJvAW8Az4DnwNvAO
8C7wHvA+8AHwIfAR8DHwCfApcDm+Dcfl+HpeA14H3gDeBN4CngHPgbeBd4B3
gfeA94EPgA+Bj4CPgU+AT4HL8W06LsfX8xrwOvAG8CbwFvAMeA68DbwDvAu8
B7wPfAB8CHwEfAx8AnwKXI5vy3E5vp7XgNeBN4A3gbeAZ8Bz4G3gHeBd4D3g
feAD4EPgI+Bj4BPgU+ByfDPH5fh6XgNeB94A3gTeAp4Bz4G3gXeAd4H3gPeB
D4APgY+Aj4FPgE+By/HNHZfj63kNeB14A3gTeAt4BjwH3gbeAd4F3gPeBz4A
PgQ+Aj4GPgE+BS7Ht+24HF/Pa8DrwBvAm8BbwDPgOfA28A7wLvAe8D7wAfAh
8BHwMfAJ8CnwV/3wK/67d14+Lsfvo3709svHrci/8tbLRyfy6WT9iPxMubXI
f7/e7qcj//F6u5+P/Kvr7b4V+YfXm/1W5Ovv3HaKyP+w3u73Iv/JertvR/61
9WZ/HvlH1tv9ZeTld3zLyBu/+NSfv92I3Oavx8Xmr9zmr9zmr9zmr9zmr9zm
r9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmT+9//T7B5q/c5q/c5q/c5q/c
5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/9vs1fuc1fuc1f
uc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1f+3Gbv3Kb
v3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv/bL
Nn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/l
Nn/tZ23+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+
ym3+ym3+2m/a/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb
/JXb/JXb/JXb/PNX3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav
3Oav3Oav3Oav3Oav3Oav/ZrNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nN
X7nNX7nNX7nNX7nNX7nNX7nkn/KO/W/KNfa/Kb/Y/6acYv+b8oj9b3rdsf9N
ry/2v8/Wv/dO7H+/vn76L7H/PV/+dBr635+Wr+809L8fLV/Haeh//1ju72no
f79R7tdp6H8vlNs/Df1v94vf//W73dj/pmXsf9My9r9pGfvftIz9b1rG/jct
Y/+blrH/TcvY/6Zl7H/TMva/aRn737SM/W9axv43LWP/m5ax/03L2P+67yFc
/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/rH/
LV/Whdj/pudj/1vmfD32v+n3oP/NYv+b1hf73/L5fux/03Zi/1tu92Ox/03b
j/1vub5Pxv437Vfsf8vtfi72v2l/Y/9bbn8e+99Lf/rZ44/vxv435R/73/R8
7H9T/rH/Tb8H/W8W+9+0vtj/pvxj/5u2E/vflH/sf9P2Y/+b8o/9b9qv2P+m
/GP/m/Y39r8p/9j/pvxj/5vyj/1vej72vyn/2P+m34P+N4v9b1pf7H9T/rH/
TduJ/W/KP/a/afux/035x/437Vfsf1P+sf9N+xv735R/7H9T/rH/TfnH/jc9
H/vflH/sf9PvQf+bxf43rS/2vyn/2P+m7cT+N+Uf+9+0/dj/pvxj/5v2K/a/
Kf/Y/6b9jf1vyj/2vyn/2P+WL+tc7H/TcYn9b7m7F2P/W14eXo7974v140rs
f8flcYz975vr7ezF/veH5X7F/ve36/W1Yv/7wXq792P/O1r/3oPY/365fH2x
//3B+unD2P/+pnyfxP73/fV2T2L/+92/fuZX916L/W/KP4f8ldv8ldv8ldv8
ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8laeHXA+9B38P73kD
eBN4C3gGPAfeBt4B3gXeA94HPgA+BD4CPgY+AT4FLv3DmVklL15zXPo97294
8OX94P0arF/eJ96vgy/vH+83wJf3lfeb4Mv7zfst8OV96P0M/Bz8HHx533q/
Db68n73fAV/e597vgi/vf+/3wJe68H4ffKkX7w/Alzry/hB8qS/vj8CXuvP+
GHypR+9PwJc69f4UfKnf3WpevOG41K/3pX69L/Xrfalf70v9el/q1/tSv96X
+vW+1K/3pX69L/Xrfalf70v9el/q1/s5+Dn4Ur/el/r1vtSv96V+vS/1632p
X+9L/Xpf6tf7Ur/el/r1vtSv96V+vS/1632pX+9L/Xpf6tf7Ur/el/r1vtSv
96V+vS/1632pX+9LnV6t5svrjkuden/Dgy916v0arF/q1Pt18KVOvd8AX+rU
+03wpU693wJf6tT7Gfg5+Dn4Uqfeb4Mvder9DvhSp97vgi916v0e+FKn3u+D
L3Xq/QH4UqfeH4Ivder9EfhSp94fgy916v0J+FKn3p+CL5+/e47L56zn8nnq
eR14A3gTeAt4BjwH3gbeAd4F3gPeBz4APgQ+Aj4GPgE+Bb45vlvf+xle3HZ8
c9yDL+dt79dg/XLe9n4dfDlve78Bvpy3vd8EX87b3m+BL+dt72fgy3nb+zn4
Ofht8OW87f0O+HLe9n4XfDlve78Hvpy3vd8HX87b3h+AL+dt7w/Bl/O290fg
y3nb+2Pw5bzt/Qn4ct72/hR8OW97X66j6D61+47LdRTdD+V9uY6i+928L9dR
dB+c9+U6iu6P875cR9F9c96X6yi6n877ch1F99l5Pwc/B1+uo+i+PO/LdRTd
r+d9uY6i+/i8L9dRdH+f9+U6iu77875cR9H9gN6X6yi6T9D7ch1F9w96X66j
6L5C78t1FN1v6H25jqL7EL2/qdOFv39N6nrf8U2dBl/q2vs1WL/Utffr4Etd
e78BvtS195vgS117vwW+1LX3M/Clrr2fg5+D3wZf6tr7HfClrr3fBV/q2vs9
8KWuvd8HX+ra+wPwpa69PwRf6tr7I/Clrr0/Bl/q2vsT8KWuvT8FX+ra+5s6
XeWOb+ox8Br4deAN4E3gLeAZ8Bx4G3gHeBd4D3gf+AD4EPgI+Bj4BPi0mheX
Nz+7udLsGvA94LeB36vm2T7wB8APgD8Efgj8CPgx8JNq/gTmfU9g3vcE5n1P
aN73N5jT/RfmdOI5X7zgXwT/9Wq/gLne8hr4MNdb7oEPc73lbfBhrre8V+3P
YK433wc/B/8B+DDXmx+AD3O9+UPwYa43PwQf5nrzI/Bhrjc/Bh/mevOTaj+D
ud5TmOtlMNd7CnO9DOZ6T2Gul8Fc7ynN9f4Bc7f3Ye52dlbpFxdm1b543n8D
fPl+0/mz6+DfAP8m+LfAvwP+XfDvV/sFzOkWUo/ez8GXevQ+zOkWUo/ehznd
QurR+zCnW0g9eh/mdAupR+/DnG4h9eh9mNMtpB6dP4M53TOY081gTvcM5nQz
mNM9gzndDOZ0z2hO90+Yo72AOdq5WaVffGjm/fLvw17sgn8l+MbzvnjBvwH+
TfBvgX8H/Lvg36/2lzB3W+2Dn4P/AHyYu60OwIe52+oh+DB3Wx2CD3O31RH4
MHdbHYMPc7fVSbU/h7nbc5i7zWHu9hzmbnOYuz2Hudsc5m7Pae72b5iXnZ95
nurrUuDpcQ34HvDbwO8B3wf+APgB8IfAD4EfAT8GflLNC5ijFTBHK2COVtAc
7RTmX/+pnn/J/VTBl75D/fLvX78T52Xp/XA5+MmDeVlxDXyYlxV74MO8TLzg
w7ysuFftZzAvm+2Dn4Mv1zneh3nZ7AB8mJfNHoIP87LZIfgwL5sdgQ/zstkx
+DAvm51U+3WYly1gXlaHedkC5mV1mJctYF5Wh3nZguZlf4d51v+q51nFpp8J
/qbv2PJTPV4MfqrH14OfPJp/yeeB92n+dRN8mn/dAZ/mX+I5fw7zr0I+F7yf
gy+fF96H+VchnyPeh/lXIZ8v3of5VyGfO96H+Vchn0feh/lXIZ9T3of5VyGf
X84fwvxrCfOvIcy/ljD/GsL8awnzryHMv5Y0/3oX5lMfVM+nirOzal/6DvUv
lf5u8Mv7R3auBL98zK5Wr7+4Dv4N8G+Cfwv8O+DfBf9+tb+AeZZ4wc/Bl77D
+zDPWh6AD/Os5UPwYZ61PAQf5lnLI/BhnrU8Bh/mWcuTav8RzLNWMM96BPOs
FcyzHsE8awXzrEcwz1rRPOtf1XOoYtPvb/GLJb8UeFrvVeA3gN8Cfrear2A+
JT8HDvOpFcynVjCfWsF8agXzqRXMpx7DfOoxzKcew3zqMcynCugLKvoF+/8R
dG5i/z+Ccuvr972Gb33fa9dzpppv+Xb9u9V86/sru/7dar7l2/VcreZb/bhd
z9VqvuXb/d+r9re48em4bF3HmvVs+XY/1bevi/4/lX4u29dF/zdMfbOerfOM
3a6eZ8x6tny7XfXNerbe58bf4v8H0BWl7Q==
   "], {{{}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
jB1Z9i6Ffw+WW3LgZsGy7ihe/w/IOb2w
          "]], Polygon3DBox[CompressedData["
1:eJxFmgf4z1Ubxo9zfjJDKbQQQkP2iEIIJSuSEpWGopL2HloqpSWlhFSoaJf2
jvYuvb3t+ba3tvf+uB9X1/W//c5z1vesZ9t8/OTdDs8ppbH6p6LfR0pKB+l3
gjBXdXup8vMqKX0hjFH5XrWPV9v+wky1P1bc92Bhvujd1Ge5+q4QRqr8sdpP
UNuJwlNqf0n04SpPFm4V/ZToQ1SeKNwguovGPMo6hI3V9kTx3PRZoPbnRB+q
8mHCzaIfEn1g8prniO6q8Y8lz7GJ2kaJfktrWSmMVnmafs8VPlf7F0I31T2e
PGZT9b+veG8HCFdpvheKv8Wal4h+V/SxKh8nPCT6HtH7qryfcLnoIZyR5l8m
DFP5YP1OEJarfYXwafFZnCQsV//Pi8snC8+Ifr947uNZk+jXRB+h8hThTtH/
K+57ivCc6CNEd1C5ozBI9PLis5wkLBQ9SnQLlbcQ2nI/opup3FzYWvRBotuo
vK2wo+hhojdP7rOl6NGiW6rcSmgvemTxWOZsw/sobmstdGb/opsmz9FK9KGi
2zFWGCD6eNFdVO4qjBB9YnG5m7C76JOLy9sJe4g+XXQPlbePN3qq6O7JdXuK
Prh47W2FvqK31JnfqfIdQh3ORvSDKj8gNBDdvuLy/cKGvGVha5W3EXbQ+H1F
b5Vc10N0G+5T5XuE9dT2VfHZnyq8oPZvisunCS+JPqB4Ls60l+hxordMnnM7
0XVFz0vmKXirrXCf6GVCfbV1FP1Q8pobiu5cMS88LGzE26Mu+QyHa75OFbcx
phFnUfFcrHl99iL6ruQzWZe7qHjvfHMDeLH4bnhDO2u+icVnyZ3txH1pnccJ
b4leKfRX+6b63UxoovY+ojeG14DonqIbsVbWL7p3cZk+G4luJ7oeZylUE92v
eOyaOUWfJXoHlXvCU6K3F90wec4NRXcTvSF3yRyizxfdm7crTBB9TvHYXsL+
otuKrpv8zXU4L9FPs3fOQ3T34rn4Rn3R7YvXtr5QXXQH0fWTx9QQ/UwxbyGD
FoveVnSd5G9UFb2F6Kp8S/hL5zaw+KwawxNq36W43AQeFL1rcRme2UL0kcW8
3EkYLPro4jJ3PlT0VqJrqlxLqCJ66+JybSGL3qa4vK5Q4AfRNZLHJNHNRetv
jaz/Q+trU9yXPVTU3qK4jT38qfZmZc2wNWN+F91KhWqcjfCP6NbFZb6xWnTL
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
          "]], 
         Polygon3DBox[{{1085, 453, 452, 451, 450, 449, 448, 1084}, {1084, 448,
           449, 450, 451, 452, 453, 1085}}], 
         Polygon3DBox[{{1104, 440, 441, 442, 443, 444, 445, 446, 447, 1084, 
          1085, 454, 955}}], Polygon3DBox[CompressedData["
1:eJwVzskzF2Acx/FHmtHVn+Ds3tWMg4MZF9PBDCenoqxlsrUIQ4qKGkTKNvaS
5W+g7MpQ2VLGrlTOvX6H18zn8Hzf88Rl5qbmXAghXCKWtIshrEaFsMYXvvKN
dTbYZIttvrPDD36yS4z7dPbsfQ445IhjTjjlF7854w9/+cc58e6vMGVP84GP
zDDLHPMssMgSy3ziMyuR/0WHkKBx1b5GFtlc5wY55JJHPgUUcpNbFBGnkaLR
Z/czwCBDDDPCW94xynvGGGeCSXo1kjRq7FoeUscjHlNPA094yjMaaeI5L8jQ
SNZotlto5SVttPOKDl7zhk666KYn8gcqNBI1btvFlFBKGeXc4S73uB95zwMq
qaKayxr/ATgJWOs=
          "]], Polygon3DBox[CompressedData["
1:eJwV0Vkzl1EcwPFjqaG0+KNJWvylxtYmWSpbKES2MigtokuuXbv2Itx4B+68
EJQlybSjbYjU57n4zDm/mTPfM8954kNj3aOJIYRUYgwmhVBtPZgQwgGSSSKR
BAL/LPv8ZY9d/rDDNveSQ5jVGbcvd/4GZVynlGtc5QqXuUQJxRRRSAFdOqs6
kzp3zU000sAd6qmjlhqquc0tblJFJY90JnS6dE6Ys8gkgxjpHOcYRzlCGoc5
RCop3NeJ62TprPOeNd6xyltWWGaJRd7wmgXmmaNWZ1pnxP6i7gXyOU8ecXI5
x1nOcJocTpHNSdp1ipnReWUeYZiXDPGC5zzjKYM84TED9NMXzRopTOn0Ru/F
Q3rojv4DnXTwILqXtug9aKWF5qinUeG7CnV+84uf/OA7W2yywTe+8oXPfOIj
H2jQ+Q98tULC
          "]], 
         Polygon3DBox[{{1084, 447, 446, 445, 444, 443, 442, 441, 440, 280, 
          281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 
          294, 101, 667, 955, 454, 1085}}], Polygon3DBox[CompressedData["
1:eJwV0tVPV2EcB+AfoWKCec+dit3dOjswrtzcvDLBnh2Izm6d3TK79R/wRhoV
mICUNRUEFXDYPufi2dm78+5zPu/3PbFzE+MTwkOhUBSxgYhQaFVYKLSSFSxn
GUtZQiIJLGYRC1nAfObxVEYqaaSTQSZZZJPDM57zglzyyCfoUS+jjw7bPbeR
zFaS2MJmNrGRDaxnHWtZw2peyimgkCJeUUwJpZRRzmve8JZ3vKct0YqU65Av
K49cXvCcZ+SQTRaZZJBOGqnBDGhPBzoSRyc604WudKM7PehJL3oHZw/OocMT
HZJ0SLG+wmUucZELnOccZznDaU5xkhMcp17OD37yi9/84S//CNkTRjgRRNKA
hgz2eo4OjSLNxfodb3nDa8opo5QSinlFEYUUBPdAP/ozgIEMCrIZwlCGMZwR
jGQUoxnDXh0qdJhtDsesj3KEwxziIAfYz75gP3vYzS52soMPcj7yKcijks9U
Uc0XvvKNGmqp4zsd6KtDig6PZT3iIQ+4zz3ucofb3OImN7jONa4SRWOa0JRm
NKcF0cTQkla0pg1tacc0HZJ1iHMX363rqKWGb3zlC9VU8ZlKKvjEx2AGjGUc
45nARCYxmSlMDb5FPNOZwUxmBf+cDjFm8B+q1Jg1
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bkuRFEcwOExdjN2D0BBS0LDO1BoZpixzLWUVCiJjlpCwzvYt2Hs+769
AAlvoPXdKL78/jm5OffccxuC8e6xvEgkMkUtF9TxazFcv+SKa2645Y57Hnjk
iWdeeOWNdz6Ikk8BhRRRTAmllBEjTjkVVFJFNTXhszZp1GZtod2c0CSd5mmd
IWNe0And1yxz5k/9Yjl8l8PEWTXX67meccoJxxyR45ADsuF+7LHLDttsscmo
ixphmCECMgwyQD99pEnRSw9JEmzYY5218PudaUV/nPeb+fA8mmPSvKSLBOZZ
7dK0pugwt2krTeGdaiz6/1//AAiWOPg=
      "]]}},
   VertexNormals->CompressedData["
1:eJztyKERwCAABLA/yiJM0h1qcdyhWZ0ROgEekci0sb5ZkvSaPDnZr/fee++9
995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffee++9
995777333nvvvffee+/v/x9nlCoO
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{390.929699240976, 213.3810994788179},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 1.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8925136234352515`, 1.5356776354800639`, 0.8515040446925782},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6637663756468496`*^9, 3.6637664975177345`*^9, {3.6637667655216417`*^9, 
   3.6637667817370696`*^9}, {3.6637796176699257`*^9, 3.6637796241554823`*^9}, 
   3.6638270082574525`*^9, 3.6638270636755266`*^9, 3.66382709469055*^9, 
   3.6638379766290417`*^9, {3.663841644630099*^9, 3.6638416739687753`*^9}, 
   3.6638558525353713`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nD+MG3kVxzd/Ljib3MVJnI2TOMnsxOt4vV6v/4GgQLiChiJAhaCwEHf8
ERKR6GgYeiTSwQFClpAoUSQaSosSDohoaE1DQ5MFDjjgLsTz88vze28+bkb7
8Wdnxt/xG8/z29n9L33zs2+e3dnZ+cL5nZ1zO/KozdLy+Sd2zKMOvAG8CbwF
PAOeA28D7wDvAu8B7wMfAB8CHwEfA58AnwJ/9fPMcjmOnteBN4A3gbeAZ8Bz
4G3gHeBd4D3gfeAD4EPgI+Bj4BPgU+ByHGuOi+d5DXgdeAN4E3gLeAY8B94G
3gHeBd4D3gc+AD4EPgI+Bj4BPgUux7fuuBxfz2vA68AbwJvAW8Az4DnwNvAO
8C7wHvA+8AHwIfAR8DHwCfApcDm+Dcfl+HpeA14H3gDeBN4CngHPgbeBd4B3
gfeA94EPgA+Bj4CPgU+AT4HL8W06LsfX8xrwOvAG8CbwFvAMeA68DbwDvAu8
B7wPfAB8CHwEfAx8AnwKXI5vy3E5vp7XgNeBN4A3gbeAZ8Bz4G3gHeBd4D3g
feAD4EPgI+Bj4BPgU+ByfDPH5fh6XgNeB94A3gTeAp4Bz4G3gXeAd4H3gPeB
D4APgY+Aj4FPgE+By/HNHZfj63kNeB14A3gTeAt4BjwH3gbeAd4F3gPeBz4A
PgQ+Aj4GPgE+BS7Ht+24HF/Pa8DrwBvAm8BbwDPgOfA28A7wLvAe8D7wAfAh
8BHwMfAJ8CnwV/3wK/67d14+Lsfvo3709svHrci/8tbLRyfy6WT9iPxMubXI
f7/e7qcj//F6u5+P/Kvr7b4V+YfXm/1W5Ovv3HaKyP+w3u73Iv/JertvR/61
9WZ/HvlH1tv9ZeTld3zLyBu/+NSfv92I3Oavx8Xmr9zmr9zmr9zmr9zmr9zm
r9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmT+9//T7B5q/c5q/c5q/c5q/c
5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/9vs1fuc1fuc1f
uc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1f+3Gbv3Kb
v3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv/bL
Nn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/l
Nn/tZ23+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+
ym3+ym3+2m/a/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb
/JXb/JXb/JXb/PNX3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav
3Oav3Oav3Oav3Oav3Oav/ZrNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nN
X7nNX7nNX7nNX7nNX7nNX7nkn/KO/W/KNfa/Kb/Y/6acYv+b8oj9b3rdsf9N
ry/2v8/Wv/dO7H+/vn76L7H/PV/+dBr635+Wr+809L8fLV/Haeh//1ju72no
f79R7tdp6H8vlNs/Df1v94vf//W73dj/pmXsf9My9r9pGfvftIz9b1rG/jct
Y/+blrH/TcvY/6Zl7H/TMva/aRn737SM/W9axv43LWP/m5ax/03L2P+67yFc
/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/rH/
LV/Whdj/pudj/1vmfD32v+n3oP/NYv+b1hf73/L5fux/03Zi/1tu92Ox/03b
j/1vub5Pxv437Vfsf8vtfi72v2l/Y/9bbn8e+99Lf/rZ44/vxv435R/73/R8
7H9T/rH/Tb8H/W8W+9+0vtj/pvxj/5u2E/vflH/sf9P2Y/+b8o/9b9qv2P+m
/GP/m/Y39r8p/9j/pvxj/5vyj/1vej72vyn/2P+m34P+N4v9b1pf7H9T/rH/
TduJ/W/KP/a/afux/035x/437Vfsf1P+sf9N+xv735R/7H9T/rH/TfnH/jc9
H/vflH/sf9PvQf+bxf43rS/2vyn/2P+m7cT+N+Uf+9+0/dj/pvxj/5v2K/a/
Kf/Y/6b9jf1vyj/2vyn/2P+WL+tc7H/TcYn9b7m7F2P/W14eXo7974v140rs
f8flcYz975vr7ezF/veH5X7F/ve36/W1Yv/7wXq792P/O1r/3oPY/365fH2x
//3B+unD2P/+pnyfxP73/fV2T2L/+92/fuZX916L/W/KP4f8ldv8ldv8ldv8
ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8laeHXA+9B38P73kD
eBN4C3gGPAfeBt4B3gXeA94HPgA+BD4CPgY+AT4FLv3DmVklL15zXPo97294
8OX94P0arF/eJ96vgy/vH+83wJf3lfeb4Mv7zfst8OV96P0M/Bz8HHx533q/
Db68n73fAV/e597vgi/vf+/3wJe68H4ffKkX7w/Alzry/hB8qS/vj8CXuvP+
GHypR+9PwJc69f4UfKnf3WpevOG41K/3pX69L/Xrfalf70v9el/q1/tSv96X
+vW+1K/3pX69L/Xrfalf70v9el/q1/s5+Dn4Ur/el/r1vtSv96V+vS/1632p
X+9L/Xpf6tf7Ur/el/r1vtSv96V+vS/1632pX+9L/Xpf6tf7Ur/el/r1vtSv
96V+vS/1632pX+9LnV6t5svrjkuden/Dgy916v0arF/q1Pt18KVOvd8AX+rU
+03wpU693wJf6tT7Gfg5+Dn4Uqfeb4Mvder9DvhSp97vgi916v0e+FKn3u+D
L3Xq/QH4UqfeH4Ivder9EfhSp94fgy916v0J+FKn3p+CL5+/e47L56zn8nnq
eR14A3gTeAt4BjwH3gbeAd4F3gPeBz4APgQ+Aj4GPgE+Bb45vlvf+xle3HZ8
c9yDL+dt79dg/XLe9n4dfDlve78Bvpy3vd8EX87b3m+BL+dt72fgy3nb+zn4
Ofht8OW87f0O+HLe9n4XfDlve78Hvpy3vd8HX87b3h+AL+dt7w/Bl/O290fg
y3nb+2Pw5bzt/Qn4ct72/hR8OW97X66j6D61+47LdRTdD+V9uY6i+928L9dR
dB+c9+U6iu6P875cR9F9c96X6yi6n877ch1F99l5Pwc/B1+uo+i+PO/LdRTd
r+d9uY6i+/i8L9dRdH+f9+U6iu77875cR9H9gN6X6yi6T9D7ch1F9w96X66j
6L5C78t1FN1v6H25jqL7EL2/qdOFv39N6nrf8U2dBl/q2vs1WL/Utffr4Etd
e78BvtS195vgS117vwW+1LX3M/Clrr2fg5+D3wZf6tr7HfClrr3fBV/q2vs9
8KWuvd8HX+ra+wPwpa69PwRf6tr7I/Clrr0/Bl/q2vsT8KWuvT8FX+ra+5s6
XeWOb+ox8Br4deAN4E3gLeAZ8Bx4G3gHeBd4D3gf+AD4EPgI+Bj4BPi0mheX
Nz+7udLsGvA94LeB36vm2T7wB8APgD8Efgj8CPgx8JNq/gTmfU9g3vcE5n1P
aN73N5jT/RfmdOI5X7zgXwT/9Wq/gLne8hr4MNdb7oEPc73lbfBhrre8V+3P
YK433wc/B/8B+DDXmx+AD3O9+UPwYa43PwQf5nrzI/Bhrjc/Bh/mevOTaj+D
ud5TmOtlMNd7CnO9DOZ6T2Gul8Fc7ynN9f4Bc7f3Ye52dlbpFxdm1b543n8D
fPl+0/mz6+DfAP8m+LfAvwP+XfDvV/sFzOkWUo/ez8GXevQ+zOkWUo/ehznd
QurR+zCnW0g9eh/mdAupR+/DnG4h9eh9mNMtpB6dP4M53TOY081gTvcM5nQz
mNM9gzndDOZ0z2hO90+Yo72AOdq5WaVffGjm/fLvw17sgn8l+MbzvnjBvwH+
TfBvgX8H/Lvg36/2lzB3W+2Dn4P/AHyYu60OwIe52+oh+DB3Wx2CD3O31RH4
MHdbHYMPc7fVSbU/h7nbc5i7zWHu9hzmbnOYuz2Hudsc5m7Pae72b5iXnZ95
nurrUuDpcQ34HvDbwO8B3wf+APgB8IfAD4EfAT8GflLNC5ijFTBHK2COVtAc
7RTmX/+pnn/J/VTBl75D/fLvX78T52Xp/XA5+MmDeVlxDXyYlxV74MO8TLzg
w7ysuFftZzAvm+2Dn4Mv1zneh3nZ7AB8mJfNHoIP87LZIfgwL5sdgQ/zstkx
+DAvm51U+3WYly1gXlaHedkC5mV1mJctYF5Wh3nZguZlf4d51v+q51nFpp8J
/qbv2PJTPV4MfqrH14OfPJp/yeeB92n+dRN8mn/dAZ/mX+I5fw7zr0I+F7yf
gy+fF96H+VchnyPeh/lXIZ8v3of5VyGfO96H+Vchn0feh/lXIZ9T3of5VyGf
X84fwvxrCfOvIcy/ljD/GsL8awnzryHMv5Y0/3oX5lMfVM+nirOzal/6DvUv
lf5u8Mv7R3auBL98zK5Wr7+4Dv4N8G+Cfwv8O+DfBf9+tb+AeZZ4wc/Bl77D
+zDPWh6AD/Os5UPwYZ61PAQf5lnLI/BhnrU8Bh/mWcuTav8RzLNWMM96BPOs
FcyzHsE8awXzrEcwz1rRPOtf1XOoYtPvb/GLJb8UeFrvVeA3gN8Cfrear2A+
JT8HDvOpFcynVjCfWsF8agXzqRXMpx7DfOoxzKcew3zqMcynCugLKvoF+/8R
dG5i/z+Ccuvr972Gb33fa9dzpppv+Xb9u9V86/sru/7dar7l2/VcreZb/bhd
z9VqvuXb/d+r9re48em4bF3HmvVs+XY/1bevi/4/lX4u29dF/zdMfbOerfOM
3a6eZ8x6tny7XfXNerbe58bf4v8H0BWl7Q==
   "], {{{}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
jB1Z9i6Ffw+WW3LgZsGy7ihe/w/IOb2w
          "]], Polygon3DBox[CompressedData["
1:eJxFmgf4z1Ubxo9zfjJDKbQQQkP2iEIIJSuSEpWGopL2HloqpSWlhFSoaJf2
jvYuvb3t+ba3tvf+uB9X1/W//c5z1vesZ9t8/OTdDs8ppbH6p6LfR0pKB+l3
gjBXdXup8vMqKX0hjFH5XrWPV9v+wky1P1bc92Bhvujd1Ge5+q4QRqr8sdpP
UNuJwlNqf0n04SpPFm4V/ZToQ1SeKNwguovGPMo6hI3V9kTx3PRZoPbnRB+q
8mHCzaIfEn1g8prniO6q8Y8lz7GJ2kaJfktrWSmMVnmafs8VPlf7F0I31T2e
PGZT9b+veG8HCFdpvheKv8Wal4h+V/SxKh8nPCT6HtH7qryfcLnoIZyR5l8m
DFP5YP1OEJarfYXwafFZnCQsV//Pi8snC8+Ifr947uNZk+jXRB+h8hThTtH/
K+57ivCc6CNEd1C5ozBI9PLis5wkLBQ9SnQLlbcQ2nI/opup3FzYWvRBotuo
vK2wo+hhojdP7rOl6NGiW6rcSmgvemTxWOZsw/sobmstdGb/opsmz9FK9KGi
2zFWGCD6eNFdVO4qjBB9YnG5m7C76JOLy9sJe4g+XXQPlbePN3qq6O7JdXuK
Prh47W2FvqK31JnfqfIdQh3ORvSDKj8gNBDdvuLy/cKGvGVha5W3EXbQ+H1F
b5Vc10N0G+5T5XuE9dT2VfHZnyq8oPZvisunCS+JPqB4Ls60l+hxordMnnM7
0XVFz0vmKXirrXCf6GVCfbV1FP1Q8pobiu5cMS88LGzE26Mu+QyHa75OFbcx
phFnUfFcrHl99iL6ruQzWZe7qHjvfHMDeLH4bnhDO2u+icVnyZ3txH1pnccJ
b4leKfRX+6b63UxoovY+ojeG14DonqIbsVbWL7p3cZk+G4luJ7oeZylUE92v
eOyaOUWfJXoHlXvCU6K3F90wec4NRXcTvSF3yRyizxfdm7crTBB9TvHYXsL+
otuKrpv8zXU4L9FPs3fOQ3T34rn4Rn3R7YvXtr5QXXQH0fWTx9QQ/UwxbyGD
FoveVnSd5G9UFb2F6Kp8S/hL5zaw+KwawxNq36W43AQeFL1rcRme2UL0kcW8
3EkYLPro4jJ3PlT0VqJrqlxLqCJ66+JybSGL3qa4vK5Q4AfRNZLHJNHNRetv
jaz/Q+trU9yXPVTU3qK4jT38qfZmZc2wNWN+F91KhWqcjfCP6NbFZb6xWnTL
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
          "]], 
         Polygon3DBox[{{1085, 453, 452, 451, 450, 449, 448, 1084}, {1084, 448,
           449, 450, 451, 452, 453, 1085}}], 
         Polygon3DBox[{{1104, 440, 441, 442, 443, 444, 445, 446, 447, 1084, 
          1085, 454, 955}}], Polygon3DBox[CompressedData["
1:eJwVzskzF2Acx/FHmtHVn+Ds3tWMg4MZF9PBDCenoqxlsrUIQ4qKGkTKNvaS
5W+g7MpQ2VLGrlTOvX6H18zn8Hzf88Rl5qbmXAghXCKWtIshrEaFsMYXvvKN
dTbYZIttvrPDD36yS4z7dPbsfQ445IhjTjjlF7854w9/+cc58e6vMGVP84GP
zDDLHPMssMgSy3ziMyuR/0WHkKBx1b5GFtlc5wY55JJHPgUUcpNbFBGnkaLR
Z/czwCBDDDPCW94xynvGGGeCSXo1kjRq7FoeUscjHlNPA094yjMaaeI5L8jQ
SNZotlto5SVttPOKDl7zhk666KYn8gcqNBI1btvFlFBKGeXc4S73uB95zwMq
qaKayxr/ATgJWOs=
          "]], Polygon3DBox[CompressedData["
1:eJwV0Vkzl1EcwPFjqaG0+KNJWvylxtYmWSpbKES2MigtokuuXbv2Itx4B+68
EJQlybSjbYjU57n4zDm/mTPfM8954kNj3aOJIYRUYgwmhVBtPZgQwgGSSSKR
BAL/LPv8ZY9d/rDDNveSQ5jVGbcvd/4GZVynlGtc5QqXuUQJxRRRSAFdOqs6
kzp3zU000sAd6qmjlhqquc0tblJFJY90JnS6dE6Ys8gkgxjpHOcYRzlCGoc5
RCop3NeJ62TprPOeNd6xyltWWGaJRd7wmgXmmaNWZ1pnxP6i7gXyOU8ecXI5
x1nOcJocTpHNSdp1ipnReWUeYZiXDPGC5zzjKYM84TED9NMXzRopTOn0Ru/F
Q3rojv4DnXTwILqXtug9aKWF5qinUeG7CnV+84uf/OA7W2yywTe+8oXPfOIj
H2jQ+Q98tULC
          "]], 
         Polygon3DBox[{{1084, 447, 446, 445, 444, 443, 442, 441, 440, 280, 
          281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 
          294, 101, 667, 955, 454, 1085}}], Polygon3DBox[CompressedData["
1:eJwV0tVPV2EcB+AfoWKCec+dit3dOjswrtzcvDLBnh2Izm6d3TK79R/wRhoV
mICUNRUEFXDYPufi2dm78+5zPu/3PbFzE+MTwkOhUBSxgYhQaFVYKLSSFSxn
GUtZQiIJLGYRC1nAfObxVEYqaaSTQSZZZJPDM57zglzyyCfoUS+jjw7bPbeR
zFaS2MJmNrGRDaxnHWtZw2peyimgkCJeUUwJpZRRzmve8JZ3vKct0YqU65Av
K49cXvCcZ+SQTRaZZJBOGqnBDGhPBzoSRyc604WudKM7PehJL3oHZw/OocMT
HZJ0SLG+wmUucZELnOccZznDaU5xkhMcp17OD37yi9/84S//CNkTRjgRRNKA
hgz2eo4OjSLNxfodb3nDa8opo5QSinlFEYUUBPdAP/ozgIEMCrIZwlCGMZwR
jGQUoxnDXh0qdJhtDsesj3KEwxziIAfYz75gP3vYzS52soMPcj7yKcijks9U
Uc0XvvKNGmqp4zsd6KtDig6PZT3iIQ+4zz3ucofb3OImN7jONa4SRWOa0JRm
NKcF0cTQkla0pg1tacc0HZJ1iHMX363rqKWGb3zlC9VU8ZlKKvjEx2AGjGUc
45nARCYxmSlMDb5FPNOZwUxmBf+cDjFm8B+q1Jg1
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bkuRFEcwOExdjN2D0BBS0LDO1BoZpixzLWUVCiJjlpCwzvYt2Hs+769
AAlvoPXdKL78/jm5OffccxuC8e6xvEgkMkUtF9TxazFcv+SKa2645Y57Hnjk
iWdeeOWNdz6Ikk8BhRRRTAmllBEjTjkVVFJFNTXhszZp1GZtod2c0CSd5mmd
IWNe0And1yxz5k/9Yjl8l8PEWTXX67meccoJxxyR45ADsuF+7LHLDttsscmo
ixphmCECMgwyQD99pEnRSw9JEmzYY5218PudaUV/nPeb+fA8mmPSvKSLBOZZ
7dK0pugwt2krTeGdaiz6/1//AAiWOPg=
      "]]}},
   VertexNormals->CompressedData["
1:eJztyKERwCAABLA/yiJM0h1qcdyhWZ0ROgEekci0sb5ZkvSaPDnZr/fee++9
995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffee++9
995777333nvvvffee+/v/x9nlCoO
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{390.929699240976, 213.3810994788179},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 1.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8925136234352515`, 1.5356776354800639`, 0.8515040446925782},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6637663756468496`*^9, 3.6637664975177345`*^9, {3.6637667655216417`*^9, 
   3.6637667817370696`*^9}, {3.6637796176699257`*^9, 3.6637796241554823`*^9}, 
   3.6638270082574525`*^9, 3.6638270636755266`*^9, 3.66382709469055*^9, 
   3.6638379766290417`*^9, {3.663841644630099*^9, 3.6638416739687753`*^9}, 
   3.663855852571394*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nD+MG3kVxzd/Ljib3MVJnI2TOMnsxOt4vV6v/4GgQLiChiJAhaCwEHf8
ERKR6GgYeiTSwQFClpAoUSQaSosSDohoaE1DQ5MFDjjgLsTz88vze28+bkb7
8Wdnxt/xG8/z29n9L33zs2+e3dnZ+cL5nZ1zO/KozdLy+Sd2zKMOvAG8CbwF
PAOeA28D7wDvAu8B7wMfAB8CHwEfA58AnwJ/9fPMcjmOnteBN4A3gbeAZ8Bz
4G3gHeBd4D3gfeAD4EPgI+Bj4BPgU+ByHGuOi+d5DXgdeAN4E3gLeAY8B94G
3gHeBd4D3gc+AD4EPgI+Bj4BPgUux7fuuBxfz2vA68AbwJvAW8Az4DnwNvAO
8C7wHvA+8AHwIfAR8DHwCfApcDm+Dcfl+HpeA14H3gDeBN4CngHPgbeBd4B3
gfeA94EPgA+Bj4CPgU+AT4HL8W06LsfX8xrwOvAG8CbwFvAMeA68DbwDvAu8
B7wPfAB8CHwEfAx8AnwKXI5vy3E5vp7XgNeBN4A3gbeAZ8Bz4G3gHeBd4D3g
feAD4EPgI+Bj4BPgU+ByfDPH5fh6XgNeB94A3gTeAp4Bz4G3gXeAd4H3gPeB
D4APgY+Aj4FPgE+By/HNHZfj63kNeB14A3gTeAt4BjwH3gbeAd4F3gPeBz4A
PgQ+Aj4GPgE+BS7Ht+24HF/Pa8DrwBvAm8BbwDPgOfA28A7wLvAe8D7wAfAh
8BHwMfAJ8CnwV/3wK/67d14+Lsfvo3709svHrci/8tbLRyfy6WT9iPxMubXI
f7/e7qcj//F6u5+P/Kvr7b4V+YfXm/1W5Ovv3HaKyP+w3u73Iv/JertvR/61
9WZ/HvlH1tv9ZeTld3zLyBu/+NSfv92I3Oavx8Xmr9zmr9zmr9zmr9zmr9zm
r9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmT+9//T7B5q/c5q/c5q/c5q/c
5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/9vs1fuc1fuc1f
uc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1f+3Gbv3Kb
v3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv/bL
Nn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/l
Nn/tZ23+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+
ym3+ym3+2m/a/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb
/JXb/JXb/JXb/PNX3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav
3Oav3Oav3Oav3Oav3Oav/ZrNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nN
X7nNX7nNX7nNX7nNX7nNX7nkn/KO/W/KNfa/Kb/Y/6acYv+b8oj9b3rdsf9N
ry/2v8/Wv/dO7H+/vn76L7H/PV/+dBr635+Wr+809L8fLV/Haeh//1ju72no
f79R7tdp6H8vlNs/Df1v94vf//W73dj/pmXsf9My9r9pGfvftIz9b1rG/jct
Y/+blrH/TcvY/6Zl7H/TMva/aRn737SM/W9axv43LWP/m5ax/03L2P+67yFc
/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/rH/
LV/Whdj/pudj/1vmfD32v+n3oP/NYv+b1hf73/L5fux/03Zi/1tu92Ox/03b
j/1vub5Pxv437Vfsf8vtfi72v2l/Y/9bbn8e+99Lf/rZ44/vxv435R/73/R8
7H9T/rH/Tb8H/W8W+9+0vtj/pvxj/5u2E/vflH/sf9P2Y/+b8o/9b9qv2P+m
/GP/m/Y39r8p/9j/pvxj/5vyj/1vej72vyn/2P+m34P+N4v9b1pf7H9T/rH/
TduJ/W/KP/a/afux/035x/437Vfsf1P+sf9N+xv735R/7H9T/rH/TfnH/jc9
H/vflH/sf9PvQf+bxf43rS/2vyn/2P+m7cT+N+Uf+9+0/dj/pvxj/5v2K/a/
Kf/Y/6b9jf1vyj/2vyn/2P+WL+tc7H/TcYn9b7m7F2P/W14eXo7974v140rs
f8flcYz975vr7ezF/veH5X7F/ve36/W1Yv/7wXq792P/O1r/3oPY/365fH2x
//3B+unD2P/+pnyfxP73/fV2T2L/+92/fuZX916L/W/KP4f8ldv8ldv8ldv8
ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8laeHXA+9B38P73kD
eBN4C3gGPAfeBt4B3gXeA94HPgA+BD4CPgY+AT4FLv3DmVklL15zXPo97294
8OX94P0arF/eJ96vgy/vH+83wJf3lfeb4Mv7zfst8OV96P0M/Bz8HHx533q/
Db68n73fAV/e597vgi/vf+/3wJe68H4ffKkX7w/Alzry/hB8qS/vj8CXuvP+
GHypR+9PwJc69f4UfKnf3WpevOG41K/3pX69L/Xrfalf70v9el/q1/tSv96X
+vW+1K/3pX69L/Xrfalf70v9el/q1/s5+Dn4Ur/el/r1vtSv96V+vS/1632p
X+9L/Xpf6tf7Ur/el/r1vtSv96V+vS/1632pX+9L/Xpf6tf7Ur/el/r1vtSv
96V+vS/1632pX+9LnV6t5svrjkuden/Dgy916v0arF/q1Pt18KVOvd8AX+rU
+03wpU693wJf6tT7Gfg5+Dn4Uqfeb4Mvder9DvhSp97vgi916v0e+FKn3u+D
L3Xq/QH4UqfeH4Ivder9EfhSp94fgy916v0J+FKn3p+CL5+/e47L56zn8nnq
eR14A3gTeAt4BjwH3gbeAd4F3gPeBz4APgQ+Aj4GPgE+Bb45vlvf+xle3HZ8
c9yDL+dt79dg/XLe9n4dfDlve78Bvpy3vd8EX87b3m+BL+dt72fgy3nb+zn4
Ofht8OW87f0O+HLe9n4XfDlve78Hvpy3vd8HX87b3h+AL+dt7w/Bl/O290fg
y3nb+2Pw5bzt/Qn4ct72/hR8OW97X66j6D61+47LdRTdD+V9uY6i+928L9dR
dB+c9+U6iu6P875cR9F9c96X6yi6n877ch1F99l5Pwc/B1+uo+i+PO/LdRTd
r+d9uY6i+/i8L9dRdH+f9+U6iu77875cR9H9gN6X6yi6T9D7ch1F9w96X66j
6L5C78t1FN1v6H25jqL7EL2/qdOFv39N6nrf8U2dBl/q2vs1WL/Utffr4Etd
e78BvtS195vgS117vwW+1LX3M/Clrr2fg5+D3wZf6tr7HfClrr3fBV/q2vs9
8KWuvd8HX+ra+wPwpa69PwRf6tr7I/Clrr0/Bl/q2vsT8KWuvT8FX+ra+5s6
XeWOb+ox8Br4deAN4E3gLeAZ8Bx4G3gHeBd4D3gf+AD4EPgI+Bj4BPi0mheX
Nz+7udLsGvA94LeB36vm2T7wB8APgD8Efgj8CPgx8JNq/gTmfU9g3vcE5n1P
aN73N5jT/RfmdOI5X7zgXwT/9Wq/gLne8hr4MNdb7oEPc73lbfBhrre8V+3P
YK433wc/B/8B+DDXmx+AD3O9+UPwYa43PwQf5nrzI/Bhrjc/Bh/mevOTaj+D
ud5TmOtlMNd7CnO9DOZ6T2Gul8Fc7ynN9f4Bc7f3Ye52dlbpFxdm1b543n8D
fPl+0/mz6+DfAP8m+LfAvwP+XfDvV/sFzOkWUo/ez8GXevQ+zOkWUo/ehznd
QurR+zCnW0g9eh/mdAupR+/DnG4h9eh9mNMtpB6dP4M53TOY081gTvcM5nQz
mNM9gzndDOZ0z2hO90+Yo72AOdq5WaVffGjm/fLvw17sgn8l+MbzvnjBvwH+
TfBvgX8H/Lvg36/2lzB3W+2Dn4P/AHyYu60OwIe52+oh+DB3Wx2CD3O31RH4
MHdbHYMPc7fVSbU/h7nbc5i7zWHu9hzmbnOYuz2Hudsc5m7Pae72b5iXnZ95
nurrUuDpcQ34HvDbwO8B3wf+APgB8IfAD4EfAT8GflLNC5ijFTBHK2COVtAc
7RTmX/+pnn/J/VTBl75D/fLvX78T52Xp/XA5+MmDeVlxDXyYlxV74MO8TLzg
w7ysuFftZzAvm+2Dn4Mv1zneh3nZ7AB8mJfNHoIP87LZIfgwL5sdgQ/zstkx
+DAvm51U+3WYly1gXlaHedkC5mV1mJctYF5Wh3nZguZlf4d51v+q51nFpp8J
/qbv2PJTPV4MfqrH14OfPJp/yeeB92n+dRN8mn/dAZ/mX+I5fw7zr0I+F7yf
gy+fF96H+VchnyPeh/lXIZ8v3of5VyGfO96H+Vchn0feh/lXIZ9T3of5VyGf
X84fwvxrCfOvIcy/ljD/GsL8awnzryHMv5Y0/3oX5lMfVM+nirOzal/6DvUv
lf5u8Mv7R3auBL98zK5Wr7+4Dv4N8G+Cfwv8O+DfBf9+tb+AeZZ4wc/Bl77D
+zDPWh6AD/Os5UPwYZ61PAQf5lnLI/BhnrU8Bh/mWcuTav8RzLNWMM96BPOs
FcyzHsE8awXzrEcwz1rRPOtf1XOoYtPvb/GLJb8UeFrvVeA3gN8Cfrear2A+
JT8HDvOpFcynVjCfWsF8agXzqRXMpx7DfOoxzKcew3zqMcynCugLKvoF+/8R
dG5i/z+Ccuvr972Gb33fa9dzpppv+Xb9u9V86/sru/7dar7l2/VcreZb/bhd
z9VqvuXb/d+r9re48em4bF3HmvVs+XY/1bevi/4/lX4u29dF/zdMfbOerfOM
3a6eZ8x6tny7XfXNerbe58bf4v8H0BWl7Q==
   "], {{{}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt1wWYVVUUhuE7+wzd0s3QLQwxw9DdNXR3dzfS3S0h0iGoiCggiIqA3Yrd
it2KSOj3u9bzeDwv6557555999nr3wkDx6WODbFYLDUuFos4D+PMf7ErHLN4
oTXn+3lhDm6D9+K8HOdwYnwslg+fx9XwG1yzCf9CbTrug3fg1/BG/BOejHvh
rXgq7o3vxTNxX7wL5+F4AlflM3Pjs7gKLoIv4lq4MH4GJ+O/+cK6h+LUinFc
wrWpF8XP4hRcED+Fa+JC+GmchPPjJ3F1XABfwDXweD6wB95IbSLuiTdjDVZ3
vB53wC3xFJyKW+FpuKuP1Szc2cdwBm6Dm+MJuDtui+fgdrgFnoSH4s54Oe6J
2+N78GjcDa/Fh7jfDjgd53nUB+B91JfjkfgBvAyPwEfxUjwcH8FL8DB8GC/G
Q/EhvBAPxgfwbNwP78ZzcX+8B8/Hg/B+fMPnSwn+l53jFK7AuP3ANXtwerwT
z8DneD0Hx2O4IvV/eW8GXI5aeo6HcEnqafGD+h3xH7z3AM6OP8T34n94/Te8
H2el/jHejm9Rj3AWXAnH4Uz6PvqCOCOn8jgjx8O4NO/9i/pBfBf+Bx/GefAt
fATn07zCh3AuHHjvMVwEx+PjuBjOjE/gsjgbflR/C2fBJ3WP+A73m17XUBvO
Z3bBK/H7eBv+G7+Lt+K/8Nd4N47nvV/iXboNfJPPSYNLcc0tnFb3ojnONavx
57gMTsAd8F0cj2tMdI9cH69xppaL4wy+m8Jt6ulwGWrf8d77cVr9Fji7njvq
7+At+A8cj7PiyvgtvBn/hj/FO/Ad/DneGYv9/wfT4Rx6lqn/hPfijNTT4Gz6
DtR/wftwZo0zzqx5ot+O4wFOhaiPpN4Vr6Y2GHfCS/E43BRvwhNwM7wFT/Nn
cyee4s/XdjwGN8Eb8CBcHy/Do3BjvA4PwQ3wCtwP18WL8AjcCK/Bk/xZ3qbn
izEsi69xNKZ+N+eR1Fvjangibour48l4AK6Hl+AeuDaeh1viRDweN8VV8Gjc
EFfGw3FzXBWPxcNwQ7wK18eV8FBcF1fEg3ESLof74lq4PO6Pq+HSuDuuisvg
nrgSLom74gRcBLfC5XBxnIpL4KK4Da6AS+DOuCgujFvgwrgQboYL4oK4Cc6N
8+F6OCfOi+vg2rgCHqj+gvPjBlo3cB6cgrPh3DgZZ8I5cSLOjwvgRjgDvoyr
4/a4Bp6KO+KaeDruhVPwXNwFJ+PZ+AW8Dn+DX8Lr8Xf4FbwB/6Ceg1fhT/EV
fvfpenY4P0d9Lf6a+mW8Bn+p9QwvwK9o7cEL8WvqOXgl/lhrBl6M38KP4EX4
DdzK5/M4PBCn4sW4b7D1fz5eiUfj43g1HosfwmfxMvy+1l28BL+DT+Ol+F18
Di/HH+Ltwe7lLF6BR+FjeAuehk/jjXgyPoVnBOt39+H9eA5+Fu/Fs/Ez+CCe
iy/reWSMcuGrOuJsDJM4X4uzNac5505cn4Rncv1W/l0HX+c4TP0ezs9RX4XH
4Ae1HuP5+CV8H56Jn8Rr8Dj8MN6AJ+FH8Vo8Hp/A6/FEfBKvwxPwI/gonodf
0NoZZz0xr74j9Vn4Keqb8BT8GL6Dj+ICrFE5Nb5aG3Ep6sVwO2pv+xz4E7/u
n/8rftHH7Xv8qt/jz/iqz5Pr+E2/x9/xez43bmhd9HF42cekh//uh/y3ex4f
8bnxos+Nnj4mFX2cO0W2Put5r+JzqbuP7Qc+J2/ij3z+3MbX8AotzdzjcZ9v
r0aWJTQ/lStO+ni+jU/5OF/Fi3DHmOWN5b6eH/P51s3n8BJf25VV0vraoh7x
mc/nOP7uJz6H/6We0deuavhln28/4jy+BtaNLP8oUykLPe/z89vIcqPWkwR8
M1gvy8/np8elYtazNH/6+ZzXnOnrc0lzrJfPpch/a/Us9Uf1X+WQfcEy2CV8
IFg2u6LrI8szCfytPcGy2UWfn719HmpO9vH5+ZWvFWmUnYLlhMJ4d7As9zTX
7AqW5S7guMhyRVGuOeFz/k1qO/AQfB5vDpblzuDiwfpOS1zZ18MuOJ/3lPq4
vK+fHfGPvr5l4vOr4Fq4G/WawZ7ZXvh2sMxQkGu24oH48cj6vvqI8kNisN7X
AxcK1jcb4wLB+l1DXCxYv2uOSwbrp61xkWD9sWlkuVQ5WdlVuVf5Shm4RbBs
MCayDKYepJyjfKi+pkyofKiepSyqXKqepZzWJFgeGBFZRlJ/UdbSvkMZVXsQ
ZTD1KeUx7U2UY1M8w6g/Kn8qJ6t/aW+iDKZ+p8y8gGvaxSxLaz+iPJnsGU/9
UTktq9a1mGXI5GA5pA+1BsH6/pDI9kfKsdorad+kvJro+xqtSzV8j6ZMqz2O
9m7Kutqv1QuWcwZFtj9SvtWeSPlQ2Vt7rkbBMs+wyDKtcqnyrfL83phlS+XM
fb7uaS+g/F/R91PKbzV9bVRuV+YsG6wvt49sj6ZMrv3ajWD7x7y4v68VCzUO
wfJVDVwnWGYb4OuJ5vNB/HOw/ptF2TKyfUEJfD3Y3jM3/jVYf8+GLwbbm3zB
tee9x32Cr/g6f02/p/eR1/El7y9fqS94T3kPX8BT8Uc4JViu64fPeK/8AP8Z
LD/kjLce2j9mvSNXsMxTG2cPltOScOlgWbEt/j5Yts+gcQ6W32pRzxBZxi6j
jB1Z9i6Ffw+WW3LgZsGy7ihe/w/IOb2w
          "]], Polygon3DBox[CompressedData["
1:eJxFmgf4z1Ubxo9zfjJDKbQQQkP2iEIIJSuSEpWGopL2HloqpSWlhFSoaJf2
jvYuvb3t+ba3tvf+uB9X1/W//c5z1vesZ9t8/OTdDs8ppbH6p6LfR0pKB+l3
gjBXdXup8vMqKX0hjFH5XrWPV9v+wky1P1bc92Bhvujd1Ge5+q4QRqr8sdpP
UNuJwlNqf0n04SpPFm4V/ZToQ1SeKNwguovGPMo6hI3V9kTx3PRZoPbnRB+q
8mHCzaIfEn1g8prniO6q8Y8lz7GJ2kaJfktrWSmMVnmafs8VPlf7F0I31T2e
PGZT9b+veG8HCFdpvheKv8Wal4h+V/SxKh8nPCT6HtH7qryfcLnoIZyR5l8m
DFP5YP1OEJarfYXwafFZnCQsV//Pi8snC8+Ifr947uNZk+jXRB+h8hThTtH/
K+57ivCc6CNEd1C5ozBI9PLis5wkLBQ9SnQLlbcQ2nI/opup3FzYWvRBotuo
vK2wo+hhojdP7rOl6NGiW6rcSmgvemTxWOZsw/sobmstdGb/opsmz9FK9KGi
2zFWGCD6eNFdVO4qjBB9YnG5m7C76JOLy9sJe4g+XXQPlbePN3qq6O7JdXuK
Prh47W2FvqK31JnfqfIdQh3ORvSDKj8gNBDdvuLy/cKGvGVha5W3EXbQ+H1F
b5Vc10N0G+5T5XuE9dT2VfHZnyq8oPZvisunCS+JPqB4Ls60l+hxordMnnM7
0XVFz0vmKXirrXCf6GVCfbV1FP1Q8pobiu5cMS88LGzE26Mu+QyHa75OFbcx
phFnUfFcrHl99iL6ruQzWZe7qHjvfHMDeLH4bnhDO2u+icVnyZ3txH1pnccJ
b4leKfRX+6b63UxoovY+ojeG14DonqIbsVbWL7p3cZk+G4luJ7oeZylUE92v
eOyaOUWfJXoHlXvCU6K3F90wec4NRXcTvSF3yRyizxfdm7crTBB9TvHYXsL+
otuKrpv8zXU4L9FPs3fOQ3T34rn4Rn3R7YvXtr5QXXQH0fWTx9QQ/UwxbyGD
FoveVnSd5G9UFb2F6Kp8S/hL5zaw+KwawxNq36W43AQeFL1rcRme2UL0kcW8
3EkYLPro4jJ3PlT0VqJrqlxLqCJ66+JybSGL3qa4vK5Q4AfRNZLHJNHNRetv
jaz/Q+trU9yXPVTU3qK4jT38qfZmZc2wNWN+F91KhWqcjfCP6NbFZb6xWnTL
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
          "]], 
         Polygon3DBox[{{1085, 453, 452, 451, 450, 449, 448, 1084}, {1084, 448,
           449, 450, 451, 452, 453, 1085}}], 
         Polygon3DBox[{{1104, 440, 441, 442, 443, 444, 445, 446, 447, 1084, 
          1085, 454, 955}}], Polygon3DBox[CompressedData["
1:eJwVzskzF2Acx/FHmtHVn+Ds3tWMg4MZF9PBDCenoqxlsrUIQ4qKGkTKNvaS
5W+g7MpQ2VLGrlTOvX6H18zn8Hzf88Rl5qbmXAghXCKWtIshrEaFsMYXvvKN
dTbYZIttvrPDD36yS4z7dPbsfQ445IhjTjjlF7854w9/+cc58e6vMGVP84GP
zDDLHPMssMgSy3ziMyuR/0WHkKBx1b5GFtlc5wY55JJHPgUUcpNbFBGnkaLR
Z/czwCBDDDPCW94xynvGGGeCSXo1kjRq7FoeUscjHlNPA094yjMaaeI5L8jQ
SNZotlto5SVttPOKDl7zhk666KYn8gcqNBI1btvFlFBKGeXc4S73uB95zwMq
qaKayxr/ATgJWOs=
          "]], Polygon3DBox[CompressedData["
1:eJwV0Vkzl1EcwPFjqaG0+KNJWvylxtYmWSpbKES2MigtokuuXbv2Itx4B+68
EJQlybSjbYjU57n4zDm/mTPfM8954kNj3aOJIYRUYgwmhVBtPZgQwgGSSSKR
BAL/LPv8ZY9d/rDDNveSQ5jVGbcvd/4GZVynlGtc5QqXuUQJxRRRSAFdOqs6
kzp3zU000sAd6qmjlhqquc0tblJFJY90JnS6dE6Ys8gkgxjpHOcYRzlCGoc5
RCop3NeJ62TprPOeNd6xyltWWGaJRd7wmgXmmaNWZ1pnxP6i7gXyOU8ecXI5
x1nOcJocTpHNSdp1ipnReWUeYZiXDPGC5zzjKYM84TED9NMXzRopTOn0Ru/F
Q3rojv4DnXTwILqXtug9aKWF5qinUeG7CnV+84uf/OA7W2yywTe+8oXPfOIj
H2jQ+Q98tULC
          "]], 
         Polygon3DBox[{{1084, 447, 446, 445, 444, 443, 442, 441, 440, 280, 
          281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 
          294, 101, 667, 955, 454, 1085}}], Polygon3DBox[CompressedData["
1:eJwV0tVPV2EcB+AfoWKCec+dit3dOjswrtzcvDLBnh2Izm6d3TK79R/wRhoV
mICUNRUEFXDYPufi2dm78+5zPu/3PbFzE+MTwkOhUBSxgYhQaFVYKLSSFSxn
GUtZQiIJLGYRC1nAfObxVEYqaaSTQSZZZJPDM57zglzyyCfoUS+jjw7bPbeR
zFaS2MJmNrGRDaxnHWtZw2peyimgkCJeUUwJpZRRzmve8JZ3vKct0YqU65Av
K49cXvCcZ+SQTRaZZJBOGqnBDGhPBzoSRyc604WudKM7PehJL3oHZw/OocMT
HZJ0SLG+wmUucZELnOccZznDaU5xkhMcp17OD37yi9/84S//CNkTRjgRRNKA
hgz2eo4OjSLNxfodb3nDa8opo5QSinlFEYUUBPdAP/ozgIEMCrIZwlCGMZwR
jGQUoxnDXh0qdJhtDsesj3KEwxziIAfYz75gP3vYzS52soMPcj7yKcijks9U
Uc0XvvKNGmqp4zsd6KtDig6PZT3iIQ+4zz3ucofb3OImN7jONa4SRWOa0JRm
NKcF0cTQkla0pg1tacc0HZJ1iHMX363rqKWGb3zlC9VU8ZlKKvjEx2AGjGUc
45nARCYxmSlMDb5FPNOZwUxmBf+cDjFm8B+q1Jg1
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bkuRFEcwOExdjN2D0BBS0LDO1BoZpixzLWUVCiJjlpCwzvYt2Hs+769
AAlvoPXdKL78/jm5OffccxuC8e6xvEgkMkUtF9TxazFcv+SKa2645Y57Hnjk
iWdeeOWNdz6Ikk8BhRRRTAmllBEjTjkVVFJFNTXhszZp1GZtod2c0CSd5mmd
IWNe0And1yxz5k/9Yjl8l8PEWTXX67meccoJxxyR45ADsuF+7LHLDttsscmo
ixphmCECMgwyQD99pEnRSw9JEmzYY5218PudaUV/nPeb+fA8mmPSvKSLBOZZ
7dK0pugwt2krTeGdaiz6/1//AAiWOPg=
      "]]}},
   VertexNormals->CompressedData["
1:eJztyKERwCAABLA/yiJM0h1qcdyhWZ0ROgEekci0sb5ZkvSaPDnZr/fee++9
995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffee++9
995777333nvvvffee+/v/x9nlCoO
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{390.929699240976, 213.3810994788179},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 1.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8925136234352515`, 1.5356776354800639`, 0.8515040446925782},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6637663756468496`*^9, 3.6637664975177345`*^9, {3.6637667655216417`*^9, 
   3.6637667817370696`*^9}, {3.6637796176699257`*^9, 3.6637796241554823`*^9}, 
   3.6638270082574525`*^9, 3.6638270636755266`*^9, 3.66382709469055*^9, 
   3.6638379766290417`*^9, {3.663841644630099*^9, 3.6638416739687753`*^9}, 
   3.663855852617426*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nD+MG3kVxzd/Ljib3MVJnI2TOMnsxOt4vV6v/4GgQLiChiJAhaCwEHf8
ERKR6GgYeiTSwQFClpAoUSQaSosSDohoaE1DQ5MFDjjgLsTz88vze28+bkb7
8Wdnxt/xG8/z29n9L33zs2+e3dnZ+cL5nZ1zO/KozdLy+Sd2zKMOvAG8CbwF
PAOeA28D7wDvAu8B7wMfAB8CHwEfA58AnwJ/9fPMcjmOnteBN4A3gbeAZ8Bz
4G3gHeBd4D3gfeAD4EPgI+Bj4BPgU+ByHGuOi+d5DXgdeAN4E3gLeAY8B94G
3gHeBd4D3gc+AD4EPgI+Bj4BPgUux7fuuBxfz2vA68AbwJvAW8Az4DnwNvAO
8C7wHvA+8AHwIfAR8DHwCfApcDm+Dcfl+HpeA14H3gDeBN4CngHPgbeBd4B3
gfeA94EPgA+Bj4CPgU+AT4HL8W06LsfX8xrwOvAG8CbwFvAMeA68DbwDvAu8
B7wPfAB8CHwEfAx8AnwKXI5vy3E5vp7XgNeBN4A3gbeAZ8Bz4G3gHeBd4D3g
feAD4EPgI+Bj4BPgU+ByfDPH5fh6XgNeB94A3gTeAp4Bz4G3gXeAd4H3gPeB
D4APgY+Aj4FPgE+By/HNHZfj63kNeB14A3gTeAt4BjwH3gbeAd4F3gPeBz4A
PgQ+Aj4GPgE+BS7Ht+24HF/Pa8DrwBvAm8BbwDPgOfA28A7wLvAe8D7wAfAh
8BHwMfAJ8CnwV/3wK/67d14+Lsfvo3709svHrci/8tbLRyfy6WT9iPxMubXI
f7/e7qcj//F6u5+P/Kvr7b4V+YfXm/1W5Ovv3HaKyP+w3u73Iv/JertvR/61
9WZ/HvlH1tv9ZeTld3zLyBu/+NSfv92I3Oavx8Xmr9zmr9zmr9zmr9zmr9zm
r9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmr9zmT+9//T7B5q/c5q/c5q/c5q/c
5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/c5q/9vs1fuc1fuc1f
uc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1fuc1f+3Gbv3Kb
v3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv3Kbv/bL
Nn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/lNn/l
Nn/tZ23+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+ym3+
ym3+ym3+2m/a/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb/JXb
/JXb/JXb/JXb/PNX3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav3Oav
3Oav3Oav3Oav3Oav3Oav/ZrNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nNX7nN
X7nNX7nNX7nNX7nNX7nNX7nkn/KO/W/KNfa/Kb/Y/6acYv+b8oj9b3rdsf9N
ry/2v8/Wv/dO7H+/vn76L7H/PV/+dBr635+Wr+809L8fLV/Haeh//1ju72no
f79R7tdp6H8vlNs/Df1v94vf//W73dj/pmXsf9My9r9pGfvftIz9b1rG/jct
Y/+blrH/TcvY/6Zl7H/TMva/aRn737SM/W9axv43LWP/m5ax/03L2P+67yFc
/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/spt/rH/
LV/Whdj/pudj/1vmfD32v+n3oP/NYv+b1hf73/L5fux/03Zi/1tu92Ox/03b
j/1vub5Pxv437Vfsf8vtfi72v2l/Y/9bbn8e+99Lf/rZ44/vxv435R/73/R8
7H9T/rH/Tb8H/W8W+9+0vtj/pvxj/5u2E/vflH/sf9P2Y/+b8o/9b9qv2P+m
/GP/m/Y39r8p/9j/pvxj/5vyj/1vej72vyn/2P+m34P+N4v9b1pf7H9T/rH/
TduJ/W/KP/a/afux/035x/437Vfsf1P+sf9N+xv735R/7H9T/rH/TfnH/jc9
H/vflH/sf9PvQf+bxf43rS/2vyn/2P+m7cT+N+Uf+9+0/dj/pvxj/5v2K/a/
Kf/Y/6b9jf1vyj/2vyn/2P+WL+tc7H/TcYn9b7m7F2P/W14eXo7974v140rs
f8flcYz975vr7ezF/veH5X7F/ve36/W1Yv/7wXq792P/O1r/3oPY/365fH2x
//3B+unD2P/+pnyfxP73/fV2T2L/+92/fuZX916L/W/KP4f8ldv8ldv8ldv8
ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8ldv8laeHXA+9B38P73kD
eBN4C3gGPAfeBt4B3gXeA94HPgA+BD4CPgY+AT4FLv3DmVklL15zXPo97294
8OX94P0arF/eJ96vgy/vH+83wJf3lfeb4Mv7zfst8OV96P0M/Bz8HHx533q/
Db68n73fAV/e597vgi/vf+/3wJe68H4ffKkX7w/Alzry/hB8qS/vj8CXuvP+
GHypR+9PwJc69f4UfKnf3WpevOG41K/3pX69L/Xrfalf70v9el/q1/tSv96X
+vW+1K/3pX69L/Xrfalf70v9el/q1/s5+Dn4Ur/el/r1vtSv96V+vS/1632p
X+9L/Xpf6tf7Ur/el/r1vtSv96V+vS/1632pX+9L/Xpf6tf7Ur/el/r1vtSv
96V+vS/1632pX+9LnV6t5svrjkuden/Dgy916v0arF/q1Pt18KVOvd8AX+rU
+03wpU693wJf6tT7Gfg5+Dn4Uqfeb4Mvder9DvhSp97vgi916v0e+FKn3u+D
L3Xq/QH4UqfeH4Ivder9EfhSp94fgy916v0J+FKn3p+CL5+/e47L56zn8nnq
eR14A3gTeAt4BjwH3gbeAd4F3gPeBz4APgQ+Aj4GPgE+Bb45vlvf+xle3HZ8
c9yDL+dt79dg/XLe9n4dfDlve78Bvpy3vd8EX87b3m+BL+dt72fgy3nb+zn4
Ofht8OW87f0O+HLe9n4XfDlve78Hvpy3vd8HX87b3h+AL+dt7w/Bl/O290fg
y3nb+2Pw5bzt/Qn4ct72/hR8OW97X66j6D61+47LdRTdD+V9uY6i+928L9dR
dB+c9+U6iu6P875cR9F9c96X6yi6n877ch1F99l5Pwc/B1+uo+i+PO/LdRTd
r+d9uY6i+/i8L9dRdH+f9+U6iu77875cR9H9gN6X6yi6T9D7ch1F9w96X66j
6L5C78t1FN1v6H25jqL7EL2/qdOFv39N6nrf8U2dBl/q2vs1WL/Utffr4Etd
e78BvtS195vgS117vwW+1LX3M/Clrr2fg5+D3wZf6tr7HfClrr3fBV/q2vs9
8KWuvd8HX+ra+wPwpa69PwRf6tr7I/Clrr0/Bl/q2vsT8KWuvT8FX+ra+5s6
XeWOb+ox8Br4deAN4E3gLeAZ8Bx4G3gHeBd4D3gf+AD4EPgI+Bj4BPi0mheX
Nz+7udLsGvA94LeB36vm2T7wB8APgD8Efgj8CPgx8JNq/gTmfU9g3vcE5n1P
aN73N5jT/RfmdOI5X7zgXwT/9Wq/gLne8hr4MNdb7oEPc73lbfBhrre8V+3P
YK433wc/B/8B+DDXmx+AD3O9+UPwYa43PwQf5nrzI/Bhrjc/Bh/mevOTaj+D
ud5TmOtlMNd7CnO9DOZ6T2Gul8Fc7ynN9f4Bc7f3Ye52dlbpFxdm1b543n8D
fPl+0/mz6+DfAP8m+LfAvwP+XfDvV/sFzOkWUo/ez8GXevQ+zOkWUo/ehznd
QurR+zCnW0g9eh/mdAupR+/DnG4h9eh9mNMtpB6dP4M53TOY081gTvcM5nQz
mNM9gzndDOZ0z2hO90+Yo72AOdq5WaVffGjm/fLvw17sgn8l+MbzvnjBvwH+
TfBvgX8H/Lvg36/2lzB3W+2Dn4P/AHyYu60OwIe52+oh+DB3Wx2CD3O31RH4
MHdbHYMPc7fVSbU/h7nbc5i7zWHu9hzmbnOYuz2Hudsc5m7Pae72b5iXnZ95
nurrUuDpcQ34HvDbwO8B3wf+APgB8IfAD4EfAT8GflLNC5ijFTBHK2COVtAc
7RTmX/+pnn/J/VTBl75D/fLvX78T52Xp/XA5+MmDeVlxDXyYlxV74MO8TLzg
w7ysuFftZzAvm+2Dn4Mv1zneh3nZ7AB8mJfNHoIP87LZIfgwL5sdgQ/zstkx
+DAvm51U+3WYly1gXlaHedkC5mV1mJctYF5Wh3nZguZlf4d51v+q51nFpp8J
/qbv2PJTPV4MfqrH14OfPJp/yeeB92n+dRN8mn/dAZ/mX+I5fw7zr0I+F7yf
gy+fF96H+VchnyPeh/lXIZ8v3of5VyGfO96H+Vchn0feh/lXIZ9T3of5VyGf
X84fwvxrCfOvIcy/ljD/GsL8awnzryHMv5Y0/3oX5lMfVM+nirOzal/6DvUv
lf5u8Mv7R3auBL98zK5Wr7+4Dv4N8G+Cfwv8O+DfBf9+tb+AeZZ4wc/Bl77D
+zDPWh6AD/Os5UPwYZ61PAQf5lnLI/BhnrU8Bh/mWcuTav8RzLNWMM96BPOs
FcyzHsE8awXzrEcwz1rRPOtf1XOoYtPvb/GLJb8UeFrvVeA3gN8Cfrear2A+
JT8HDvOpFcynVjCfWsF8agXzqRXMpx7DfOoxzKcew3zqMcynCugLKvoF+/8R
dG5i/z+Ccuvr972Gb33fa9dzpppv+Xb9u9V86/sru/7dar7l2/VcreZb/bhd
z9VqvuXb/d+r9re48em4bF3HmvVs+XY/1bevi/4/lX4u29dF/zdMfbOerfOM
3a6eZ8x6tny7XfXNerbe58bf4v8H0BWl7Q==
   "], {{{}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
jB1Z9i6Ffw+WW3LgZsGy7ihe/w/IOb2w
          "]], Polygon3DBox[CompressedData["
1:eJxFmgf4z1Ubxo9zfjJDKbQQQkP2iEIIJSuSEpWGopL2HloqpSWlhFSoaJf2
jvYuvb3t+ba3tvf+uB9X1/W//c5z1vesZ9t8/OTdDs8ppbH6p6LfR0pKB+l3
gjBXdXup8vMqKX0hjFH5XrWPV9v+wky1P1bc92Bhvujd1Ge5+q4QRqr8sdpP
UNuJwlNqf0n04SpPFm4V/ZToQ1SeKNwguovGPMo6hI3V9kTx3PRZoPbnRB+q
8mHCzaIfEn1g8prniO6q8Y8lz7GJ2kaJfktrWSmMVnmafs8VPlf7F0I31T2e
PGZT9b+veG8HCFdpvheKv8Wal4h+V/SxKh8nPCT6HtH7qryfcLnoIZyR5l8m
DFP5YP1OEJarfYXwafFZnCQsV//Pi8snC8+Ifr947uNZk+jXRB+h8hThTtH/
K+57ivCc6CNEd1C5ozBI9PLis5wkLBQ9SnQLlbcQ2nI/opup3FzYWvRBotuo
vK2wo+hhojdP7rOl6NGiW6rcSmgvemTxWOZsw/sobmstdGb/opsmz9FK9KGi
2zFWGCD6eNFdVO4qjBB9YnG5m7C76JOLy9sJe4g+XXQPlbePN3qq6O7JdXuK
Prh47W2FvqK31JnfqfIdQh3ORvSDKj8gNBDdvuLy/cKGvGVha5W3EXbQ+H1F
b5Vc10N0G+5T5XuE9dT2VfHZnyq8oPZvisunCS+JPqB4Ls60l+hxordMnnM7
0XVFz0vmKXirrXCf6GVCfbV1FP1Q8pobiu5cMS88LGzE26Mu+QyHa75OFbcx
phFnUfFcrHl99iL6ruQzWZe7qHjvfHMDeLH4bnhDO2u+icVnyZ3txH1pnccJ
b4leKfRX+6b63UxoovY+ojeG14DonqIbsVbWL7p3cZk+G4luJ7oeZylUE92v
eOyaOUWfJXoHlXvCU6K3F90wec4NRXcTvSF3yRyizxfdm7crTBB9TvHYXsL+
otuKrpv8zXU4L9FPs3fOQ3T34rn4Rn3R7YvXtr5QXXQH0fWTx9QQ/UwxbyGD
FoveVnSd5G9UFb2F6Kp8S/hL5zaw+KwawxNq36W43AQeFL1rcRme2UL0kcW8
3EkYLPro4jJ3PlT0VqJrqlxLqCJ66+JybSGL3qa4vK5Q4AfRNZLHJNHNRetv
jaz/Q+trU9yXPVTU3qK4jT38qfZmZc2wNWN+F91KhWqcjfCP6NbFZb6xWnTL
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
          "]], 
         Polygon3DBox[{{1085, 453, 452, 451, 450, 449, 448, 1084}, {1084, 448,
           449, 450, 451, 452, 453, 1085}}], 
         Polygon3DBox[{{1104, 440, 441, 442, 443, 444, 445, 446, 447, 1084, 
          1085, 454, 955}}], Polygon3DBox[CompressedData["
1:eJwVzskzF2Acx/FHmtHVn+Ds3tWMg4MZF9PBDCenoqxlsrUIQ4qKGkTKNvaS
5W+g7MpQ2VLGrlTOvX6H18zn8Hzf88Rl5qbmXAghXCKWtIshrEaFsMYXvvKN
dTbYZIttvrPDD36yS4z7dPbsfQ445IhjTjjlF7854w9/+cc58e6vMGVP84GP
zDDLHPMssMgSy3ziMyuR/0WHkKBx1b5GFtlc5wY55JJHPgUUcpNbFBGnkaLR
Z/czwCBDDDPCW94xynvGGGeCSXo1kjRq7FoeUscjHlNPA094yjMaaeI5L8jQ
SNZotlto5SVttPOKDl7zhk666KYn8gcqNBI1btvFlFBKGeXc4S73uB95zwMq
qaKayxr/ATgJWOs=
          "]], Polygon3DBox[CompressedData["
1:eJwV0Vkzl1EcwPFjqaG0+KNJWvylxtYmWSpbKES2MigtokuuXbv2Itx4B+68
EJQlybSjbYjU57n4zDm/mTPfM8954kNj3aOJIYRUYgwmhVBtPZgQwgGSSSKR
BAL/LPv8ZY9d/rDDNveSQ5jVGbcvd/4GZVynlGtc5QqXuUQJxRRRSAFdOqs6
kzp3zU000sAd6qmjlhqquc0tblJFJY90JnS6dE6Ys8gkgxjpHOcYRzlCGoc5
RCop3NeJ62TprPOeNd6xyltWWGaJRd7wmgXmmaNWZ1pnxP6i7gXyOU8ecXI5
x1nOcJocTpHNSdp1ipnReWUeYZiXDPGC5zzjKYM84TED9NMXzRopTOn0Ru/F
Q3rojv4DnXTwILqXtug9aKWF5qinUeG7CnV+84uf/OA7W2yywTe+8oXPfOIj
H2jQ+Q98tULC
          "]], 
         Polygon3DBox[{{1084, 447, 446, 445, 444, 443, 442, 441, 440, 280, 
          281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 
          294, 101, 667, 955, 454, 1085}}], Polygon3DBox[CompressedData["
1:eJwV0tVPV2EcB+AfoWKCec+dit3dOjswrtzcvDLBnh2Izm6d3TK79R/wRhoV
mICUNRUEFXDYPufi2dm78+5zPu/3PbFzE+MTwkOhUBSxgYhQaFVYKLSSFSxn
GUtZQiIJLGYRC1nAfObxVEYqaaSTQSZZZJPDM57zglzyyCfoUS+jjw7bPbeR
zFaS2MJmNrGRDaxnHWtZw2peyimgkCJeUUwJpZRRzmve8JZ3vKct0YqU65Av
K49cXvCcZ+SQTRaZZJBOGqnBDGhPBzoSRyc604WudKM7PehJL3oHZw/OocMT
HZJ0SLG+wmUucZELnOccZznDaU5xkhMcp17OD37yi9/84S//CNkTRjgRRNKA
hgz2eo4OjSLNxfodb3nDa8opo5QSinlFEYUUBPdAP/ozgIEMCrIZwlCGMZwR
jGQUoxnDXh0qdJhtDsesj3KEwxziIAfYz75gP3vYzS52soMPcj7yKcijks9U
Uc0XvvKNGmqp4zsd6KtDig6PZT3iIQ+4zz3ucofb3OImN7jONa4SRWOa0JRm
NKcF0cTQkla0pg1tacc0HZJ1iHMX363rqKWGb3zlC9VU8ZlKKvjEx2AGjGUc
45nARCYxmSlMDb5FPNOZwUxmBf+cDjFm8B+q1Jg1
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bkuRFEcwOExdjN2D0BBS0LDO1BoZpixzLWUVCiJjlpCwzvYt2Hs+769
AAlvoPXdKL78/jm5OffccxuC8e6xvEgkMkUtF9TxazFcv+SKa2645Y57Hnjk
iWdeeOWNdz6Ikk8BhRRRTAmllBEjTjkVVFJFNTXhszZp1GZtod2c0CSd5mmd
IWNe0And1yxz5k/9Yjl8l8PEWTXX67meccoJxxyR45ADsuF+7LHLDttsscmo
ixphmCECMgwyQD99pEnRSw9JEmzYY5218PudaUV/nPeb+fA8mmPSvKSLBOZZ
7dK0pugwt2krTeGdaiz6/1//AAiWOPg=
      "]]}},
   VertexNormals->CompressedData["
1:eJztyKERwCAABLA/yiJM0h1qcdyhWZ0ROgEekci0sb5ZkvSaPDnZr/fee++9
995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffee++9
995777333nvvvffee+/v/x9nlCoO
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{390.929699240976, 213.3810994788179},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 1.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8925136234352515`, 1.5356776354800639`, 0.8515040446925782},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6637663756468496`*^9, 3.6637664975177345`*^9, {3.6637667655216417`*^9, 
   3.6637667817370696`*^9}, {3.6637796176699257`*^9, 3.6637796241554823`*^9}, 
   3.6638270082574525`*^9, 3.6638270636755266`*^9, 3.66382709469055*^9, 
   3.6638379766290417`*^9, {3.663841644630099*^9, 3.6638416739687753`*^9}, 
   3.663855852657457*^9}]
}, Open  ]],

Cell["\<\
It would seem that, ignoring the last 2 or 3 rows of each array, we have \
quite a uniform roughness.
Averaging roughnesses we obtain:\
\>", "Text",
 CellChangeTimes->{{3.663767352162108*^9, 3.663767426218302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"avgAlpha0", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"paramsAlpha0", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"resY", "-", "3"}]}], "}"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"resX", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"resY", "-", "3"}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"avgAlpha1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"paramsAlpha1", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"resY", "-", "3"}]}], "}"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"resX", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"resY", "-", "3"}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"avgAlpha2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"paramsAlpha2", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"resY", "-", "3"}]}], "}"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"resX", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"resY", "-", "3"}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"avgAlpha3", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"paramsAlpha3", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"resY", "-", "3"}]}], "}"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"resX", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"resY", "-", "3"}], ")"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6637674368228045`*^9, 3.6637674389602876`*^9}, {
  3.6637674706526275`*^9, 3.663767563966412*^9}, {3.6638558104416995`*^9, 
  3.6638558245536766`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "140"], " ", 
  RowBox[{"(", 
   RowBox[{"9867", "+", "\<\"Real64\"\>", "+", 
    RowBox[{
    "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.663767521329368*^9, 3.663767565070179*^9}, 
   3.663779630098672*^9, 3.663827008321515*^9, 3.6638379767551303`*^9, 
   3.6638416448432617`*^9, 3.6638558526734643`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "140"], " ", 
  RowBox[{"(", 
   RowBox[{"9867", "+", "\<\"Real64\"\>", "+", 
    RowBox[{
    "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.663767521329368*^9, 3.663767565070179*^9}, 
   3.663779630098672*^9, 3.663827008321515*^9, 3.6638379767551303`*^9, 
   3.6638416448432617`*^9, 3.663855852676467*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "140"], " ", 
  RowBox[{"(", 
   RowBox[{"9867", "+", "\<\"Real64\"\>", "+", 
    RowBox[{
    "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.663767521329368*^9, 3.663767565070179*^9}, 
   3.663779630098672*^9, 3.663827008321515*^9, 3.6638379767551303`*^9, 
   3.6638416448432617`*^9, 3.6638558526774673`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "140"], " ", 
  RowBox[{"(", 
   RowBox[{"9867", "+", "\<\"Real64\"\>", "+", 
    RowBox[{
    "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.663767521329368*^9, 3.663767565070179*^9}, 
   3.663779630098672*^9, 3.663827008321515*^9, 3.6638379767551303`*^9, 
   3.6638416448432617`*^9, 3.663855852679469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"avgExponent0", "=", 
  RowBox[{
  "roughness2exponent", "[", "avgAlpha0", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"avgExponent1", "=", 
  RowBox[{
  "roughness2exponent", "[", "avgAlpha1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"avgExponent2", "=", 
  RowBox[{
  "roughness2exponent", "[", "avgAlpha2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"avgExponent3", "=", 
  RowBox[{"roughness2exponent", "[", "avgAlpha3", "]"}]}]}], "Input",
 CellChangeTimes->{{3.663767578212451*^9, 3.663767601916139*^9}, {
  3.663855827695861*^9, 3.663855841972938*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["2", 
   RowBox[{"10", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "140"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9867"}], "-", "\<\"Real64\"\>", "-", 
         RowBox[{
         "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6637676097536755`*^9, 3.663779633937391*^9, 
  3.663827008331506*^9, 3.663837976765134*^9, 3.6638416448552904`*^9, 
  3.6638558526904774`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["2", 
   RowBox[{"10", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "140"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9867"}], "-", "\<\"Real64\"\>", "-", 
         RowBox[{
         "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6637676097536755`*^9, 3.663779633937391*^9, 
  3.663827008331506*^9, 3.663837976765134*^9, 3.6638416448552904`*^9, 
  3.663855852697481*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["2", 
   RowBox[{"10", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "140"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9867"}], "-", "\<\"Real64\"\>", "-", 
         RowBox[{
         "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6637676097536755`*^9, 3.663779633937391*^9, 
  3.663827008331506*^9, 3.663837976765134*^9, 3.6638416448552904`*^9, 
  3.663855852699483*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["2", 
   RowBox[{"10", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "140"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9867"}], "-", "\<\"Real64\"\>", "-", 
         RowBox[{
         "$Failed", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6637676097536755`*^9, 3.663779633937391*^9, 
  3.663827008331506*^9, 3.663837976765134*^9, 3.6638416448552904`*^9, 
  3.6638558527024856`*^9}]
}, Open  ]],

Cell["\<\
So we could use an average exponent of 0.7, maybe 0.5 so we could simply take \
the square root of the cosine term?\
\>", "Text",
 CellChangeTimes->{{3.663767643792654*^9, 3.6637677106647863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Lobe Global Scale", "Subchapter",
 CellChangeTimes->{{3.663767729367968*^9, 3.663767755488405*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"paramsScale0", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"table0", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsScale1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsScale2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table2", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsScale3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.663767769145003*^9, 3.6637677847379932`*^9}, 
   3.663769332610984*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558527835426`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558527865443`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558528185673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855852858595*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585289362*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "$Failed", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     ",", "\<\"Real64\"\>", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "3", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "4", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "5", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "6", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "7", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "8", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "9", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "10", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "11", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "12", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "13", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "14", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "15", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "16", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "17", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "18", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "19", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "20", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "21", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "22", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "23", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "24", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "25", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "26", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "27", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "28", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "29", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "30", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "31", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "32", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "33", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "34", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "35", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "36", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "37", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "38", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "39", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "40", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "41", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "42", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "43", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "44", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "45", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "46", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "47", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "48", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "49", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "50", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "51", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "52", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "53", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "54", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "55", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "56", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "57", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "58", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "59", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "60", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "61", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "62", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "63", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "64", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "65", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "66", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "67", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "68", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "69", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "70", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "71", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "72", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "73", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "74", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "75", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "76", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "77", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "78", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "79", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "80", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "81", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "82", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "83", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "84", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "85", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "86", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "87", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "88", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "89", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "90", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "91", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "92", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "93", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "94", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "95", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "96", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "97", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "98", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "99", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "100", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "101", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "102", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "103", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "104", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "105", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "106", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "107", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "108", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "109", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "110", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "111", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "112", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "113", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "114", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "115", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "116", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "117", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "118", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "119", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "120", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "121", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "122", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "123", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "124", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "125", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "126", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "127", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "128", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "129", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "130", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "131", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "132", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "133", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "134", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "135", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "136", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "137", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "138", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "139", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "140", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "141", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "142", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "143", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "144", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "145", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "146", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "147", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "148", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "149", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "150", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "151", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "152", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "153", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "154", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "155", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "156", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "157", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "158", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "159", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "160", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "161", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "162", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "163", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "164", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "165", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "166", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "167", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "168", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "169", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "170", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "171", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "172", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "173", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "174", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "175", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "176", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "177", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "178", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "179", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "180", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "181", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "182", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "183", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "184", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "185", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "186", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "187", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "188", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "189", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "190", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "191", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "192", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "193", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "194", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "195", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "196", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "197", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "198", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "199", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "200", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6637693332163916`*^9, 3.6637796382254*^9, 
  3.663827008347517*^9, 3.6638379767831373`*^9, 3.6638416448682795`*^9, 
  3.663855852925644*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558529416547`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558529766784`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853010702*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558530507317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558530887575`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585312078*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558531918316`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558532018385`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853243869*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853253875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853289901*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558533329306`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853372959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558534109845`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853438005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsScale0", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsScale1", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.4"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsScale2", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsScale3", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.025"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.663767800648237*^9, 3.6637679841735888`*^9}, {
  3.663769328961404*^9, 3.6637693592177176`*^9}, {3.663827272370788*^9, 
  3.6638273939734898`*^9}}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{807., 514.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.}, {0., 0.}, {0, 0.7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3958633303211063`, 1.8935376355757263`, 1.457516423605913},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637678100498457`*^9, 3.6637678427408867`*^9}, {
   3.663767900209392*^9, 3.663767984774996*^9}, {3.6637693352468357`*^9, 
   3.663769359964246*^9}, 3.6637796419850492`*^9, 3.663827008405569*^9, 
   3.6638272744732637`*^9, {3.6638273103295355`*^9, 3.6638273945659084`*^9}, 
   3.6638379768592033`*^9, 3.663841644940316*^9, 3.663855853588109*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{807., 514.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.}, {0., 0.}, {0, 0.4}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3958633303211063`, 1.8935376355757263`, 1.457516423605913},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637678100498457`*^9, 3.6637678427408867`*^9}, {
   3.663767900209392*^9, 3.663767984774996*^9}, {3.6637693352468357`*^9, 
   3.663769359964246*^9}, 3.6637796419850492`*^9, 3.663827008405569*^9, 
   3.6638272744732637`*^9, {3.6638273103295355`*^9, 3.6638273945659084`*^9}, 
   3.6638379768592033`*^9, 3.663841644940316*^9, 3.663855853629152*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{807., 514.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.}, {0., 0.}, {0, 0.1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3958633303211063`, 1.8935376355757263`, 1.457516423605913},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637678100498457`*^9, 3.6637678427408867`*^9}, {
   3.663767900209392*^9, 3.663767984774996*^9}, {3.6637693352468357`*^9, 
   3.663769359964246*^9}, 3.6637796419850492`*^9, 3.663827008405569*^9, 
   3.6638272744732637`*^9, {3.6638273103295355`*^9, 3.6638273945659084`*^9}, 
   3.6638379768592033`*^9, 3.663841644940316*^9, 3.663855853665165*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{807., 514.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.}, {0., 0.}, {0, 0.025}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3958633303211063`, 1.8935376355757263`, 1.457516423605913},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637678100498457`*^9, 3.6637678427408867`*^9}, {
   3.663767900209392*^9, 3.663767984774996*^9}, {3.6637693352468357`*^9, 
   3.663769359964246*^9}, 3.6637796419850492`*^9, 3.663827008405569*^9, 
   3.6638272744732637`*^9, {3.6638273103295355`*^9, 3.6638273945659084`*^9}, 
   3.6638379768592033`*^9, 3.663841644940316*^9, 
   3.6638558536982*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Lobe Flattening Factor ==> FIRST PARAMETER MATCHED!", \
"Subchapter",
 CellChangeTimes->{{3.663768081278003*^9, 3.6637680861664453`*^9}, {
  3.663768965985583*^9, 3.66376896796902*^9}, {3.663834635993189*^9, 
  3.6638346418172965`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"paramsFlat0", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"table0", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsFlat1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsFlat2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table2", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsFlat3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6637680915672536`*^9, 3.6637681195620055`*^9}, 
   3.6637692555236516`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558537462206`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853782256*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853817272*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853855299*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558538793144`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "$Failed", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
     ",", "\<\"Real64\"\>", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "3", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "4", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "5", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "6", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "7", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "8", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "9", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "10", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "11", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "12", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "13", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "14", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "15", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "16", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "17", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "18", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "19", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "20", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "21", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "22", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "23", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "24", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "25", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "26", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "27", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "28", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "29", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "30", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "31", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "32", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "33", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "34", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "35", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "36", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "37", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "38", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "39", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "40", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "41", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "42", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "43", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "44", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "45", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "46", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "47", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "48", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "49", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "50", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "51", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "52", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "53", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "54", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "55", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "56", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "57", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "58", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "59", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "60", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "61", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "62", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "63", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "64", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "65", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "66", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "67", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "68", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "69", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "70", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "71", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "72", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "73", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "74", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "75", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "76", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "77", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "78", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "79", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "80", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "81", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "82", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "83", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "84", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "85", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "86", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "87", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "88", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "89", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "90", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "91", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "92", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "93", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "94", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "95", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "96", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "97", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "98", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "99", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "100", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "101", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "102", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "103", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "104", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "105", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "106", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "107", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "108", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "109", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "110", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "111", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "112", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "113", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "114", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "115", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "116", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "117", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "118", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "119", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "120", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "121", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "122", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "123", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "124", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "125", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "126", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "127", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "128", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "129", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "130", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "131", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "132", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "133", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "134", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "135", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "136", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "137", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "138", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "139", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "140", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "141", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "142", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "143", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "144", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "145", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "146", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "147", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "148", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "149", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "150", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "151", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "152", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "153", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "154", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "155", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "156", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "157", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "158", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "159", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "160", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "161", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "162", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "163", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "164", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "165", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "166", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "167", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "168", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "169", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "170", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "171", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "172", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "173", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "174", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "175", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "176", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "177", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "178", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "179", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "180", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "181", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "182", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "183", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "184", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "185", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "186", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "187", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "188", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "189", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "190", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "191", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "192", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "193", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "194", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "195", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "196", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "197", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "198", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "199", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"$Failed", ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
           ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
       "200", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6637692558948956`*^9, 3.6637796547370377`*^9, 
  3.6638270084746065`*^9, 3.663837976989295*^9, 3.6638416450614147`*^9, 
  3.6638558539123383`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558539263477`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855853960374*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558539943953`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558540334244`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854066448*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854094466*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854129491*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854167519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558542085466`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854232564*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854265588*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558543086185`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854342643*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] does not exist. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558543756657`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558543996825`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsFlat0", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"paramsFlat1", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"paramsFlat2", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"paramsFlat3", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6637681231435227`*^9, 3.663768167914093*^9}, {
   3.663769110018077*^9, 3.6637691426680927`*^9}, 3.66376917883458*^9, {
   3.66382748157323*^9, 3.663827508320091*^9}, {3.6638282147530904`*^9, 
   3.663828224503961*^9}, {3.6638283287834716`*^9, 3.6638283338150043`*^9}}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{847.0509118884513, 658.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.}, {0., 0.}, {0, 1.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.4417453851301139`, -2.7135196445359475`, 1.417103166030518},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.663768124541507*^9, 3.6637681684544435`*^9}, {
   3.6637691218364067`*^9, 3.663769144195177*^9}, 3.663769179725209*^9, 
   3.663779658478673*^9, 3.6638270085226393`*^9, {3.663827483549624*^9, 
   3.6638275091906967`*^9}, {3.66382821702569*^9, 3.6638282261931677`*^9}, {
   3.663828329145747*^9, 3.6638283376897373`*^9}, 3.663837977036316*^9, 
   3.6638416450984273`*^9, 3.663855854442712*^9}]
}, Open  ]],

Cell["\<\
We see that for albedo 1 and 0.75, the shape is pretty similar and that for \
lower albedos the change was neglected and is always 1.
We thus concentrate on albedo 1 to fit what seems to be a pretty \
straightforward shape, except when roughness becomes low in which case the \
fitter resorted to the default value and modified the other parameters instead.
So basically our range of confidence in \[Rho] is from index 1 to about 6.

\
\>", "Text",
 CellChangeTimes->{{3.6638282705814857`*^9, 3.6638283107337365`*^9}, {
  3.6638283419657526`*^9, 3.6638284895247545`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"i", "-", "1"}], 
        RowBox[{"resX", "-", "1"}]], ",", "  ", 
       RowBox[{
        RowBox[{"paramsFlat0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", "test", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valuesSn", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"i", "-", "1"}], 
            RowBox[{"resX", "-", "1"}]], "*", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{
          RowBox[{"paramsFlat0", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"valuesSn", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], " ", ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Hue", "[", 
        RowBox[{"0.16", "*", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6638300480762525`*^9, 3.6638300765102916`*^9}, {
  3.6638301277474065`*^9, 3.663830177724633*^9}, {3.6638302091808023`*^9, 
  3.6638304123019695`*^9}, {3.663830452723457*^9, 3.6638305659952927`*^9}, {
  3.6638305969090815`*^9, 3.6638306286704693`*^9}, {3.663830660979237*^9, 
  3.6638307437025433`*^9}, {3.663830919785651*^9, 3.6638309248141947`*^9}, {
  3.663830956050209*^9, 3.66383096479838*^9}, {3.6638312155371027`*^9, 
  3.663831222640109*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, {}}, {{}, {}, {}}, {{}, {}, {}}, {{}, {}, {}}, {{}, \
{}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6638302903350143`*^9, 3.6638304128743696`*^9}, {
   3.6638304921012096`*^9, 3.663830530705431*^9}, 3.663830568571108*^9, {
   3.663830601663432*^9, 3.663830629369961*^9}, {3.663830673988407*^9, 
   3.663830744679244*^9}, 3.6638309264663715`*^9, 3.6638309659231806`*^9, 
   3.6638312253490205`*^9, 3.6638379771814303`*^9, 3.6638416452375383`*^9, 
   3.6638558546628685`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelSn", "=", 
   RowBox[{"a", "+", 
    RowBox[{"b", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "c"}], " ", "*", " ", "u"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fittingSn", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FindFit", "[", " ", 
      RowBox[{
       RowBox[{"valuesSn", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "modelSn", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "fittingSn", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"modelSn", "/.", "fittingSn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"modelSn", "/.", 
        RowBox[{"fittingSn", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Hue", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "6"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"valuesSn", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], " ", ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.16", "*", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6638285817357445`*^9, 3.663828583797202*^9}, {
   3.663828724990732*^9, 3.663828725385016*^9}, 3.6638300360067453`*^9, {
   3.663830843410821*^9, 3.6638308694811954`*^9}, {3.663831048890649*^9, 
   3.663831094590883*^9}, {3.663831124864206*^9, 3.6638312462827787`*^9}, {
   3.6638312911203747`*^9, 3.6638313429679193`*^9}, {3.663831411674344*^9, 
   3.6638316926714*^9}, {3.663831729444315*^9, 3.663831741107547*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854748927*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585480997*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558548700128`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855854898033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855003107*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855069154*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855129197*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558551612177`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
             "$Failed", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", "\<\"Real64\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "14", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "16", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "17", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "18", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "19", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]},
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "22", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "23", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "24", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "25", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "26", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "27", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "28", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "29", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "30", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "31", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "32", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "33", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "34", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "35", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "36", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "38", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "39", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "40", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]},
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "41", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "42", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "43", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "44", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "45", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "46", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "47", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "48", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "49", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "50", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "51", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "52", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "53", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "54", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "55", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "56", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "57", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "58", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "59", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "60", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]},
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "61", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "62", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "63", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "64", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "65", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "66", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "67", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "68", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "69", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "70", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "71", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "72", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "73", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "74", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "75", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "76", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "77", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "78", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "79", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "80", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]},
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "81", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "82", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "83", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "84", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "85", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "86", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "87", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "88", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "89", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "90", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "91", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "92", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "93", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "94", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "95", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "96", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "97", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "98", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "99", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "100", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]},
      {
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "101", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "102", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "103", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "104", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "105", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "106", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "107", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "108", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "109", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "110", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "111", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "112", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "113", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "114", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "115", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "116", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "117", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "19"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "118", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "38"], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "119", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"BinaryReadList", "[", 
                RowBox[{"$Failed", ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                   ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "120", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.663831130380081*^9, 3.6638311465104513`*^9}, 
   3.6638312473345137`*^9, {3.6638312994212284`*^9, 3.663831343913635*^9}, 
   3.6638314286372986`*^9, {3.663831506614264*^9, 3.663831582131486*^9}, {
   3.6638316143742123`*^9, 3.663831693172752*^9}, 3.6638317419651394`*^9, 
   3.66383797720245*^9, 3.6638416453345947`*^9, 3.663855855200246*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558552272644`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558552843046`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558553453474`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558553803735`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\
\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855406392*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"a", "+", 
    RowBox[{"b", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "c"}], " ", "u"}]]}]}], "/.", "\[VeryThinSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
           "$Failed", "\[LeftDoubleBracket]", "4", 
            "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", "\<\"Real64\"\>"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "14", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "16", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "17", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "18", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "19", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}], ",", 
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "22", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "23", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "24", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "25", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "26", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "27", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "28", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "29", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "30", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "31", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "32", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "33", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "34", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "35", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "36", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "38", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "39", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "40", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}], ",", 
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "41", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "42", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "43", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "44", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "45", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "46", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "47", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "48", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "49", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "50", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "51", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "52", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "53", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "54", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "55", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "56", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "57", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "58", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "59", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "60", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}], ",", 
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "61", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "62", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "63", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "64", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "65", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "66", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "67", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "68", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "69", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "70", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "71", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "72", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "73", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "74", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "75", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "76", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "77", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "78", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "79", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "80", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}], ",", 
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "81", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "82", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "83", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "84", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "85", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "86", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "87", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "88", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "89", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "90", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "91", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "92", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "93", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "94", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "95", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "96", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "97", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "98", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "99", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "100", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}], ",", 
     RowBox[{"FindFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "101", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "102", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "103", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "104", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "105", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "106", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "107", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "108", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "109", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "110", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "111", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "112", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "113", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "114", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "115", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "116", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "117", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "19"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "118", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "38"], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "119", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryReadList", "[", 
              RowBox[{"$Failed", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                 ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "120", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}],
         "}"}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}], "}"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.663831130380081*^9, 3.6638311465104513`*^9}, 
   3.6638312473345137`*^9, {3.6638312994212284`*^9, 3.663831343913635*^9}, 
   3.6638314286372986`*^9, {3.663831506614264*^9, 3.663831582131486*^9}, {
   3.6638316143742123`*^9, 3.663831693172752*^9}, 3.6638317419651394`*^9, 
   3.66383797720245*^9, 3.6638416453345947`*^9, 3.663855855434428*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0\\)\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558554894495`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + b\\)\\), \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), 0\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855513466*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0\\)\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558555454903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + b\\)\\), \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), 0\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855558498*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.000020428571428571424`\\)\[NoBreak] is \
not a valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855600528*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: ivar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558556025295`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\), \
\\(\\(\[LeftSkeleton] 24 \[RightSkeleton]\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558556265464`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855855655567*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {}, {}, {{}, {}, {}}, {{}, {}, {}}, {{}, {}, \
{}}, {{}, {}, {}}, {{}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.663831130380081*^9, 3.6638311465104513`*^9}, 
   3.6638312473345137`*^9, {3.6638312994212284`*^9, 3.663831343913635*^9}, 
   3.6638314286372986`*^9, {3.663831506614264*^9, 3.663831582131486*^9}, {
   3.6638316143742123`*^9, 3.663831693172752*^9}, 3.6638317419651394`*^9, 
   3.66383797720245*^9, 3.6638416453345947`*^9, 3.6638558559687867`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Parameters", "Subsubsection",
 CellChangeTimes->{{3.6638318029141006`*^9, 3.6638318263606744`*^9}}],

Cell["\<\
Now that we have a bunch of nice expressions for representing \
f(cos(\[Theta])), we need to find tendencies in the fitted parameters a, b \
and c.\
\>", "Text",
 CellChangeTimes->{{3.6638318295528765`*^9, 3.6638318725371795`*^9}, {
   3.6638319092170305`*^9, 3.663831940392047*^9}, 3.6638327828757935`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fa", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"j", "-", "1"}], "9"], ",", 
       RowBox[{"a", "/.", 
        RowBox[{"fittingSn", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fb", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"j", "-", "1"}], "9"], ",", 
       RowBox[{"b", "/.", 
        RowBox[{"fittingSn", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fc", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"j", "-", "1"}], "9"], ",", 
       RowBox[{"c", "/.", 
        RowBox[{"fittingSn", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfa", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"fa", ",", "x", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfb", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"fb", ",", "x", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfc", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"fc", ",", "x", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "mfa", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "mfb", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "mfc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"fa", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"mfa", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"fb", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"mfb", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"fc", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"mfc", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.663831956671469*^9, 3.663832176592475*^9}, {
  3.663832219169495*^9, 3.6638324772643948`*^9}, {3.6638325106629453`*^9, 
  3.6638327471416087`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558560948777`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856144912*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856201954*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558562309723`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558562579937`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558562980194`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558563450537`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558563750763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856509168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856566208*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856623251*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855856649268*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558566932993`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558567273283`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558567713537`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558568023753`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558569254637`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558569915085`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558570515504`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857077569*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558571115932`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857159627*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558572066607`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857239685*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385585737678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857401798*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857460839*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857490861*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857544898*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558575669136`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857593933*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855857605943*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558578331013`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558581853495`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558582423925`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855858280418*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558583454647`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855858385493*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558584395304`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855858467549*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558584935694`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855858507579*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558587137237`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855858936881*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558590019264`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859029945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558590859847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558591130047`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859171045*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558592270837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859229086*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558592410955`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859478262*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859722433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558597824755`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859812496*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558598775434`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558598985577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859953597*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859978613*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855859999628*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855860012637*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855860217784*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855860414921*^9}],

Cell[BoxData[
 RowBox[{"LinearModelFit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
              "$Failed", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", "\<\"Real64\"\>"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "14", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "16", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "17", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "18", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "19", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "9"], ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "22", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "23", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "24", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "25", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "26", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "27", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "28", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "29", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "30", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "31", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "32", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "33", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "34", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "35", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "36", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "38", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "39", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "40", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "9"], ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "41", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "42", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "43", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "44", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "45", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "46", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "47", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "48", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "49", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "50", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "51", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "52", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "53", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "54", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "55", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "56", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "57", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "58", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "59", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "60", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "61", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "62", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "63", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "64", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "65", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "66", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "67", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "68", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "69", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "70", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "71", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "72", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "73", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "74", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "75", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "76", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "77", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "78", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "79", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "80", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "9"], ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "81", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "82", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "83", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "84", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "85", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "86", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "87", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "88", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "89", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "90", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "91", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "92", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "93", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "94", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "95", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "96", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "97", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "98", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "99", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "100", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "9"], ",", 
       RowBox[{"a", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "101", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "102", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "103", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "104", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "105", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "106", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "107", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "108", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "109", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "110", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "111", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "112", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "113", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "114", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "115", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "116", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "117", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "118", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "119", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "120", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}]}], "}"}], ",", "x", ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6638320168629065`*^9, {3.663832077492626*^9, 3.663832177512122*^9}, {
   3.663832268939562*^9, 3.663832286351866*^9}, {3.663832349759527*^9, 
   3.663832408122661*^9}, {3.6638324471241503`*^9, 3.6638324780499487`*^9}, {
   3.6638325137631283`*^9, 3.663832532669445*^9}, {3.663832567274836*^9, 
   3.663832572528537*^9}, {3.663832607671308*^9, 3.6638327484105034`*^9}, 
   3.6638379774395995`*^9, 3.663841645547755*^9, 3.6638558604509478`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558604779654`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558605009837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558605530205`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558605760355`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558606280713`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558606501045`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558606721025`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558606841106`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855860878248*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861095401*^9}],

Cell[BoxData[
 RowBox[{"LinearModelFit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
              "$Failed", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", "\<\"Real64\"\>"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "14", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "16", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "17", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "18", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "19", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "9"], ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "22", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "23", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "24", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "25", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "26", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "27", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "28", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "29", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "30", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "31", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "32", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "33", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "34", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "35", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "36", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "38", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "39", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "40", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "9"], ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "41", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "42", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "43", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "44", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "45", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "46", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "47", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "48", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "49", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "50", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "51", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "52", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "53", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "54", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "55", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "56", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "57", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "58", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "59", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "60", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "61", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "62", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "63", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "64", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "65", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "66", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "67", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "68", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "69", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "70", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "71", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "72", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "73", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "74", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "75", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "76", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "77", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "78", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "79", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "80", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "9"], ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "81", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "82", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "83", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "84", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "85", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "86", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "87", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "88", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "89", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "90", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "91", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "92", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "93", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "94", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "95", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "96", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "97", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "98", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "99", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "100", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "9"], ",", 
       RowBox[{"b", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "101", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "102", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "103", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "104", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "105", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "106", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "107", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "108", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "109", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "110", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "111", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "112", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "113", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "114", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "115", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "116", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "117", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "118", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "119", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "120", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}]}], "}"}], ",", "x", ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6638320168629065`*^9, {3.663832077492626*^9, 3.663832177512122*^9}, {
   3.663832268939562*^9, 3.663832286351866*^9}, {3.663832349759527*^9, 
   3.663832408122661*^9}, {3.6638324471241503`*^9, 3.6638324780499487`*^9}, {
   3.6638325137631283`*^9, 3.663832532669445*^9}, {3.663832567274836*^9, 
   3.663832572528537*^9}, {3.663832607671308*^9, 3.6638327484105034`*^9}, 
   3.6638379774395995`*^9, 3.663841645547755*^9, 3.6638558611304255`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861160446*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861183464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558612304955`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385586125051*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558613005466`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861323563*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861343577*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558613555856`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861545719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861745861*^9}],

Cell[BoxData[
 RowBox[{"LinearModelFit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
              "$Failed", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", "\<\"Real64\"\>"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "14", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "16", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "17", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "18", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "19", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "9"], ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "22", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "23", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "24", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "25", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "26", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "27", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "28", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "29", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "30", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "31", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "32", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "33", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "34", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "35", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "36", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "38", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "39", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "40", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "9"], ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "41", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "42", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "43", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "44", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "45", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "46", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "47", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "48", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "49", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "50", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "51", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "52", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "53", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "54", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "55", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "56", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "57", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "58", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "59", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "60", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "61", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "62", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "63", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "64", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "65", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "66", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "67", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "68", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "69", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "70", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "71", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "72", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "73", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "74", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "75", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "76", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "77", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "78", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "79", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "80", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "9"], ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "81", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "82", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "83", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "84", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "85", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "86", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "87", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "88", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "89", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "90", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "91", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "92", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "93", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "94", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "95", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "96", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "97", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "98", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "99", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "100", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "9"], ",", 
       RowBox[{"c", "/.", "\[VeryThinSpace]", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "101", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "102", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "103", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "104", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "105", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "106", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "107", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "108", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "109", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "110", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"9", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "111", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "112", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "113", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "114", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "115", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "116", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "117", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "19"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "118", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "38"], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "119", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"BinaryReadList", "[", 
                 RowBox[{"$Failed", ",", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>", ",", "\<\"Real64\"\>", 
                    ",", "\<\"Real64\"\>"}], "}"}]}], "]"}], 
                "\[LeftDoubleBracket]", "120", "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"a", "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "c"}], " ", "u"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "u"}], "]"}]}]}], 
      "}"}]}], "}"}], ",", "x", ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6638320168629065`*^9, {3.663832077492626*^9, 3.663832177512122*^9}, {
   3.663832268939562*^9, 3.663832286351866*^9}, {3.663832349759527*^9, 
   3.663832408122661*^9}, {3.6638324471241503`*^9, 3.6638324780499487`*^9}, {
   3.6638325137631283`*^9, 3.663832532669445*^9}, {3.663832567274836*^9, 
   3.663832572528537*^9}, {3.663832607671308*^9, 3.6638327484105034`*^9}, 
   3.6638379774395995`*^9, 3.663841645547755*^9, 3.6638558617808847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\($Failed \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\\"Real64\\\"\\)\\)\\)\\), \
\\(\\(\\(\\(1.3729312087082461` \[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \\(\\(\
\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \\\"Real64\\\
\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.388362055509309` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 5 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 11 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 17 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558618079166`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\($Failed \[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \\\"Real64\\\"}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 6 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 7 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 8 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(4\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 9 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(9\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 13 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 14 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 15 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 16 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 17 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 18 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 19 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 20 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558618359222`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 24 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 37 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558618849587`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 21 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 22 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 23 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 24 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 25 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 26 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 27 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 28 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 33 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 34 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 35 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 36 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 37 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 38 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 39 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 40 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855861904973*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(1.3678794411714423` \[VeryThinSpace]\\)\\) - \\(\
\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3691380842039278` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3729312087082461` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.3793104553012747` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 44 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(1.782324637479436` \[VeryThinSpace]\\)\\) \
- \\(\\(1.`\\\\ \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 57 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.8482375181245247` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(1.9207383785368402` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(2.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\\"Real64\\\", \
\\\"Real64\\\", \\\"Real64\\\", \\\"Real64\\\", \
\\\"Real64\\\"}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\)\\)\\)\\)}\\)\[NoBreak] is not a list of real \
numbers with dimensions \[NoBreak]\\!\\({20}\\)\[NoBreak] at \
\[NoBreak]\\!\\({a, b, c}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindFit\\\", ButtonNote -> \
\\\"FindFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558619610105`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindFit \
:: nrlnum\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558619850287`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(FindFit[\\(\\(\\(\\({\\(\\({1, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 41 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 42 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Cos[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 43 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 44 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 45 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 46 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 47 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Cos[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 48 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(7\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 53 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 54 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(5\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 55 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(2\\\\ \
\[Pi]\\)\\/19\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 56 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({\\(\\(Sin[\\(\\(\\(3\\\\ \
\[Pi]\\)\\/38\\)\\)]\\)\\), \\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \
\\(\\({\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \
\[LeftDoubleBracket] 57 \[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/19\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 58 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \
\\(\\({\\(\\(Sin[\\(\\(\[Pi]\\/38\\)\\)]\\)\\), \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 59 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\), \\(\\({0, \
\\(\\(\\(\\(\\(\\(BinaryReadList[\\(\\($Failed, \\(\\({\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 60 \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)}\\)\\)}\\)\\), \\(\\(a + \\(\\(b\\\\ \
\[ExponentialE]\\^\\(\\(\\(-c\\)\\)\\\\ u\\)\\)\\)\\)\\), \\(\\({a, b, \
c}\\)\\), u\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558620060425`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66385586203006*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855864120534*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558643166723`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearModelFit", "::", "notdata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first argument is not a vector, matrix, or a list \
containing a design matrix and response vector. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearModelFit\\\", ButtonNote -> \
\\\"LinearModelFit::notdata\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6638558647960095`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(LinearModelFit :: notdata\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.663855864816023*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Expression", "Subsubsection",
 CellChangeTimes->{{3.6638327913797903`*^9, 3.6638327958999777`*^9}}],

Cell[TextData[{
 "We can now obtain the final expression for the function matching the lobe \
flattening factor:\n\na(\[Rho]) = 0.697462\[VeryThinSpace] - 0.479278 \[Rho]\n\
b(\[Rho]) = 0.287646\[VeryThinSpace] - 0.293594 \[Rho]\nc(\[Rho]) = 5.69744\
\[VeryThinSpace] + 6.61321 \[Rho]\n\[Mu] = cos(\[Theta])\nf( \[Mu], \[Rho] ) \
= a(\[Rho]) + b(\[Rho]) ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"c", "(", "\[Rho]", ")"}]}], "  ", "\[Mu]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6638328011466837`*^9, 3.6638330078723803`*^9}, {
  3.6638331045825396`*^9, 3.66383310703827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "\[Rho]_", "]"}], " ", "=", " ", 
   RowBox[{"0.697462", "\[VeryThinSpace] ", "-", " ", 
    RowBox[{"0.479278", " ", "\[Rho]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "\[Rho]_", "]"}], " ", "=", " ", 
   RowBox[{"0.287646", "\[VeryThinSpace] ", "-", " ", 
    RowBox[{"0.293594", " ", "\[Rho]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "\[Rho]_", "]"}], " ", "=", " ", 
   RowBox[{"5.69744", "\[VeryThinSpace] ", "+", " ", 
    RowBox[{"6.61321", " ", "\[Rho]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", " ", 
     RowBox[{"\[Mu]_", ",", " ", "\[Rho]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"a", "[", "\[Rho]", "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"b", "[", "\[Rho]", "]"}], " ", 
      FormBox[
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"c", "[", "\[Rho]", "]"}]}], "  ", "\[Mu]"}], "]"}],
       TraditionalForm]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Mu]", ",", "\[Rho]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<cos(\[Theta])\>\"", ",", "\"\<\[Rho]\>\"", ",", 
      "\"\<Lobe Flattening\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.663833022805914*^9, 3.663833348859727*^9}, 
   3.6638333957057295`*^9, {3.663834203097046*^9, 3.6638342062292347`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
ufD8Z/l66v8HFxWNXQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
d0bXrOSXvoiu88jPfB1dQ/8b3hddJ/0HLpdmmhvbjuhamfzVruhalmoLe6Pr
7EfhPdH19yNwr9RnP4rdldKs7gD/El1nT2nfiq7tKj8qklorS7vu5uqd+Ozg
s+iam3xmodRnAxrD/dG1+GNof46u10fajdHncNpH66PPwLS/3o0+h5MPXxd9
viW/+nZ0rVk513Gp82Tlyxuiz8m0ZyumWX0EW6nUGl0a/sfoc4iE9tvouPsv
/X+KPm8ItN9Fx+b/sP8QfYaRp/08uq4on/99dI1AxfvLU5+NSdtMCz5zKQ0f
jdYHxWnHYr8fe2Htv2BtcJz2ZbCuKBStoadmsVvaWv52W2K9Lh/1aeKcS3me
1tNkvrsYLsV3bw8+Ayopf5j5E2mba4M1jPb7bcFnQyXgW4PPlfRst2Q+Wf5H
+l46X3pF+lw5wjeJ6wbK979MrAFUJxicuv6gOsPuxHUG1VXk++QbdKaps03t
9f05x+lLU9fRpDPHBGsn+aUbg7VTEXhCsL4qmq0p5c9bE9df9uScY+osWLmO
ahUDgrWctLZqGsrRh6WuRcgfD4dvCj6TKhZdl1At4ivagcFaS2tgULC+0rz3
Cz4n0p76O1oLatz+jdZ2GvNjU5+NaS8Po9+dOa+fkcFaSPvlULS+0bwfjNZ/
mvcD0XpI8z4ty/t1VnU4Wkvp3f+K1k965gKpz/DkW/6M1nYaq3+itanm/Z68
z78+5vOIYO2n/XV38Lnh8XBMfV4oPxZSnxfKj2kcNZ7K3QYH6zSt7b7BZ23y
M1cEn6PJb/QJPneT3xgSrGm1R4YGazntL+k01WpUs1Hep/U7mt/8L1or63l0
iCY9rf2Spj7jlP9PUp99yuePCtaQ8hs3531WqPVwVbDOVGwqljq3Vy68Nvrc
XXWYtqnrs9Kul6U+Q5K275b6XFZ5QafU57LKubqkPntWztUv9bm1cpzOqc+e
laO1S10vlpbum/o8WzlI19Tn5cpT2qeuI0s/Nwt+ZsW7DqnrztLbPVKfJSvH
6Z36PF65Uv/UZ+fKufrAryU+Hx+U+nxd+cvA1OfuygF7pj6fVt40IPU5uvLE
/wOrdAKD
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
UORm5dj57Fy8n+692vEt9hxbqeb/6VLkgg==
          "]], Polygon3DBox[{{1004, 590, 720, 1185, 834, 835}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skqRmEYB/AXn3kekqTPkCQZ94g1K0uflR0LlrgAcQHiAsQFiL3iCszT
Z0jmmVJC+Z2y+J/f/92c5z1Pp3Z4fGAsJYQwLcVK1PM9LnmbGkIRP1nNWFoI
rSxlF+vYzw4m2MNeGdWHOMVRznKSC5zhMue5xiVusjMWwlf0brO3WchMuZYd
5xvuRnfiHu+4z3se8IGHfOSTHOnPPOYLT/jKJN94ynee8YPnPPGd3yxzvmAR
s2TdHbecV7jBRa5yjkvR7jjPCc5whJNMcFBG9O6os419rGFntHO2MI1xVtvD
FUvMLWQBf9nOArYyn83MYxNz2cgcNjCb9dHdWcuaaJd6nBmsYjoraVyooPGh
nFYQkh4////DH2UcPeg=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{744, 1053, 500, 743, 1187, 961, 745, 1188, 962, 746, 1189, 
       963, 747, 1190, 964, 748, 1191, 965, 749, 1192, 1091, 1291, 750, 1193, 
       966, 751, 1194, 967, 752, 1195, 968, 753, 1196, 969, 754, 1197, 970, 
       755, 1198, 971, 756, 1382, 1054, 972, 1055}], 
      Line3DBox[{758, 1092, 1292, 757, 515, 759, 1199, 973, 760, 1200, 974, 
       761, 1201, 975, 762, 1202, 976, 763, 1203, 1093, 1293, 764, 1094, 1294,
        765, 1204, 977, 766, 1205, 978, 767, 1206, 979, 768, 1207, 980, 769, 
       1208, 981, 770, 1209, 982, 771}], 
      Line3DBox[{772, 1056, 1095, 1383, 1086, 1057, 1096, 1384, 773, 531, 774,
        1210, 983, 775, 1211, 984, 776, 1212, 985, 777, 1213, 1097, 1295, 778,
        1098, 1296, 779, 1099, 1297, 780, 1214, 986, 781, 1215, 987, 782, 
       1216, 988, 783, 1217, 989, 784, 1218, 990, 785}], 
      Line3DBox[{787, 1058, 1059, 1393, 786, 1060, 1061, 1385, 788, 1100, 
       1298, 789, 547, 790, 1219, 991, 791, 1220, 992, 792, 1221, 1101, 1299, 
       793, 1102, 1300, 794, 1103, 1301, 795, 1104, 1302, 796, 1222, 993, 797,
        1223, 994, 798, 1224, 995, 799, 1225, 996, 800}], 
      Line3DBox[{802, 1062, 1063, 1394, 801, 1064, 1065, 1386, 803, 1105, 
       1303, 804, 1106, 1304, 805, 563, 806, 1226, 997, 807, 1227, 1107, 1305,
        808, 1108, 1306, 809, 1109, 1307, 810, 1110, 1308, 811, 1111, 1309, 
       812, 1228, 998, 813, 1229, 999, 814, 1230, 1000, 815}], 
      Line3DBox[{817, 1066, 1067, 1395, 816, 1068, 1310, 1183, 818, 1112, 
       1311, 819, 1113, 1312, 820, 1114, 1313, 821, 579, 822, 1231, 1115, 
       1314, 823, 1116, 1315, 824, 1117, 1316, 825, 1118, 1317, 826, 1119, 
       1318, 827, 1120, 1319, 828, 1232, 1001, 829, 1233, 1002, 830}], 
      Line3DBox[{833, 1070, 1234, 1003, 1087, 1072, 1235, 1004, 835, 1236, 
       1005, 837, 1237, 1006, 839, 1238, 1007, 841, 1239, 1008, 843, 1240, 
       596, 845, 1241, 1009, 847, 1242, 1010, 849, 1243, 1011, 851, 1244, 
       1012, 853, 1245, 1013, 855, 1246, 1014, 857, 1248, 1016, 859}], 
      Line3DBox[{858, 1015, 1247, 856, 1332, 1130, 854, 1331, 1129, 852, 1330,
        1128, 850, 1329, 1127, 848, 1328, 1126, 846, 1327, 1125, 844, 1326, 
       595, 842, 1325, 1124, 840, 1324, 1123, 838, 1323, 1122, 836, 1322, 
       1121, 834, 1185, 1321, 1071, 831, 1184, 1320, 1069, 832}], 
      Line3DBox[{860, 1073, 1131, 1387, 1088, 1074, 1249, 1017, 861, 1250, 
       1018, 862, 1251, 1019, 863, 1252, 1020, 864, 1253, 1021, 865, 1254, 
       1132, 1333, 866, 612, 867, 1255, 1022, 868, 1256, 1023, 869, 1257, 
       1024, 870, 1258, 1025, 871, 1259, 1026, 872, 1260, 1027, 873}], 
      Line3DBox[{874, 1075, 1133, 1388, 1089, 1076, 1134, 1389, 875, 1261, 
       1028, 876, 1262, 1029, 877, 1263, 1030, 878, 1264, 1031, 879, 1265, 
       1135, 1334, 880, 1136, 1335, 881, 628, 882, 1266, 1032, 883, 1267, 
       1033, 884, 1268, 1034, 885, 1269, 1035, 886, 1270, 1036, 887}], 
      Line3DBox[{888, 1077, 1137, 1390, 1090, 1078, 1138, 1391, 889, 1139, 
       1336, 890, 1271, 1037, 891, 1272, 1038, 892, 1273, 1039, 893, 1274, 
       1140, 1337, 894, 1141, 1338, 895, 1142, 1339, 896, 644, 897, 1275, 
       1040, 898, 1276, 1041, 899, 1277, 1042, 900, 1278, 1043, 901}], 
      Line3DBox[{903, 1079, 1080, 1396, 902, 1081, 1082, 1392, 904, 1143, 
       1340, 905, 1144, 1341, 906, 1279, 1044, 907, 1280, 1045, 908, 1281, 
       1145, 1342, 909, 1146, 1343, 910, 1147, 1344, 911, 1148, 1345, 912, 
       660, 913, 1282, 1046, 914, 1283, 1047, 915, 1284, 1048, 916}], 
      Line3DBox[{918, 1149, 1346, 917, 1150, 1347, 919, 1151, 1348, 920, 1152,
        1349, 921, 1153, 1350, 922, 1285, 1049, 923, 1286, 1154, 1351, 924, 
       1155, 1352, 925, 1156, 1353, 926, 1157, 1354, 927, 1158, 1355, 928, 
       676, 929, 1287, 1050, 930, 1288, 1051, 931}], 
      Line3DBox[{933, 1159, 1356, 932, 1160, 1357, 934, 1161, 1358, 935, 1162,
        1359, 936, 1163, 1360, 937, 1164, 1361, 938, 1289, 1165, 1362, 939, 
       1166, 1363, 940, 1167, 1364, 941, 1168, 1365, 942, 1169, 1366, 943, 
       1170, 1367, 944, 692, 945, 1290, 1052, 946}], 
      Line3DBox[{960, 1085, 730, 959, 1381, 1182, 958, 1380, 1181, 957, 1379, 
       1180, 956, 1378, 1179, 955, 1377, 1178, 954, 1376, 1177, 953, 1375, 
       1374, 1176, 952, 1373, 1175, 951, 1372, 1174, 950, 1371, 1173, 949, 
       1370, 1172, 948, 1369, 1171, 947, 1186, 1368, 1083, 1084}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{278, 501, 1187, 279, 515, 307, 712, 1384, 530, 322, 714, 
       1385, 545, 337, 716, 1386, 560, 352, 1310, 718, 575, 367, 1321, 720, 
       590, 1235, 382, 722, 605, 1249, 397, 724, 1389, 620, 412, 726, 1391, 
       635, 427, 728, 1392, 650, 442, 1347, 665, 457, 1357, 680, 472, 1369, 
       695, 487}], 
      Line3DBox[{280, 502, 1188, 281, 516, 1199, 308, 531, 323, 1298, 546, 
       338, 1303, 561, 353, 1311, 576, 368, 1322, 591, 1236, 383, 606, 1250, 
       398, 621, 1261, 413, 1336, 636, 428, 1340, 651, 443, 1348, 666, 458, 
       1358, 681, 473, 1370, 696, 488}], 
      Line3DBox[{282, 503, 1189, 283, 517, 1200, 309, 532, 1210, 324, 547, 
       339, 1304, 562, 354, 1312, 577, 369, 1323, 592, 1237, 384, 607, 1251, 
       399, 622, 1262, 414, 637, 1271, 429, 1341, 652, 444, 1349, 667, 459, 
       1359, 682, 474, 1371, 697, 489}], 
      Line3DBox[{284, 504, 1190, 285, 518, 1201, 310, 533, 1211, 325, 548, 
       1219, 340, 563, 355, 1313, 578, 370, 1324, 593, 1238, 385, 608, 1252, 
       400, 623, 1263, 415, 638, 1272, 430, 653, 1279, 445, 1350, 668, 460, 
       1360, 683, 475, 1372, 698, 490}], 
      Line3DBox[{286, 505, 1191, 287, 519, 1202, 311, 534, 1212, 326, 549, 
       1220, 341, 564, 1226, 356, 579, 371, 1325, 594, 1239, 386, 609, 1253, 
       401, 624, 1264, 416, 639, 1273, 431, 654, 1280, 446, 669, 1285, 461, 
       1361, 684, 476, 1373, 699, 491}], 
      Line3DBox[{288, 506, 1192, 290, 520, 1203, 312, 535, 1213, 327, 550, 
       1221, 342, 565, 1227, 357, 580, 1231, 372, 595, 1240, 387, 610, 1254, 
       402, 625, 1265, 417, 640, 1274, 432, 655, 1281, 447, 670, 1286, 462, 
       685, 1289, 477, 1374, 700, 492}], 
      Line3DBox[{292, 508, 1193, 293, 1294, 522, 314, 1296, 537, 329, 1300, 
       552, 344, 1306, 567, 359, 1315, 582, 374, 1327, 597, 1241, 389, 612, 
       404, 1335, 627, 419, 1338, 642, 434, 1343, 657, 449, 1352, 672, 464, 
       1363, 687, 479, 1376, 702, 494}], 
      Line3DBox[{294, 509, 1194, 295, 523, 1204, 315, 1297, 538, 330, 1301, 
       553, 345, 1307, 568, 360, 1316, 583, 375, 1328, 598, 1242, 390, 613, 
       1255, 405, 628, 420, 1339, 643, 435, 1344, 658, 450, 1353, 673, 465, 
       1364, 688, 480, 1377, 703, 495}], 
      Line3DBox[{296, 510, 1195, 297, 524, 1205, 316, 539, 1214, 331, 1302, 
       554, 346, 1308, 569, 361, 1317, 584, 376, 1329, 599, 1243, 391, 614, 
       1256, 406, 629, 1266, 421, 644, 436, 1345, 659, 451, 1354, 674, 466, 
       1365, 689, 481, 1378, 704, 496}], 
      Line3DBox[{298, 511, 1196, 299, 525, 1206, 317, 540, 1215, 332, 555, 
       1222, 347, 1309, 570, 362, 1318, 585, 377, 1330, 600, 1244, 392, 615, 
       1257, 407, 630, 1267, 422, 645, 1275, 437, 660, 452, 1355, 675, 467, 
       1366, 690, 482, 1379, 705, 497}], 
      Line3DBox[{300, 512, 1197, 301, 526, 1207, 318, 541, 1216, 333, 556, 
       1223, 348, 571, 1228, 363, 1319, 586, 378, 1331, 601, 1245, 393, 616, 
       1258, 408, 631, 1268, 423, 646, 1276, 438, 661, 1282, 453, 676, 468, 
       1367, 691, 483, 1380, 706, 498}], 
      Line3DBox[{302, 513, 1198, 303, 527, 1208, 319, 542, 1217, 334, 557, 
       1224, 349, 572, 1229, 364, 587, 1232, 379, 1332, 602, 1246, 394, 617, 
       1259, 409, 632, 1269, 424, 647, 1277, 439, 662, 1283, 454, 677, 1287, 
       469, 692, 484, 1381, 707, 499}], 
      Line3DBox[{304, 709, 1382, 710, 305, 528, 1209, 320, 543, 1218, 335, 
       558, 1225, 350, 573, 1230, 365, 588, 1233, 380, 603, 1247, 1248, 395, 
       618, 1260, 410, 633, 1270, 425, 648, 1278, 440, 663, 1284, 455, 678, 
       1288, 470, 693, 1290, 485, 730, 731, 732}], 
      Line3DBox[{486, 694, 729, 1368, 471, 679, 1356, 456, 664, 1346, 441, 
       649, 742, 1396, 727, 426, 634, 1390, 741, 725, 411, 619, 1388, 740, 
       723, 396, 604, 1387, 739, 721, 381, 1234, 589, 738, 719, 1320, 366, 
       574, 737, 1395, 717, 351, 559, 736, 1394, 715, 336, 544, 735, 1393, 
       713, 321, 529, 1383, 734, 711, 306, 514, 1292, 277, 500, 708, 733}], 
      Line3DBox[{493, 701, 1375, 478, 686, 1362, 463, 671, 1351, 448, 656, 
       1342, 433, 641, 1337, 418, 626, 1334, 403, 611, 1333, 388, 596, 1326, 
       373, 581, 1314, 358, 566, 1305, 343, 551, 1299, 328, 536, 1295, 313, 
       521, 1293, 291, 507, 1291, 289}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"cos(\[Theta])\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], 
    FormBox["\"Lobe Flattening\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{658.9051496094136, 438.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8684712341703262`, 1.434719291870186, 1.078634939297278},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6638331215515504`*^9, {3.663833165488468*^9, 3.6638333492569914`*^9}, 
   3.663834206758607*^9, 3.6638379776567626`*^9, 3.663841645759907*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking our Matching", "Subsubsection",
 CellChangeTimes->{{3.663834458017707*^9, 3.6638344734416237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot3D", "[", " ", 
     RowBox[{"paramsFlat0", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"i", "-", "1"}], 
           RowBox[{"resX", "-", "1"}]], 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        FractionBox[
         RowBox[{"j", "-", "1"}], 
         RowBox[{"resY", "-", "1"}]]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "resX"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6638342386170616`*^9, 3.6638343994554253`*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
44s5XwnXUcIFSrhQCRcp4WIl3EIJt1TCrZVwWyXcXgl3VMKdlHAXJdxVCXdT
wt2VcA8lHPuB44s5XwnXUcIFSrhQCRcp4WIl3EIJt1TCrZVwWyXcXgl3VMKd
lHAXJdxVCXdTwt2VcA+lvNOpH86HGswY99l1yXJjI/cdUNTz4MRfjtGTG80R
r5Nk9wq//k8TzodmL8wSJzXhOiAyT/gPTvrrna1uND2PEEzcvns01Ytg7aon
PXyacDF4tugibMotIOXc4TtNz2MJWzqOq2rKrWH1kknZU5twW/gcNFfWVG8P
j6cf0W56XUcojn4d0dQ3J3gZ/XpN0+d1gQGatT2bnscVMg9G/8fzukHrfzyj
m57HHTRd/A7+mztFp58LJPG9JO31qOZfcb95oijj0/dGiTBz/75/6+394yZt
bFAHjbwaQ99/8U+fg/VXNWhDcHCxgp8HhKX+137pw6BWCy78+zxXvNVmXf9l
CIVH1nT4t76Pz6fU679MoJ1LoM+/ee9VrbRu/jKDw5IWG/79vDXBM/53PXpk
96k739OnsR38OXK8wvud1KfRCv4cOb5b/2anqY028OfI8aSDPaN9Gu3gz5Hj
EyWj4ic1OsCfI8dXHd51y6exPfw5ctyzesWcSY3O8OfI8cCkPO2ERhf4NPui
2b/122cbZMQ3uoJVruOJf+vN3ruejW90g+6lUyb8m8+NLjV9S+KYD3e7FzSJ
e9P3Wlnclb3v//fzN21Xyu7zz7Fp+1T2vH+OTdu5Mt/+HJu+L8r8/3Ns+t4p
i+OfY9P3V1l7+HNs+h1Q1q7+HJt+T5S1zz/Hpt8lZe38z7Hp903Z+/Ln2PQ7
qey9+3Ns+r1V9v7+OTb9biv7Dvw5Nv3+K/ue/Dk2/R1R9l36c2z6e6Ts+/bn
2PR3Tdl38s/x//13U9l3+H8HqQr7e/sdvuSrUSXiPOjt3S0msR/Nl2oyfVcn
4/5JQZWI8yDkUOKUQapyPegxvfW3X6JrRysR50Fem4SDyfk0P2PI9AFGL/Z3
SqpEnAc2qg5BHVLl+lQTpv9yfHS3mDGViPNgfG/fmoRFcj1w36Oz03pa5ZlU
Is6DLh/jVDO6yO8/2oLzZ8fxRft+YM4DrdLYk54F9P6tmP7ptj7P87ZUIs6D
JddGfdH0let9bJjeqvL0wrnvKhHnwbfyuz4z59HntWP6zsFqp1ucrkScB7GP
vDr0jJXrxdy82LTCMJ/C5lWI8+DKli9xaevleik3X/Za++XTqL+rEOeBffip
J7Ur5D7M5+bRQl3rkr4eqUacB6LQiATzQfL7jObm19bZOa+bl/AKcR4sTF9R
bHJEft10bt5Nf0uiJFbzNeI8sPR10XCd9Aq1Wz5o7ovZUvq6FLVPPqRVBEg0
bMtQO+TD0xYtb/W1KEPtjQ8z/5nhaLm/FLUrPnz1qp8+IasUtR8+DMvYkeXt
UYbaCR+qXvQP6FleitoDH7yHj9sooPlqFncy7unmrzdSrQzFlw8qmiOMw3qU
oTjyYcG2vSb6zmUoXnzY9rL6nOPKUhQXPiyfbXzv1cMy5D8f4m6LffyrypHP
xLfY66EmY/D3QQcyHke6rutWgnzWgdwn9TYGziXIZx14Of/92JPCEuSzDhwc
kvTobJkM+awDazKsLIODZMhnHWjWw6ZngkEJ8lkHssal+Y6eWYJ8JuPFqhPv
T9mXIJ914ME44x993UuQzzpwvfOViEynEuSzDuw7Eu35JU6GfNaB41YFVs3o
eeZz8xdT9VxWFlSUIJ91wMQzfuygw6XIZx1Ic9k8wz2tDPksgNvjygsD1xch
nwVQkRCjNfVUIfJZAD157XrVry1GPgvgrf4AD/u7xchnwoWWA7Z6vUQ+C+DD
pvWhb72Lkc8C6Fprk7zKrBj5LIAW4zt1tqXXZT4LYEJZqnZ132LkswA8jDVi
r9L5ETE3j6DX30NrU0vsswCWVXq/C4ssRj4LQObI++qhJkM+CyB6etefG84X
I58FkLlhRGxH2m6Zz0KYP2Go982afOSzELYv2eBWvaQA+SyES+GOGZGhBchn
IazwEbW47FaAfBZCM5sVX9Pe5yOfhTDLrSojbGUB8lkIH9Xr3S9tzUc+C2HA
jiVVQeoFyGcheN0r+KmxtAD5LITyuJpZegkFyGchbOGdqlBvU4B8FsLron+m
Fd0tQD4LwTsut8Pu+gLkMzn/nYZuwa8Kkc9C8F3n/nj96SLkswiy6i9YdtiT
i3wWQYZlYsKE0Fzkswj6jhUsGhidi3wWwdPxhTtXrMtFPosgbErvwLCwXOSz
CCrnfbd76JuLfBaBnWrZkcXNc5HPIgjwuny/z8Zc5LMIYjakjln6Ty7yWQQL
x61eM4jm+cVcXt3OrV4660Eu8pmcX2fQfR86TzGfy6v3zNo/M+5JLvJZBDPa
QFXqh1zkswhS/37TNXFEHvJZDElLA0oPdsxEPouhdfyzvj40j818FsOEIg2v
Lzcykc9iiLXZfyOL6pnPYrgTPmvOmQ2ZyGcxnG09vGIJzW8zn8UwRmOyns+J
TOSzGE5febHDQ5yJfBZDYOe1thPHZCKfxTBr3ZCHPXIykc9ieF9XKhs4PRP5
LIbqhwfm11dmIp/FcNKlbZ1fcibyWQyhfy8abSDLRD6L4YyF0CLEIgv5TJ+v
DvmMOPMZ6w3/mzOf8XmU5J+Zz/j8Vv/Nmc/4unb/zcVK8sxSJXnm+UryzNFK
8szpSvLMzGecb9T8b858xnrD/+bMZ3weJXlg5jM+v9V/c+Yzvq7df3Oxknyv
VEm+d76SfG+0knxvupJ8L/P5o+RBjuHo3ll43PdFsiQhw/9HOR7f1UskL+OO
7QitQD7/lIi+Dl7qQNePMZ8bJZ3SDPeIduBx2QdJpHCQfn+NSuTzZ4mWxuQt
T7tVIJ+/Scob23cYtqMC+fxD4gAjb03SrEA+/5I0O/pN1vsXHh+9l6Spv65b
8roS+fxJsm/bgJYpZyqRz18lQ20aZ1vGVyGfv0t0I3Zu+RxQjXxukOz8si0m
8xoap5Djur+ujvR6V458VoWde808F40sV/RZ2hwqJ59Pa1uLxyktwFH8JdSF
jRfkPkvVoWRMdaD3DzxOUQG3D399DKXXpT5Lm8HWMWuePlmBx7PN4fSuyQPv
LClT9FmqBsUBKgWT9+Bxijq8HRj75tg0NE6R8uC14NiQ8yPweLMZ9F5w5bsg
u1zRZ6kqSM8kxehCBfJZDVpN3J5X9rRC0WdpC/jlOyt1ezkap0hbQnoXp0Et
Q/F4UBM+TgkcWLOgFPncCg5NhE/tavE4RQsC+6xeIZhTgnzWhiyH5W1P7sTj
lJZgW/uuzRINNB6UakDnF/1bjB2Cx4OtQDpImz/MEI0Hpa0hrXu/0DXxeJyi
Ddbm2dk/ZqNxipQPnkM+H3wnwuNBDXDx2NrydCs0HpRqQuPlLj+6V5Qin1vD
iV79b9jT9XXMZy2QdX9otLxLuaLPqTrQ+cDNokWJMkWfpbpgaTXf5OZRmaLP
5PjxzoS8SVNkyGd9eLzwWqiNOxoPpupDRLWF4w9fNE6R6oBBy1tX7bNlij6D
LiTuTfUwrZUhn/VgTPz7Pe82yRR9TtWDpZ+Gmb3iyxR9lurDBbN5Aw6pyhR9
Bh1I/Fri1jYSj1N0wanZTp+Pd2WKPqfqQsKKUrfd39E4RaoHNV4hn+cckSn6
DPrgemjn1+WZaJySKgBPlx8epZvQeFDaBsY0r7yydRYap4ABTGjvFrq1sRD5
bAhb9N0ejClG45RUQ9A8rj9rj3MB8lkAXZ7vUDUpKEI+t4G3jfFRt2SFyGcD
2HFiRu+lakXIZwN4PKpw195phchnQ1h496flB/VC5LMAer8JnyCrKEY+t4HA
zO1T3MuLkM9tYLWua515WBHy2QB8bdp6DnRB40EwBNuKkV0qXqJxSioZ71h4
vjg/Eo0HpUbA7/ajo8eKfOSzMfToGyZ8eCcP+WwCj6wszaMG5yGfTUCkPybs
2UU0TpEK4aJdrfskCzQeBCPQde9ltKQxD/lsDH89KRjbZl4e8tkYph+BBZcm
5iGfTWDt1rL9vDo0TgEh/Lh0MmlsdT7y2Qj6LB36c/OXfOSzESxqrDewic5H
PhtD4okklWzjfOSzCcxoUb2qn2M+8lkE+auv7laryEE+t4UfPSYvPamfg3w2
hbUzu0/0XpKNfDYD46qNo/UuZiGfzcC2d6F30m00TpGScWirm5E1v3KQz23B
Ne5A0pkn2chnU2hRUrA4QDcb+WwKktEDDkSXZiGfzWDFsWluef2zkM8iUBtn
GR2yGY8H28LON7u/P8rNQT63hUk9668nqeYgn03hytuImkP+2chnM+h7dsCI
8Ao0TvGRPx/uP6ciTn0Wt0N6uc9SxKnPMsSpz4DOT32ORpz5jM5DffbB15X7
nIo49VmMzk99liJOfZbh+5T7DOj81OdoxJnPYuh51eH9LatC5LMYBv04+Wzy
E9TfEJtDYPmC023S0HyH1Bw2pzl+fnG1BvlsDisOLD/ufOEt8lkML6tTQz68
zUM+i+H8iaXPwhbgvKg5lO/U/6fzAtR/9jGHVtuqKl51eYV8Nofoa49+OU+u
RT6LobPj5Mcv1HOQz2Rcvy5zw9ru6HdQJganyGvGmuJy5rPK/+7fHPa0jO6n
acD1nxt//y/KHEz8fUc8FbxhPi97F5vUdP5LE8Y333y5yfwa8bkmSbtd03k3
Q7jjpi5swonPQY1PJzY9jxiyHqe0bjL/SHzev/zpq6bnt4Ij57p5NNETn5Mt
V89oMg9LfP62MWhjEz3x+UO3ZiFNnpf4vGvC4WtN5vWIz6XqdW5N79MV3qYF
Nl1nQnw+OXhAl/9nruw8yq6r7D6VPZcyH5T5psxnZXFRFkdlcVfWTpS2KyXt
UGm7pevf6iW8ThDnd4SOc+l/r5d8aEwJbv8A14XVS9Im8CtfncJ1YfUSQUuT
20bsPALGX+1+11l0lHIh4zv6RS8X7KVcxLjhsfRb83pRLma8RWUbbetYXBdW
L+nqM9QubhyuC6uXTHeIjJs6hnJrxofbnQBbVrdly/i1doNPGkRTbs94bmRH
u0XrKHdkvHfhoCUOkZQ7Me7TsjY1WBXX/dVL9ja+WtxBl9Z9uDLutlR7vs1J
yt0Yv3HKvKyDNq3/cmdc88i00ePH0PogD8a3nHytUVtYi+KrAr3H2C6fza9Q
5GQcbTD7fLdDR8pQ3FXA/uBWoekiVL9A9Ien9u3o6VOG2oMKBBRLd59IL1fk
RN81m3dhyk1cX6YCk6LeNhuQXK7Iif5rpH6ftRdw3ZkKmIRWb/XbieoNid4m
+/XlR8dwPZoKJG19tG0Au38h0wdWTCni25Sh9qYCgSIHr/3dUH0i0f+6ddb/
1rgy1A5VQO/ZteORNJ9DOdEXehYlHy7BdW0q4PvcYNzbF+WKnOhvDvDWORVS
htqtCpzlje1tYlOuyIn+Z2bCupFBuA5OBc5PynzyyxPVPxL9u+03nQexOjhb
pg9/rbHy01+oLpLofa/vedR8F66bU4H87kOS70hRvSTRH9gWrXHqHK6nUwGN
QW8cjYahOkqi//SoP7yJwXV2KjCrV9bPTbWovpLorVvVp+Wz+kQXpjfamXbu
chyquyR6veH2OREd6XlcmX5t+cAGe79KRU70C1ceufue5uvYe6cCElvxhZQM
9D4SfeRHI4NRzvQ87kyfcX+Pxvde6D0l+tjA/tbRofQ8HkxvotUjIuriG0VO
9Gubr/GIC6P1vPT91YDqJ5LvS5aguk6pFhkXD5wvC8d1KBowcE1Opw++pYqc
6C8/6rD7pBTXCWpA/PFtYWEnUX0o0Tes7/RCZQOuH9SAQd37jul0qlSRE/32
wCFz1PfiukINEL5LiMiKLFXkRF/tVX0r0ZfqhUwfaTdr182WpYqc6A8bBj/v
YEP1IqbnRTRAt96o/pToxQP/DjpYjesTNaDozdeUjRdQXSrRm7u3nAmLcN2i
BhT+aJg2bGmpIif6o7NEay1ScD2jBlwTjjXbeQzVsRL9oHIr6zH7cZ2jBpzJ
bmYt61aqyIl+4MKzI70m4vpHDYA+25y/J6G6V6Kf67L13cAoXBepAS1f915j
mVKqyIk+XPPZjNytuF5SA+bei/SesrdUkRN93qRHEj8Lqufye38lpKvXViFO
9BOnaRw88xeur9SAiK2WNjc/o7paov9cbXxq0hdcd6kBe5dv6PPkHqq3Jfo+
c9ueXcPqf92Y3mD44Jcb4lAdLtGnOWy9lTSUnsed6afOXX5jRx2qzyX6zQGr
O1Qvo+fxYPrGVFWLy23Q7y/Rt7moF5fWhdZx0/dUF/R+HHl5Yo9Mkafqwz/z
u43v2RHVGRF91mnrDK0TMkVO9PvP31LdfYLq+ez8oXcN36rpyBQ50c/zs399
pBDVDxL954gHfofPyxQ50T+2+XLS6z6qGyX6XnVvXj5YI1PkRH9nY8IJ3n5U
T0r01w+v95q7FtURE/3tb4Zxur9QnSnRv+gV4pcalK/IiX5Ls6hRNqNeovdU
F8yKbL6uCkHvNdF/WrKvqsVKVJdK9OYfvozIviZT5L/16pOaNUhQvSrRm/40
lY04LVPkRG8aMKEqfxeqYyX6O5X8Mud9MkVO9AMiFve48hDVtxJ9swPH9oyI
kilyot8dETF7xihU90r0vMnWi3Pp+h/KiT495p7lryxUD0v0grs9a9JmyxQ5
0V+MyJ2TYYjqZH/Hd9+xd47bECd6oWlZT8M4VD9L9B1XOKiebJApcqKf7tjv
njfNY7P3VBfKR1evnRmA3muib0h5EvHaC9Xb/m6f75/Oq4krUeREnzax7TdI
RXW4RH9reIL5HAP0XhP9mqgPfTdfR/W5RB9u+mGrx2BUd0/0V24lWwybiPfH
MIB1gQZHX/nQvAr9nTWArl2/lHZl+W0+0/eV5vRR2Yzrdg3g5T/tOmq9p3oB
453nJr9abETz6kLGi2wnOhl/oHoR40enLNiz2pnmCcWMB26fECn6VqjYzglv
V+f0j93QQsX2TLhvkfvpBzQfzn6PDKBOO3BRnmWRYvsk/JZhUfip1ELFdki4
Z7+Lpx+5Fym2N8LVSs2HP9YvUmxXv/VL97hmGxYpth/CBVYhguGLihTbCeH3
ew9eUbSzSLE9EG75fXc/4Xtct2sAiZZp2dOWyxTjSzj/uDgtuB71o0AI+p+3
So6yumb63TaGN75m+Z3n5CnGnegPGNQPl44rUOREvzDg8rODBXmK7YHoLWMv
n5vG6p357Pwnvi4e3v1wnmI7IfpTRlUL7E3xd9sY8m/uXCaKzVNsP0S/d+SK
1LgwVA9O9GLtwuZFaXmK7YrotZZvWTkgP1+RE33LgS9e1M/PU2xvRL9A1f3r
4ofo+0z0q78m1XgvylNsh0RfpvZX+Es6H8S+28awM7tIff3xPMX2+VvPr6q9
vShfkf/O55esNvqQkavYbole3Fm08tPfqA6d6EebvTQe4J2n2J6J/qpl/WlR
QIEiJ/qPVqcHnjxB9bZM37i7/OAwF1S3TvRuJ045JC6jenumjxn4ZXPrTaie
neh7LJz0dB6bl+HmO/Je+I84VJmvyIneTuTmURBN9U5MH1X8UHX/alT//tv/
YfcnBL2jehemdzmZZfEgB9XFE33DqmVLBrag13VleknD9MC78QWKnOhHiC8O
O/qRnt+N6TfobteWAHofiT6s6BAsSabnd2f6+Kw6/YZ56D0l+mi+WfFati+B
B9MHCHqv6XwSf7eN4fzmwx8n+uF+lAhuZ6dvNE/LUeQ8M9g9Lm3cuS60/pf2
o0Rgff6v2EVmuYqc6Pecn+l2pYzqaT9KBOM0h+Z/uJOjyIl+5hE/16lxVK/D
9NN2+sjC3+UocqKPSfHXaHaV6gVMHxYhlTYU5Shyon8Qc3Lm1wtUL2T6ED2V
58Me5Shyom+4otJONZ7qRUxfeLF90vrHOYqc6DP4m12j1lO9mOlzPj/uPPVm
jiIn+h5nJufsjaR6C6b/dq57/m77HEVO9M6LPR/YzqB6S6Y3eu3eJbkY7zNg
Bh9XVY8bmkD11kx/J3R6yJNNOYqc6O9fca4S36Hr+myZvmzM1NuusTmKnOh3
9FWb9+UgPb8901/dF7WxpCxHkRN9/cMwl4WPqN6R6Zt3jnM49jFHkRP9t29r
h4UspXonpj9j0Dc60Rrvb2AGs4MfX95RR/UuTB/Vcv91mSbe98AMqr9df7ft
JtW7Mv2nK/Fv+6nj/RDM4OxfqnrBV6jejemj8xeGeHrjfRLM4FnnzFrRL6p3
Z/ouuzfqNLD9H9yZ3jzfX2t8V9oP8WB6nZpVL1YcL1XkRH/KZOyW8NcovxEt
hpxNmTM82X4+9L02B9HP1q/6j6b5TD7TZ3X9WZcfiPIYRH/EXHvDDjpPRN87
oldzth61dwXKYxD9uakts8uYXsD05W2Ghx4LQnkMoncJlbRJZXoh00sD8sYl
BKE8BtGvzyvRuM70IqaPe2Ycv9AP5TGI/vqa2wu1/qF6MdMXHZywbAebRxMz
/acNLf3LJlG9BdMvPnlm7NYFKI/x+36ypkormN6S6WtyOwd1XI7yGERfYPTm
tBe7f2um5/kFxWnpojwG0a+ssF8zZBDV2zL97iHtpWXLUB6D6CVh6993ZOe3
Z/r6YQ2ZLdejPAbRW8+qXL1zCtU7Mr1ot67rl7Eoj0H0rb/udt45nuqdmD7a
Yplf33CUryD6f9q7hJpOo3oXpn/8YrZAPQjlMYh+QP4Ev93s/l2Z3jQ1oKjj
MjzeMYfo6yMPCpjejelfpl1JVo/A4x1zMDHX8JzL7sed6U1sl6m3Y/tTuTO9
qd00ixB/qvdg+j9/1ynyVCXzQXg+mh6bcL4SvY4SLlDChUq4SAkXK+EWSril
Em6thNsq4fZKuKMS7qSEK5n3p+2kCXdTwt2VcA8lvJ4dj0aNbpxuQ9crNgfK
w6avHTJmuTwPJm3FeMyyoYOWHKDrb00Zvx0xr9v7JDkXmzMu/VxxPZWuj2Xr
OeolkfEq+y9U0HWwVoyLdm1WuzWP6h0Yjw/6+T7Aj/L2jEtazxS81pHfv9iZ
8VPCAs97U+U8gpt3W1Ky9LXfUnkePoKbR5u/QHrzdUeah/8gP6pA+4vDzPMW
0zzAD7kfanDef/l0r3ll7G96DPQTbLuZQ3lrxn1vTti3+Spdp6rHuPbnlaML
6byJlJuHGr83bdmEfrTu0pTpX75f1/xVNF0Ha854q2CvsaXhlLdjfHTahj5D
6HV9rBgfZna643BrWofIze+4PGute5PO7/g4MH2di3vtLnqfwM3vjMwvb2Hj
QvXtufvJtJjXuYquI3VmvDpq9tIQnlyfwM3XuGwN03N4STk3L5N/c2aXD5do
3Ll5lpc9Bp5zeSKfZ0ng5lmiVU+nPl5L87Gf5EcNyOp+5q7WdNoPaZD7rQUd
2ttNSdtMv5/NgOrHdj4QvmueXC9tAVRv6xD4Yi39npO/6XFsWlz12H203lCf
8fOVczItp1BuyLhX8s2slL70um3Zdfc2Dluv4k/X55gxffrXqAOmPvS63PyF
md3L6D3P6bpZc6b/lPRc98JzWvfXjvHiuI3P7bdQbsX4TefVawJoXi7ahvFf
p8Xvrq6l1+XmEeZNsu6ynM4LRDswfb6a89XZdF5Ays0jbPRpeL33PNW3Z/q5
29pk7VlKr+vMeNvtF32Nr8p5OjcvMMK574/Hi2ndIpf/P+XypPoJrZ8FLp/f
ouG++/wc+XcgncvnGzYPiQ+YSefjvsjvVxe6WessKImg48pG+funD3v1hgnO
e9B8oypQ/YIUl6Au5nT9rTpQfSe3n9ECur+cVJvxeV7lT/qz+kd9xvu9nV/1
9xHKDRk3eyzU5qvQ87dl1zX3fvFguy1dJ2zG9DY33v11dBY9D5cnX5X/Yo8z
3Z9TZs70GTPeay92pXoLpgf/4qLF6VTfjulDR7063+agXC+zYvxNh6CSi+mU
2zDu6BPrv3II5XaMv5gb8utaLr0ul99uc1jT/GMqva4D0x/4KAaJmD4vl99e
s//4iKODqb49d59DE979oPeZyuW3/d2erXwUQ/XOTJ9lcL61C52PqOPy2LPh
oadpN7m+jstXg1/3aR3o/pN1XF567OCoGUmnaZ0vl5f+0cVhTpim/PtWx+Wl
dYuPqY1vR39fvsmPBrC45LjK5UM0v0p/lw0gJkNz46r7lLdivHxSqd/8qTR/
Ysp4WM76CbCejsvMGX8SoxvfuJyepx3juoPaVll4UO7AeLti/aIN+ZS3Z1xY
uTF14zSaz3FmPL78xm4Vb7qemcvrznGaNHLHRMq5PK1OgE2rE+fo9/C9/D0W
Qkh+s9i9o+hzfZf//4xBamXcfP9Fmo+iv7/GIPgUXL2F1iHyWjNuNe6JWb9b
tD5Rj/FJXb5uurtXzoHLc8Y/3F/U/gFdJ2zK9JU3nn5aMp3qzRl3M7hyb4M7
5e0YLx8j/qRD1z+DFeODnvYWVbnIuZjLH95bnr207Ra67t2B6VMcHLS1y+h5
2jO+SDtFw+kc5c6MV9buO1VbStdhcnm/obk6Fp9U5c+lw+XlekmMUi+n0PXq
XF5ulOn5PTnfaHw/yt8nEfzKHvpPzjea9/gpP5rB1z5RegP70byB/HeT8E/N
Fm/vRddF87QYP/x92ToXlqfSZ3yn5uCGyuQsdj16vJIduKz1ixx2PXrsF3G9
65UDcr0Pl7/aVvJy8mSav5KaM327CcErwmn+iq0nNoPla7UPFi2n3IrxxwHP
jAye0LpOG8bjA5ulx8bS63J5pDbfPS2zaF5O6sD0Pn0bD/01i+q5PBIv4Ofh
9jp0PXZ7pq+uvu8c+4rejzPjYRs6zYxMo/5weaEtVxz3zUmhnMv/9G7mqTXv
LfX5q/z7ZyH/73TeQv671oRr/jdPbfvfXKZkXEb/bsKVjKdkSsZTMiXjqfnK
xkF0PaYYQiI3D2i2Ca2T+T0e7xKkYTdVPl524fJd43ot/9g5hf7ucPmu9X/z
PQxH0PzVZ3b+AWl6t3+f/3/riXm/2PnT3/0zyp6eX9oMqH5MzpLsLr1KJM3+
B2j/wRwG9Zi1xpvlu7QZv/FBPX07zRtI9Rl3iVdRqWXckHHjmuWPUyiHtuy6
Jh2eXV/gVyL53/rmVWZM/+35u+eaNO8UzeWdYgYtCd9J80g0X0CO/QovLayk
eSS6Dp7wZnP3uZQwbsV42o83IqD3k2rDeM+GgEWjaL4omsv/HOl2X1+T5n9S
HZj+gOPlH5E0/xPN5X+GFrcu/UbzP6ntmZ5/58bl/TT/E83lf4Jum0zxovmf
VGemv/tuh9CA5ltkXJ4np/fSo5H0/mVcPueAdYKOMeP/yttsMVvsR88zhMvb
tL7uU7KBrs+RcXmbbdPrapqTdrLrq6naiUZO/78jaa83tXKnlTRyesr/f/X/
O4CB/O96Sb8TW9TcDtJxvTHjJw+dmKI6h46/bBjXFAwbZdyfcjvGXz9vb7/6
rpxHcOtazTolTtGSytfDRHDrWnv7h69YWkzXy9H6XxWwhqFP2+jRdTgtGX93
+u3btGe07o9bR5pTVNO/8TLl3HrRsWY6nbRW0nG0/HnJODF4vdcQGV1PKOXW
i5rt6Rpts5rqjZk+eUfame6L6PjCgunjYlZtb1VI62S5dZs+ax4HxhpSzq3P
HH7pwbJJgyjn1mEmRPtlRPSh42hav6MGhw7vjpUdpNfl1knGPjfK9hVQ/7n1
kFP1T2W43qecW/e4u+OzsvnraZ6EW9+YOGBfmlqjfByUwK1vVL+aHFRrSMdH
GkCP/rMveq2Op+NoXcb/Wngv7zBbJ9aGcfOE4FO5Wyk3Yjxs4pQaozo6LqZ1
rFqwNvVIRcZLOt6xYHrVTuWPi+i4WMqtr1v5ZGDuAXpdKbeObnXn7PZJfSnn
1st5njZcEZhIx6HUZzJu/dG7em4YvR9ufVpGsFvQF1rHCtw6tKPTvWeXv6Oc
W2+WsuPAkOwPtB3K/SHHvNdnW3en64ikbRi3SW2xbjqr3zRiXEUSd73FT3k/
LZVbj1RqYaVnfJn+HnHrjupO6q27tppybn2Rlm/WxT3JtM6UW7fTJeSu6zT6
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
z2d+
    "], {{
      {RGBColor[0, 0, 1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmHf8T1UYx8/33nMTSWao7FFkr+yt7DKyJT8jo1AklNFQthDZLSPtQbuM
RLJJIUXZK1vD6v30OX/c1/P+Pt9zz733nGeeAmn9W/aLnHM/ppyLkb94525E
cYYfDRLxQHRf8n8m/i+NrI8+I/rH0NeC08GPwPXgDPCjcE04gR+G74Id3AOu
DKfgnnBD+CZ4MFwVjuFecHXYw33gu+FM8CC4ChzBD8F14PRwf7g2fD3cD04P
r+Yd74LTwd/CFeEVXIfg1XzXNvgqvA/e7vU+++EN8Dn0P8Fb4SvwXng9fBbe
AW9GFudzqiDXoT+J3Ib+a2Rm9OWRb6PfhlyIfi18HN4Ifw+fgDfBP8B/wtvh
NfAxeAP8FfIm5imL3IL+MvI39I34liy85xPousAl4YnwzYmeVR/OBW+H74Zz
wFvhenDZRPN0gbPDW+C68AFkA57VHHkL+p+QDdHnhnfA98A3wGvhKnAGeA1c
Gc4Mb4BrwtngTXAd+Fb4Z7gRXC7RGj4Il0+05l3he+GcvP9w+D44FzwC7gZX
hKfAneA74XFwV7gsPBl+EC4DTwpr35L3b4tMQ18O/YvoO8Ml4PFwRfga/3eD
W8K50Y+Cm8M3w0/B+239mKcZshn67OifRN8EzgYPhRvDWeEhcEe4ODwW3sz1
D/ftZo82wX/Du+CN8F/wTnif1zx/w3u95vkLPuI1T1bbC681uYr+oNeaXIN3
etn2MXiX7Qd8Ct7t5YOn4avwMp5VwuzI69uzI3/zspmLjDnqtZ7ZzDaRjfje
Nej3e63DFfg75rgNfVHkn+g6wz/HstNWcDtkBfRz4MlwaXg6PA4uD8+GJ6W0
Hg/C3VJajy5wGnI/Y1rAW5nzGs/9HF1J5FKzP/QFkaUY8xI8Fj4Ct7XYxPjz
cDeLT3Ax23/4OcbkgJ+HR5r/2d7Cw+CPuXLD+ZGO/frC5jZfh7+xd4cjeDlc
Bv4w9X+IcrciPwqxMI/Nw3+7kR+iWAbvMR38KTI9Y25HvuflL2/Fei4/XT7k
+14+9Tb6pfAvNje8Ej4Mfwcvhw/C38IJ77PK1hLdZ8gMzFMM+QnX9XAR5Ade
/vUO4zMy/nu4KrovuH6Hv0L/GbwX/gK+aPGXDyts93nF6qPoY+5dwZiy6Dy8
Ei5nMS/sx53I817+WND2imsf+i+596TX3udGnvLyzVuRP3rF5wOM2eEVzw/C
P8HXwUfgC3AluBDyB+YryHeVMXvz8utbgt88gL6r5RzebR2yOvqb4PVwDXiu
1/tPYs45XvF3HDzfaw1fhGeFvDUGnu0VW8fGihPHmL8Oskosu/0XedzL/nIi
S8ayw3PI18O7zrT3Rw5A3y+lGHwAro68j/+mwTkYOzPs3/PoXvayldHwDK+9
fA6e57Xmk+HpXjb3TKz49ArzTLUYze/xcEaLvVwT4UwWG+3b4Nvg17zi83R0
z3BvAfQz4C1wQ7g1/y/0itVz0L/i5efT7PuC3T8NL4I3wnPhQ14+lhn5qlfM
fwn9Aq/1nw2f9YoF+b1ifzWedU9K9ljB1tbsNpJ+KeM/ZNwu8wn4LfQV0b8L
/4ruXriNxcqU4lIL5MOMyQFPYMw7XvXJmxYHkP3RP4Jchf6IPRP9avgo/AN8
BtmXMX2Qp7n6wL2Rp7h6w73MT5i/BvyJ5e6QC1fCf6QUczqarYfcsBz9Yq/c
/5qtG/cWY8wrsfJtPbgpcj760vAi9JPg2+F5sWKP7UuplGzZvr1uSnGoKFwp
pThk4ysj10Sa82vu/cTiOLrPYtUypczeUqpx7Fk1kIPN/+ApsWJqfriExWD0
NzjF2OJcZyy2Wz5Fn9EpHi7xqgfeiBUzaqFvZLHMq35YgL5IotqpFbrCieJV
y7D2jRnfMqW1bwK3Sul9a8INU4qdd8H1kflixe0/LdbFitV/ILPEiuGHY+1z
GbimrUeiuuh+nlUo0d60gAsminX3wQUSxaV7Le8l2vsOlusS7X17+/ZEe98O
zpsoDjeF8ySyuSbm74l8u2Ow00q8Qz1bb/QXkZ0sPsGXLDbB+RPZbnM4X6K8
0Awumii2m9/dkaj2a2PxEv4X7my+lagObBvytu1d4ZRqZ/P3Z20PWYuh8MlY
9Yj5+8SUapkR8JCUauqRiKFwFMvmf0f+hX4Y/KvlfavBQw69YPVLyKG/e+XO
S/Apq+VDrj/tlcvzIjsir3OqK9pHymuW3zpE/6fU/3NEr1jxqojXOj0K90dm
SRRPannV8s+hH57S+j0BD0Lu8crZ55kjU6x7D8Wq68fBzzAmD78nwCeQt8S6
93isnmAq/AJj/rbeAt5j3wV3h7fAxWOtz1nLR5FyytpY+zAYHmj7zO/R8D+x
+hXjESn1JRbPx8B/WL8S6hbrA9rBnczOI8Wuzei7W05zyjVjLN861cYL4bud
aoPF8D1O9cCoSH5azctP8znliwyx4ltv9COC3vL7MDiPU+29JMR2qwEqcs10
qi3LWo5xqvfKW+5xqjOrxarZLiPfj+SnH1hMhps61TYHrfdy6kc+hps51Sqf
hm80W58H13Xqa2bBtZ3ixsuR4sbr5sdhHSxHz4HrOMWQNyL1Gkssp1nedcpH
U+Dq8Hx4IlzVKQdNixRDXoVLx6ozLyBrWe50qpPLWM5zqskLw0859aoF4Sed
+tNS8NNOfdNjkWrCCuabsfzocfNZeLhTj5k+zGk1TK5YdjIAfRfzCac8XiGW
PQ9DXxV+wamPKBbLJs02M8aqE/paLRZqV+v7cseybbPxcvCzTv3F7bYWTn13
Ia7JTnV+Ea4Xnep8a9RzOtVpNfg916luz841yKn/zRzLl63euhl+3KlHHsDv
XE61Zd5Y8cF6ie2hzrda9OdItfo6eFekGn49vC6SzX8Dd4LTWYyCr0VaN+uj
z0R6B+t9ruN6xKlPH4u+slPNcBoe6NQTfW41E7wMvhJp76zXPhHJ/i3PH4s0
j/Xdx+F+Tr35l5H6vk/hFcEOLf5firTv1i+vCrZnOeKbYJ+W39LgGy1uMMbH
io12FpE11rvZOca7kfLae+jei5S/LI99FOzW4vzSYKsW/z8I32g55fpY72nn
GGcjrb/1hm1hC9mjzF7CnLMs5sElnOrAb+H7nWrs7+A2TvX82kg1ieW/lXBr
p9p+eaS+7HN4PdweXgFvhjs69RS/wF2dzhY2wh3gVfCvcJrTucQyuLlTX7MV
7uR0TrLAbNTpTGBopLw8Ff0iuLxTj2/7ZHM+YHUZ+judavIeIQZavf1apP56
MdwTLuJUq98Q7N96hNGRcu7L5q+RakirJd8M3JhnDYRLOtX2T8JlnerYkeF9
rAYeHt7Z6tVBkfrKStxbh9/znXrqbMFnrR+5GqkmTGNMt0j9iNnG4bD+HULv
Yj41ICU77BDssxecDR7P+M6Remfzix6Jeq5p3NsmxGQ7r2hjPhlsoEOI23Ze
sTrEVatt2oW4bWcd3RP1SlPhPuFe69cOwA85nTsdCjZjdc6esI9WV/SNdE41
kTHWzFoN3B19b/R3hHe+HGK+nclYLLCY8Djf9W+Y385tDgZ7s9rpZLANq4XO
BfuxWmhnyCNWpw0J62A9xolgh1ZT7Q45pU3wC7NJq4UuhtxqZ1OtQ5y33tLs
JItTn25ncmbbnZHVGTPG6exodrAHO/tKF+K8neM9hD6rU1//erATO8vqGWzA
9qVdiKXW+3QPOcXWeW6kGruBV51j+cJqnvYhflqPlpNrrNOZzAOR8rL1dM1D
/J/AvY1D3LbzqxnBL+zMLUd4f+vBa4Z57OxrXPALq5eahlxg51e1Q74YCU+I
1C/UhtNC/LezsqdCbrIzuk2Ragyr1RuGPGLnVBsi1SFWt88MMcfOBv8DQjy4
AA==
           "]], Polygon3DBox[CompressedData["
1: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
nh/eHxwFrvJ/5Hq56A==
           "]], Polygon3DBox[CompressedData["
1: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
D7dh/STGuwT7H4vnhg4=
           "]]}],
        Lighting->Automatic]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkklTFEEQhWu6umBwYVFBA5FFFv0tHlFBOXqGGVFAUNQAZbnrQQ+i6IAC
CioRgCsuCPweNNgFvozXhxfvi+7s7FeZVXMt25iJnHMXkEd7aAbto+KUc+N4
CV6IXsNF+Cb+EW2hbfQB7aBjvBvDj+M1NF2EJ+Ba+Cc8BTfAf+Bp+Cz8A56E
1/FZtIF20Xv0HzneTZvhldR/gcfhv/gL9A/d8/q2IHYu5t1bOOARemfnwvPQ
FJyPH0Fv4KN4Gk3at/ghNAEfxs/zrxXLAZ9AObgUL0Ov4JP4KfQSLsfrIuV8
BtdHmuEIXB2p51P4PjlXk5xt8KidD77hNVsP34S/JtwD/4Lz4FZ4LqmvipT/
CT0r4E9wDj4dKdtjuN1rdw+ov+U1k0G422sm1nMtmaHN8q7XTod53uu10yG4
y2tuA/B1r/32w51ec3sIZ73m0xdrv7a752Q4A3+Gx+Bz8LLdrZTqF+CI+uag
ezCQ/NfuhvVoCdqB5bkYdE7rf5ua37ZHuCnonlmGy0H3w867gcrhFH7HK4/1
vBSUyfJvJXOM8atB+ey8V4Luq81qN9Yu03gHfb451e/E2rdl2Iw1dzvLdqx9
h2Q+353Ystg9eZRSniWnnhl43innAU3FZmo=
           "]], Polygon3DBox[CompressedData["
1:eJw1VEdTlUEQnN1vH8GctTBign9iTiTFo0dFjGUOZfYuj2B8gPpQAXPEhFrq
wZ+jEsTQXT0epnZ6Z8NMT+9WbttV0xzNrBGWYA05s8vB7B78A5lZDYJTgW8D
t2K8gEUP4RfgN2LtReBHwJ3AW4HPJK1tA64H3gy7Ar8XcwdxXoZ4EX4PbB/w
FsSvIt4HfAj4NOK3/K66nKzV79+T6UyezTP2ZrIB+AuiYrzjPfDiqLv3A98B
XgQ8mnTHIPCSqLtZ4zvgyqja6zDOxPk3MdeC8VSSn4dfm1POzH0h1o0gdgL4
C3B1VP3HgT8DV0XxsxzjjSDOjmWaI3fkjGtLkmrvhx0GHgbuRvw5cDPw+STu
yBHzPZfUG3LK+rimG3hu1N5qWBVsO+Z3wJpgXYhXID6UZF3Y+8wUY87s3WNT
Ldz7nf01nUHOehB/Y+KyFudMD+rRf07yjndnElGn6U6evw7rc95/5sw1L+HP
i9pbj3F2UA2XgjgtYnzt+jgLfNekyQbXCs9KGNdi7ybYZNcDdXEEe+7DX4b5
saQzmcucoLsqHDPHb6b+9GPuE/yjmXr1AP4YbBVi5UncPIGdRHxiUP953yT4
7Y4nYNwYpVVyMS3o7bS5dqcE5Zp3bc0I4rLg2hiFrYyqk/WWYVwPHIK0QY3E
IH7Zu6ewnZl6Ry0Nw1ZgfUeQ3sdh3AD8w3NnDT9hIUlb1AC1cD2Irz+w1VE9
or5KgnoXseaFSZPUFzntg//RxHWL925W0NvJIf7WpBlqhxz+MtVIbnnHbxPH
vJv/AXs94O+ZHIyYaip4jzP/H9h71jjk9bD2lKTNomvnmvNlGNdEvSnipcwj
yXoR++Dvjf39anrD1D/3/DVxwrPKkrTBmlk73yv3Dvp/RY7LvWcdroHx3oN2
72Gpc8re8k2yH+wL32ppEpfMibnxj3sFPD/q7/sHdQK50g==
           "]], 
          Polygon3DBox[{{1153, 540, 420, 184, 879}, {1160, 552, 432, 198, 
           893}, {1028, 543, 408, 169, 884}, {1029, 544, 409, 170, 885}, {
           1157, 546, 426, 191, 886}, {1158, 547, 427, 192, 887}, {1155, 542, 
           422, 186, 881}, {1025, 538, 403, 163, 878}, {1032, 549, 414, 176, 
           891}, {1031, 548, 413, 175, 890}, {1154, 541, 421, 185, 880}, {
           1026, 539, 404, 164, 879}, {1159, 551, 431, 197, 892}, {1156, 545, 
           425, 190, 885}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0skuZGEAhuGDos1TsxCESkcoIiLSMZVZW2PTe2EhMWy5gN6RkHAvJFwA
Yp6HHsw9mRYSdp6KxZvnq5NTJ+evVHhgvH8sLgiCb4pXbH818jnCUUXsOc6r
xV7isvrsSw7xha+atEsTgiCsaTs1FARpKvDgnz6vqcF9v7iuRvucG2qyL7ip
ZvuSW4raV9zWtXbU4toNd9Vq33JPbfZv7qvd/sMDddh/eah/OlKna/95rC77
jifqtu95qi/2A8/UYz/yu55U6VwRrdo/tBK737m7NWUXs0gT9rPvDvI8dnb1
2otcUNSe5Ywq7GHm8aPq/W65/Mwc1jGbtcxiDTOZoWo7nVVMY4SpLGcKy5jM
D/pkJzHMRJYwFHtneuWgMO79//AGass+YA==
        "]], Line3DBox[CompressedData["
1:eJwl0UcuhVEcxuH/LXrvYmbETri6iw1ITAiWYCt6bwO9dwZWo3eexOCX5835
BuckX+PgeHYsERFDuteURlMR29zRtI+7nOEeZ7nPOR5wnoc80oJ9zEWecImn
XOYZV3jOC63al1zjFdd5zQ3ecJO3vNOE92xxhMOatB/0qCc1pSOa9Wy/6FUt
yYg3vqvV/uCnMvYXv9Vm//BX7Xa4M6GkUupwlmaOOu1c5qnLzmeBuu1CFqnH
LmaJSlWmXmflrFDWrmSV+uxq1qjfrmWdBux6NiT+/8cfAt00SQ==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{599, 896, 598, 1172, 897, 600, 1173, 898, 601, 435, 602, 
        1067, 1277, 603, 1068, 1278, 604, 899, 605, 1174, 900, 606, 1175, 901,
         607, 1176, 902, 608, 1069, 1279, 609, 1070, 1280, 610, 903, 611, 
        1177, 904, 612, 1178, 905, 613, 1179, 906, 614, 1071, 1281, 615, 1072,
         1282, 616, 907, 617}], 
       Line3DBox[{621, 909, 619, 1180, 910, 623, 1181, 911, 625, 1182, 912, 
        627, 1077, 1287, 629, 1079, 1289, 631, 914, 633, 1183, 915, 635, 1184,
         916, 637, 1185, 917, 639, 456, 641, 1084, 1294, 643, 919, 645, 1187, 
        921, 647, 1188, 922, 649, 1189, 923, 651, 1190, 924, 653, 1089, 1299, 
        655, 926, 657}], 
       Line3DBox[{656, 925, 654, 1298, 1088, 652, 1297, 1087, 650, 1296, 1086,
         648, 1295, 1085, 646, 920, 1186, 644, 918, 642, 1293, 1083, 640, 
        1292, 1082, 638, 1291, 1081, 636, 1290, 1080, 634, 453, 632, 913, 630,
         1288, 1078, 628, 1286, 1076, 626, 1285, 1075, 624, 1284, 1074, 622, 
        1283, 1073, 618, 908, 620}], 
       Line3DBox[{661, 928, 659, 1192, 930, 663, 1193, 931, 665, 1194, 932, 
        667, 1195, 933, 669, 1094, 1304, 671, 935, 673, 1197, 937, 675, 1198, 
        938, 677, 1199, 939, 679, 1200, 940, 681, 1099, 1309, 683, 942, 685, 
        1202, 944, 687, 1203, 945, 689, 1204, 946, 691, 1205, 947, 693, 477, 
        695, 949, 697}], 
       Line3DBox[{696, 948, 694, 1312, 1102, 692, 1311, 1101, 690, 1310, 1100,
         688, 474, 686, 943, 1201, 684, 941, 682, 1308, 1098, 680, 1307, 1097,
         678, 1306, 1096, 676, 1305, 1095, 674, 936, 1196, 672, 934, 670, 
        1303, 1093, 668, 1302, 1092, 666, 1301, 1091, 664, 1300, 1090, 662, 
        929, 1191, 658, 927, 660}], 
       Line3DBox[{701, 951, 699, 1207, 953, 703, 1208, 954, 705, 1209, 955, 
        707, 1210, 956, 709, 482, 711, 958, 713, 1212, 960, 715, 1214, 962, 
        717, 1215, 963, 719, 1216, 964, 721, 1217, 965, 723, 967, 725, 1219, 
        969, 727, 1221, 971, 729, 1222, 972, 731, 1223, 973, 733, 1224, 974, 
        735, 976, 737}], 
       Line3DBox[{736, 975, 734, 1321, 1111, 732, 1320, 1110, 730, 1319, 1109,
         728, 970, 1220, 726, 968, 1218, 724, 966, 722, 1318, 1108, 720, 1317,
         1107, 718, 1316, 1106, 716, 961, 1213, 714, 959, 1211, 712, 957, 710,
         1315, 1105, 708, 1314, 1104, 706, 1313, 1103, 704, 479, 702, 952, 
        1206, 698, 950, 700}], 
       Line3DBox[{739, 977, 738, 1225, 978, 740, 1226, 979, 741, 1112, 1322, 
        742, 1113, 1323, 743, 1114, 1324, 744, 980, 745, 1227, 981, 746, 1228,
         982, 747, 500, 748, 1115, 1325, 749, 1116, 1326, 750, 983, 751, 1229,
         984, 752, 1230, 985, 753, 1231, 986, 754, 1117, 1327, 755, 1118, 
        1328, 756, 987, 757}], 
       Line3DBox[{761, 989, 759, 1232, 990, 763, 1233, 991, 765, 1234, 992, 
        767, 1123, 1333, 769, 1125, 1335, 771, 994, 773, 1235, 995, 775, 1236,
         996, 777, 1237, 997, 779, 1130, 1340, 781, 1132, 1342, 783, 999, 785,
         1238, 1000, 787, 1239, 1001, 789, 1240, 1002, 791, 521, 793, 1137, 
        1347, 795, 1004, 797}], 
       Line3DBox[{796, 1003, 794, 1346, 1136, 792, 1345, 1135, 790, 1344, 
        1134, 788, 1343, 1133, 786, 518, 784, 998, 782, 1341, 1131, 780, 1339,
         1129, 778, 1338, 1128, 776, 1337, 1127, 774, 1336, 1126, 772, 993, 
        770, 1334, 1124, 768, 1332, 1122, 766, 1331, 1121, 764, 1330, 1120, 
        762, 1329, 1119, 758, 988, 760}], 
       Line3DBox[{801, 1006, 799, 1241, 1007, 803, 1242, 1008, 805, 1243, 
        1009, 807, 526, 809, 1142, 1352, 811, 1011, 813, 1245, 1013, 815, 
        1246, 1014, 817, 1247, 1015, 819, 1248, 1016, 821, 1147, 1357, 823, 
        1018, 825, 1250, 1020, 827, 1251, 1021, 829, 1252, 1022, 831, 1253, 
        1023, 833, 1152, 1362, 835, 1037, 837}], 
       Line3DBox[{836, 1036, 834, 1361, 1151, 832, 1360, 1150, 830, 1359, 
        1149, 828, 1358, 1148, 826, 1019, 1249, 824, 1017, 822, 1356, 1146, 
        820, 1355, 1145, 818, 1354, 1144, 816, 1353, 1143, 814, 1012, 1244, 
        812, 1010, 810, 1351, 1141, 808, 1350, 1140, 806, 1349, 1139, 804, 
        1348, 1138, 802, 523, 798, 1005, 800}], 
       Line3DBox[{1035, 1039, 839, 1255, 1041, 841, 1256, 1042, 843, 1257, 
        1043, 845, 1258, 1044, 847, 1165, 1375, 849, 1046, 851, 1260, 1048, 
        853, 1261, 1049, 855, 1262, 1050, 857, 1263, 1051, 859, 562, 861, 
        1053, 863, 1265, 1055, 865, 1267, 1057, 867, 1268, 1058, 869, 1269, 
        1059, 871, 1270, 1060, 873, 1062, 1066}], 
       Line3DBox[{1065, 1061, 872, 1381, 1171, 870, 1380, 1170, 868, 1379, 
        1169, 866, 1056, 1266, 864, 1054, 1264, 862, 1052, 860, 1378, 1168, 
        858, 1377, 1167, 856, 1376, 1166, 854, 559, 852, 1047, 1259, 850, 
        1045, 848, 1374, 1164, 846, 1373, 1163, 844, 1372, 1162, 842, 1371, 
        1161, 840, 1040, 1254, 838, 1038, 1034}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{283, 433, 1172, 284, 1283, 448, 1180, 313, 463, 1191, 1192, 
        328, 478, 1206, 1207, 343, 493, 1225, 358, 1329, 508, 1232, 373, 523, 
        1241, 388, 553, 1254, 1255, 568}], 
       Line3DBox[{285, 434, 1173, 286, 1284, 449, 1181, 314, 1300, 464, 1193, 
        329, 479, 1208, 344, 494, 1226, 359, 1330, 509, 1233, 374, 1348, 524, 
        1242, 389, 1371, 554, 1256, 569}], 
       Line3DBox[{287, 435, 288, 1285, 450, 1182, 315, 1301, 465, 1194, 330, 
        1313, 480, 1209, 345, 1322, 495, 360, 1331, 510, 1234, 375, 1349, 525,
         1243, 390, 1372, 555, 1257, 570}], 
       Line3DBox[{289, 1277, 436, 290, 1286, 1287, 451, 316, 1302, 466, 1195, 
        331, 1314, 481, 1210, 346, 1323, 496, 361, 1332, 1333, 511, 376, 1350,
         526, 391, 1373, 556, 1258, 571}], 
       Line3DBox[{291, 1278, 437, 292, 1288, 1289, 452, 317, 1303, 1304, 467, 
        332, 1315, 482, 347, 1324, 497, 362, 1334, 1335, 512, 377, 1351, 1352,
         527, 392, 1374, 1375, 557, 572}], 
       Line3DBox[{293, 438, 1174, 294, 453, 1183, 318, 468, 1196, 1197, 333, 
        483, 1211, 1212, 348, 498, 1227, 363, 1336, 513, 1235, 378, 528, 1244,
         1245, 393, 558, 1259, 1260, 573}], 
       Line3DBox[{295, 439, 1175, 296, 1290, 454, 1184, 319, 1305, 469, 1198, 
        334, 484, 1213, 1214, 349, 499, 1228, 364, 1337, 514, 1236, 379, 1353,
         529, 1246, 394, 559, 1261, 574}], 
       Line3DBox[{297, 440, 1176, 298, 1291, 455, 1185, 320, 1306, 470, 1199, 
        335, 1316, 485, 1215, 350, 500, 365, 1338, 515, 1237, 380, 1354, 530, 
        1247, 395, 1376, 560, 1262, 575}], 
       Line3DBox[{299, 1279, 441, 300, 1292, 456, 321, 1307, 471, 1200, 336, 
        1317, 486, 1216, 351, 1325, 501, 366, 1339, 1340, 516, 381, 1355, 531,
         1248, 396, 1377, 561, 1263, 576}], 
       Line3DBox[{301, 1280, 442, 302, 1293, 1294, 457, 322, 1308, 1309, 472, 
        337, 1318, 487, 1217, 352, 1326, 502, 367, 1341, 1342, 517, 382, 1356,
         1357, 532, 397, 1378, 562, 577}], 
       Line3DBox[{303, 443, 1177, 304, 458, 1186, 1187, 323, 473, 1201, 1202, 
        338, 488, 1218, 1219, 353, 503, 1229, 368, 518, 1238, 383, 533, 1249, 
        1250, 398, 563, 1264, 1265, 578}], 
       Line3DBox[{305, 444, 1178, 306, 1295, 459, 1188, 324, 474, 1203, 339, 
        489, 1220, 1221, 354, 504, 1230, 369, 1343, 519, 1239, 384, 1358, 534,
         1251, 399, 564, 1266, 1267, 579}], 
       Line3DBox[{307, 445, 1179, 308, 1296, 460, 1189, 325, 1310, 475, 1204, 
        340, 1319, 490, 1222, 355, 505, 1231, 370, 1344, 520, 1240, 385, 1359,
         535, 1252, 400, 1379, 565, 1268, 580}], 
       Line3DBox[{309, 1281, 446, 310, 1297, 461, 1190, 326, 1311, 476, 1205, 
        341, 1320, 491, 1223, 356, 1327, 506, 371, 1345, 521, 386, 1360, 536, 
        1253, 401, 1380, 566, 1269, 581}], 
       Line3DBox[{311, 1282, 447, 312, 1298, 1299, 462, 327, 1312, 477, 342, 
        1321, 492, 1224, 357, 1328, 507, 372, 1346, 1347, 522, 387, 1361, 
        1362, 537, 402, 1381, 567, 1270, 582}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Z1TIdHMWvGfd9KiX1FF61X4K8lcj6Hzq4XL1xzPApPN4+Z/RQ8T+JKpdovQL
stQ9eGR/9TyQpWQ8bBNXQmvXH2+JK/WgyyPezp4882AYOxCfFHofzOhj9vPQ
DKDftCZUM9ZzcCH6oL9gsBryvzTyLunlN0SYX7npnTILTfWxS7LK6qhO0MRG
cXAYhTZpEfbUzEB9ufYr+ttmsOfluTz2L6PIxfDCRumbaaDq/8Jw+qsBCrhZ
ZtKZNopU+v81hRZMg24cy9WP+5aqmkY35kdSR9Fu6W3Vy4XToCiWm5k7snAt
9RgSscf8O2dZcvow3/y86vYwhQoIDpCMzXNGkUHEA7eQ7GkYUM2gU/OWREVH
/cx+Y5yqnockhnGGO4R7gltn0VLZEvFP9ihCwv9+j2K88P6NG+aU5vDCtlf6
RuUokgoRZ95Kmob8cw7fK3qMUG+akF/IyCj6G2UmqxmA+a81RK+Ha6KLi2w6
P5JH0Xm+xZnnRdNgmnJf5u22IURsViVrVo8iQZ5Cxd8J08D1y9mX7Kc+Urm+
b70kchQ9TPB+Ovp+GuofuAn5ismC+W2rTMf0UbTO49bGg+2aGmb4GT0ghxoU
Ij/sx/K1TR0Yjhdju8zHcp/LK6MbS2dPSQaPohkl8lDmmv/5veF/+P+zuCeP
wmAetR2Ef/+kUm+XDg/ESlzJ8ZwjKpJxxjPFBvla0jMP1+RBQaTY9dN4vtUP
FDK5YSaFagb9PrzrzgCFiyr+rHgeUGkk636WeQ8qGMIkJCOJoLM7d30B9/f6
fM/Xk3E6MNsVe/qLVC6grqbhFNyXBfvKb0wLW4NFu3DN3Zg84DlPVr7zXswV
Cp267KyRLYGRweRKFmyvOiU8xHKUX5OnG4qpQF3lJfFPqakw8ic5SBHPP9vR
5456e7jDm6Wp0G8/UiBI9mpdBMYdX1/+RK6jjb4dpL2tNJ8Dr+u2Enberx0b
dvTgtjZH0Q+0/RaZ80HYOEysFO8FSqeZGGr4HFBvR1VP0fEC0KJ8c/EV3rvN
vjZZljgZg0ftrn9mg7nwmGPb6wiW06p4kmJptxt6637bLF8E79c1PvPXMd/A
I5r6wIkINFf9wvakTQHYpDyIOYj3+qk4QrwRXSyajIzohcZCEFu+IPIV73Ff
PQey6/kT0fNDFGlfJQth8+hK/zbGdy2o/qjwSUMBXt7Tj/MKoOh9kDYv3vcZ
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
HGv6jAaP9NjLyy7B/wP2e3C6
     "]], GraphicsComplex3DBox[CompressedData["
1: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
Ge7aK9vB5EEmdYZ/7/XxqPnjTOoMv3nj8CGD15nUGV45pnSVfnEmdYbnjl0W
XDkiizrDDS88f1swOZs6wyfM3XBmcLSUOqf8699XfCZi/ZNVAenUGT48olnH
1byjMzzVYK6OC+/oDJd0Heq9hnd0hu+9OW6RO+/oDH8b8a7Im3d0hgcaPesV
yjs6w92nXxiUxjs6wwtPXQleH5hOneGVWRXxY/emU2d4C+19e64cSKfOcIWl
a53rzqZTZ/j+Q3oH2uemU2f4qGXiPq1OZlBnuMeYUUejDbOp8yRb5bdRLppi
taQO132tU6kz3M1qdJLc0RnucebaeD/e0Rk+8Fvw2F28ozP8oK++5W7e0Rm+
TLSuci/v6Ezf1/x2Yijv6Azf3e7Mw0je0RkumZlupGiTSp3hN2e3qSvnHZ3h
4RuuW8TZpVJneNzai9utlqVSZ/o6OuWj/f1TqTN8SYdn2bf/plJnuOpAh4Nj
LqRT5/v/fs+1xIedtBVP6yVTZ3j8ZJGq3NEZPqPfMn25ozN83vsWa+SOznDr
H+XNz/COzvD8xy/nh/GOzvC4Ly6ScN7Rmb7O+c9a13hHZ1rPZat3L3hHZ/h7
h0I3tX7J1Bm+NmX5jw76ydSZft6oXcuDBiZTZ/jGCRrfp4xMps7wNpMixjdz
TqbO8N/aVQeeaqRQ50FlLpWNjdrilzu4Xu5VCdQZ7jb7lLrc0Rl+IcytpdzR
Ge5g/bdoPe/oDB9n2C1E7ugMb3Gk/3s33tEZ3ntbqco63tEZ7qq3psNq3tEZ
PnjcBcOFvKMzPX7P2m8DeUdnuGrakiV+nxKoM/y7/s+EXpUJ1Bm+6M6xkNzC
BOoMbxe1oNf8BwnUGR44JUo7qH8Ct7hBW2WN9Dc3pcS+QiKq477OFT9yTyil
/vCQ40+nL+O9xxOX9uaWQ8TwuVOraqdpfqKvD/dS6l4tO1dNX3/j87SzLrba
4ilf9L5Y906krw8f2FP9s9zx9enxY/dllDozx/rLdN1uxexh68ccsq7RIviQ
TRk9Hp6+ydIgTLGKHo+vo+Xfp6f89wTrx/ftt8tIu1VkIqegdm9UjEsdt8jm
V7y5pJZrP8ru0gq1Mq7Qdc5W0aUhYvjXlxOPvYyposenp595GXVNW1y9t9q7
TPkdPR6uuutM45a6t9QBX+fdi4mnnP6/r4/15y7wd2zWv5q+Ptafqvzz/6wf
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
jqiKUDZ/a18fc0E6vLk455NPW8cHbP42L7v3YnNJM/FKZeNJqTI2fztx11c9
ukpJHOXbIKltxeacJcL80LLJnLNBWL/ZltNlkWI2fzMT1i8b2jX+/gY2fwsS
1l/8M+Xq3/ts/pYurD90YNeJN0RsztlDWL/Vwp+Z+1PY/G2JsH6/PlML1iqx
OecFYf37/R62+duPzTnfHq9VjK5qLdZ52Fw5u1MRde7oaR0rMm8tNj22dUq3
EUXU2XreIzdJuKq4JL6+yGNBEXU+OUQ0QEFBVZzy9YtTe+8i6lzUIbDYxVZF
vG2cSq7S2SLqrF/9+bg0qpV4ZftMn+Mvi6jz2oS5c8zVWokH71A1WfKpiDpH
C/PDHU3mnCnC+u8MCxlppllEnbsJ63+xd3my92w2f1sirF/vo2bOhmA2f7so
rN/jetiLgZVs/lYlrL+tlaLX/m3F1HmIsH5H1UVb++5nc05PYf0RI7xn9d/L
5pxJ2fanRQEdxKGvP0X9+s3mb26vDm6RDu8gLvTr66zTm805+68OviF60148
fJh2ndN4Nudca163XCJqL86K2zj3pRObc97Vte2rsK2deE+k8R7H3WzO+afZ
02wXaVux643pGq5X2Zxzgkz3gHR4W7H1eMsQsxQ25wzEfbxN5pypwvp/nTy+
Wbk5m3NuENavf7BH6hFjGXUeLKy/zXL74K/LZdR5s7D+RYtUd1REsfnbE2H9
A1/f3TlmJJtztmj+3/rfVzQGf+/H5pwWwvoLVAd+3vOzhDrHOMY/dOnZSdze
J/xwSBybv9la/j0qeqMmXjL22gBnZTbnbBAbb5RuVBOP0X4UeLAfm3OGGTla
SkRq4rCOW5LTp7E5p2nvw4bmqR3FtzbtaBy1hs05y9u8UVXY1lH81mjT+g8S
NucMrK8vizLoKC6zqj/SJ5rNOQ2F+eGSJnPO+8L6H+39zR1OZvO3RcL63ZLM
FfqqsTmn0vj/1u9Rr7N/gimbc14Q1v992eUergGF1NlcWL9VuJe78m82f/sk
rD/FIl4SniCjzsHC+p0+Hdu82YXNOcOqB+dGXesiXhTW18Y5hM3fTPOWxrjY
dhGHn/DcfDSHzd/KE44cFKl0ESd7TsnK6pNPnQNjE9ZKozqLQ10+7jdalk+d
DS41WEicOovPjE7yiLqaz+YVoYP0zdU6i71NC44f+ZpPndfvclJWeNJJ3LF5
WqDxaDbnVMd9v03mnOHC+q0vF9eOPc7mb5OF9fslTGmZWsnmbx+F9a/7csu2
alI+dQ4W1i8V6Tn2eJpPnQcL69+55eDxYTsLqHOGsP4jG54cVNrE5pwewvpT
vXN32lTKqHOg5/HfjVw3/vUzMn+hA5u/GaxIzIyqUhcvU3ZY6RfB5m/J8xQj
XY6rizea+o24W83mb+vNhgaLzNXFY3Is1L4NzaXOXYcuXyX93lVc6dlwYeaW
XDav0Do2WRLeVTzkUKBDydNc6mzX8Z22uWVX8TBH0bnqVmzO+d99JV3FOk3m
nEHC+ldzVdULlrP5m7GwfuPEH32qItn8LV1Yv7ZIeXWUSi519hDWv+zI9JaX
N+ZS557C+n8p/LB5ppFHnR8J6z/mMOVilzn51NleWP+FizWVh13ZnHN98+bd
zVN7iEXD23xwHJRDnbt+HV7X6NNDPEPSZvOuTTlsLiRzToky6CFuqV5x+9rD
HOpsl3zimou0u7hTVeDxvGbvqXPjo6QAUUB38ZP8Qv/eU99T57PXlJZJh3cX
WxcOn7Fj/3vqbHZi2ARJSTfxUf+q7sZZ76lzhTA/XNBkzrlRWP/GSzrLPYbm
UOfuwvrfHbnh+d47hzo/FNZ/aMkGs7dJOdTZXlj/siX5oS0Hv6fOzR//t/6G
7jqK6U/fU+eLwvrHdT119sorKXWeKqw/wsXWbc7XPOpsF7x6hMRJQ6x8LD9l
vUIWdW70Ot3JXE1DPLvGIihkUhZ1Prs69XPj415i6XGnd3f3ZlFns39/p/cS
lz5ZV5ibmkWdP5ibRLj07CX2/alxqW13NufcY7LKV/Smp/j29DW1lovZnNNQ
79QS6cae4iU2W6a+OM/mnKnC/PBpkznnYmH9XVvsb2amlEWdlbz/W/+vAgu1
LtOyqPMFYf1tdgSsszuSRZ2nCut/Nv9twp+aLPZ+Q1i/xi/T1jku2dR5v7D+
I1fsow0msznnEGH9z57Nbt2vK5tzmvXImCv93kf8cEL8mIAkNn/70KrVYEl4
H/HCPc0dLnbJoM57foxqZ27ZR3zb80XSS9sM6mz47+/K3mKjEY4vPoRlsPnb
v/tteov3v+78u/2HDOrs/u9+pN7i2FcNYRMM2ZxT/XYLH5FKb7H2g8SVwe6Z
TeYVGuLCJnPOKcL6H0WqWO9OZvO3j8L6WzmXrh3TLYM6Bwvrf6BQk/zSIYM6
DxHWPydwp8+BuxnUOVNYv6h3/j2fvpnU2VNY/5dXdl8HpWRS517C+n94WL6M
NWVzztDU3qMkppriboscroWdYvO3in//jpri5Vo76x6VsPnbqKezu5rX9hXH
V3im5/ZPo857//379hWHvDP8UL82jTrn3fCtbTzdV9xwPEWiEZ1GnY3+/bv3
Fdclv9Qw+5tGnbedik6Mmt5X7Pwx7+bmielNfp/78n/n/d8551Fh/RbB7db2
PM3mbx+F9f8S3ZGqlrH52xhh/Ztjm+ceMEyjzvuE9cveHNvVuCWN3Y8hrH9s
lV23q9lpbF4hrF88tJ2jh1M6dd4hrL/2VMk1Q28252zTzepNVJCWODI77NF9
FzZ/W/Tv+cj/fq2XSrIj2fztRotd511Ga4nPOimfqvvF5m+K/56nWuJndaM1
O4lTqLNlXcx2UYWmOHmz6Z1Bu1Koc/i/56+m2Gv+2nTLtynUua7440LpYU1x
9beRnpvV2JxzsjA/3NVkztlOWH/a8IV7il3Y/G2JsH7lRRpaM+6w+dstYf2+
2/0O29ez+VszYf1DDvd4H2GaQp3nCut3OG0VtOZQCnW+IKz/mcv8sWWNKdT5
h7D+JLfyG3eeplLnHQv9raWZ2mK9e0+mX/N8S51xf52mRkSg/P46dNaxiB0q
8dUWb6qrfNtH8o46477EDTUSE5veidT51aiqDuaDtcXG1TXqIZcTqXP3f88v
bXG6j/akxOFJ1Hmlft+qxgIt8cSpM3a0fZ5EnR/gPuQmc05fYf0PFwelnODX
j84ZwvrvjG04GcevH531hPUrJToNlh14R509hfU7lDku7MOvH53jhfV3XfHM
o9nVROrcU1h//wMTTJqZJVHPCmHedXydapsRw9nf4wqd//NFAR9X261i930F
C/Mui51Tz1v3Y/d9ocPT5eKE5nwHPN5FcIM/nwc09mTzVR+hw4fQi/Gxy9+S
Y044UXJmu9FNNifEfWi9TkwXP/7/zhnA/LBIukt1mT27zxb+N76go6492xcP
fzVaeXkLB7YvHu5w82/X0Y5sXzzct8daY8ulbF88vLv90ueFK9i+eLhVyo3x
imvYvnh40uJnCqmebF88/EX0plmbgti+eLjGVrUFBrfZvnj4RJ1P+QE/2b54
+JcbA7sN3sH2xcMnO/iOXBvC9sXDJaub78i7W0E9VwtztgjnE2s6rmT7AeHn
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
lwePz6XrANyv5/rqYmkeXQfgjp2OrlEaL6PnO/5emJQUtDiY/zvorfB8h5+0
rnEM432A8HyHXwlL6fmSdzPh+Q7XVDI/05n/uwnPd7jrfQ3LV7zj+Q6vuT9U
8i4whzMWnu/wfd5zOny8mkPPd/h6t6RmkR3f0/MdPn2L2oG/46X0fIfbzox9
FFOYz40Xnu94325gb73yMf/3CJ7vcJeeZ2en8b5NeL7D09qsOtPAO57v8CS3
vjMd+b9TVgnPd3j7A6lfJ1/Pouc7fLXsY5vCmix6vsNLItSe7XqVTc93uEfX
ZeqGblKus/B8x/th57rVdbX8+/xY4fkOv8wd2qDCv5+vEJ7v9PfF3hZPxvGO
5zt8rPMu7xMFGfR8h7e2tJrvuTKTnu9wq5qG29NGZ9Pznd5vL504uh//PlZb
eL7D9R275IznHc93+Kmdim+v9kun5zt8RQeDhC3iDM5OeL7j/dLqM0+1F/Lv
3/B8p/djGW38o/xSueTjO9Nyo2rp87VDno3X9O3ZfBi+rGhJ9tTfVdwL4fF4
//Bd7fFD+fsuvL+F38jb/M9NhecR/OJZ7Q9B55I5Z+HzU3x9HeF++yUbXn2U
iBTodSe1z5B8Zf51NrzbiiCRCvs86KthkEKCXwmXJnzeCu8k3E++z91m7VTJ
X/r8ZencBduWrS/mWoQoZUjCVeh1Yb5qVIdDvOc5b+9rfluXXPHk0enf/Iq5
toVR/iJnfXKjx1Ou7w8t5kYLn+fCS4X7qO2E83NwnTfVHDp/rFcRV5W1XFPH
vBVd/+uyVHfO533Ov/unO5IHzCr4fpj3O8Ln2iea3Oesfv9YpIutLvng9+F1
qwOKuEmDknuYq+mTW26fte7moSJug/z94ZsB5H/6ZW+uv1HEhQufO8M3C/ch
D9xdHRYi+klz/rCkyKWL/WVcWq93LtFVLej1xfu+aroL7282z/aTlHQg7+fh
vjSEd73lD6zk973B+zhUOefy7i98Ln+nyf3Ds9vcmSRprktu/m7y5lHBMm7b
joprLvf7ke8y1+8YEirjbsivb24D2OvjtRbO6pdlXL78OqZvSD40xH9RRDr/
fYXP0+GGwn2/DR3/O/8Hr4PNz89IuHmgkHtgPzjWXKJMr4/Xn7c+HMP7WA3f
K/L7j+EhRYo+ibyfUPnsKQnvwl5PB0na/ea9vs5mirlaT/LFKwsVLCSFnIFw
H0JZk/t49yx8lxN1jc3bxzy78uTC4ULufprSeIlTP/KP9SZ6xicK/7su9RxA
vrddWfOCiEKum/z6k8rm7bk1b2q6vCrkRMdnj5aYGrP1T7r517KjjBsj3FdQ
1uS+XFwfMO81fGJow5kUcOcvhLbIHd6c5sD9i74emMy7o4/LOXO19uQxEevu
LuG9w1XNM9LvbH4+dl3tixDe1xzZ6ypx6kHuM3DexDreE31/jDFPZfPzPXYn
Jt0eWcCFCvdpwNWE+29fXi9bLZ3H5udTFH/tWTSugKsT9UqPatuPfOLzs1e2
mxX81yGOzc9Vatc/mTuvgLOSXye3sPl56vmip499CrinE/N9Rd2NyZ9Vdlkz
qqKAy2nwMJG4s/m53aYzBhO8C7ka4f4HeJJwny2ue3hfsUa4TxXXPbz+PmrW
5uwO/n3COeG6By/Sz7H03JxD1z14snC/pUS47uF1sMOujWbyuSWue3BjP/V+
t3jHdQ/umtNoumhfFl334D5PvRJ/78/67/eEv+7R67Vwn6GjcN2j1zu13k/k
87rPwnUP/uFD5Cn5fG+ecN2Dq32pqyzmvZtwfYPb12rfesm//k4Wrm/wAb8L
u44OF+Zj/PUN/vf0A8nmiAzuvHB9g1sL9+MNE65veN28vrtBRz7vyhSubzTP
WTpxp9wThOsbfIjJqn3yOVg/4foGT+tz8518DmYpXMfg3L4fa315x3UMXi27
MYyLSfvvfRp/HaO5WUjI6LWxaVyBcB2DG5zJ8l/5NI2uY/AJwn1uuI7h9V18
rYuZfI50X7iOwS+3erlU7riOwb9UN3sn9+PCdQz+89vSG/K5E65j8OVp+0Pk
c6eBwnUM7iPct4brGHxz3d7xHrzHCtcx+NI5odte8I7rGPzMoHPDbr9LoesY
vNrPKSQqOYWuY/BBpXH5HaQpdB2DvxLuQzstXK/wPiQn5Vqq/P3JQuF6BQ9d
l9pcPhdqJ1yv4LJmN9zl7iJcr2jeMlHqKJ8XJQjXK3iCT/Zm+bzosHC9gk8S
7iuLE65XcC39n2d78P5VuF7BPbcUvuB41xKuV3D7V53rbvI+W7hewV9Guk/V
fJHEPRGuV/C1XU+37BSfxGUL1yu42p5xknhpEl2v8H5MLNwP5iPcr4XHxwn3
g30RHg8fKtwPhvv38HX6X1TslWnP9nvSfUobFx+IdWD7PeHjzdIfDnNi+z3h
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
8F/TNHXulbN9kfARwhzs/wHSuVr+
    "], {{
      {RGBColor[1, 0, 0], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
9ocnz4JUt8+JjkWK/y2TY/tH2lfJOUs5tnxyLaT50sroulQzwBXRdaxmF59F
17GKPx8U/iV/f7+IUcpHhybXUZqbrYmupdXLfxVdS6vvvjo5932a3JOtg1fz
vL6Mrp/Vy28rno1q3TbJdYLy56ro+lnzhw7J9Zh86qrkPPuJfl90flf+7Y18
nLnv21vsFe0Z9Zqa+y0M7i81P1wQPKv7Qs8ieF74pc6pGJlciyr4zUL+wfYt
thLJ9apmlepN1Uu+Hdx7aV4xP3ge+Tm8PHiOuEp+GjxHXK1nEdxrqp96N7hf
VE8xL7iPVE/3lnJIcs2s2a/mlGt0D7HPVC+t2J8811mLfSXHfTj+NPNsZ2dx
P3Vf1RN/I98K7oPXw18E975fw6vg1dpD8OPJvqc+4g/kGdaUQZfDNhZeqfgD
T+c7vlXe0Hpksc6JfqE4//PR/iXf2oL8Wvih/L6Unl/mmbD6bM0QlgQ/K/n0
5sy/7xh0VfS/0f2d5qVL4cMyz0Ba587Bug//RPd9msH2zN3PqB5YEN0/atah
BKeeUfPYA5JrWs1RtxfXp7ik+dkD6LuU04sYoev/sdhLurayyXWy5oFlkutk
zQNVGz+ra1UfnDv36/78Hd2Hatb9YnRunRk929ZeXRo8t/4Efi94Vq3nuEy5
N7nn0px5V3ENupb9k/svzdJLJvdfmlWWTu6RSxTPR/eqpPJydP+ruf29uese
zQl3F79Rv1U1lOLtVaoFFKcyz7r/wt4k8zuF2dG1hGrmFsn11XL0q9F1tWrL
J3PnbOXKi4qYoxzRPLkf0VyoGTwx87yocXKPoNl+5+TeXPOohsl9RMUi92p2
Oo1r65a7f1Zt+WN0P6uZxvboflbvR3bBF2Z+J7I7up/Vu5Wfo/tivTdRfarf
2ER1Se75uGbUjfhsVOY5/LDc9aLmGJ9E1xLKgzuj+2XNObdG97Oaha4vcqVm
gBui+1bNJH+N7us1/zwfGZL5fcoP0T2y5n73Je8Bzal6JM9ANMfTHEX3ahTf
Wze599R7BM0inuOzQAG4I7rH17uebfAlmeeZG6PnGJrl/gTXyTzPObbIX+rD
Juau+xWfx+fuGZSbJuSusxVjR+XuW1SfjMtd2ymnjMzdOynnjs1de2k/DM/d
O6kOGZR71q+64oncdbzy7IjcvZbqlqG55/uqT4bknvurPhmc+32A6pOBud8T
KM9uUt7NPI+9NLm31YxxdO4+TTXSmcl9pd5h3ZR7FqP+5eRkH9d7K72X0LN4
hHt7HPa7Mr/DOju5P1WuHJO771KtdRbySOZ3ZIqNylfy+e+jZzKaiW2Onslo
NquYqZih56S5+5YiNirGbijiQOlir9ZRDR89F9KMWnFJNYvW1Ux+96G5a43k
dy6aB8bkHkoz/BOT35toTntS8nsTzSePQfpnnp9XT37/ohnj6ck9r+a9pyX3
vJoh10rujzR7XBc9o9Ps+vfoGZ3m/yckv7vR/Pz44l5pL61Fzs08ez86+Z2O
6t5vsNfMPOuulvz+SHPR1dGzNc3D/4DbZH6PcGpy360ZpmYNqrFVk38enRc0
k58fXW+rjzgq+X2WZo+Lout59WjX5u6vlLvfje6h1C/Pi+4F1HfMja7z1Zuc
ktxjav6/OLqXUY+s/K/9VlP5JnoGpdn+nuh5l96lfhQ9D9G7gIVFrFBv8jFc
NfM8/53ovkP9y5vRfYR6nP8DySfMxg==
           "]], Polygon3DBox[CompressedData["
1:eJwtmmXAFVUbRWfOXOwWAxPs7k6wO7AVFezuxALEwBa7BVuxsFswwe7u7sL2
028t9vwY5qw7l/u+78w5+9n7ObfHTvv33q9UVbUd/3Q4/9hUVS/Oy9dV9SAv
/AlvDK8NPwH/Dm8Irwk/Bn8PrwovC98Pv8nnzA/XnHeC/+D6RvBaXH8c/gHu
CS8HPwBPBG8DL877D4G/gBeH5+f6HfBt8HHwYXB/uMCbwQvw/oPhJTgege/l
+r/+PF5fF+7B+QB4JO8fBPfn+jHwl7y+PDw1573gMZxngn/m+jbwWHhm+Bd4
W/gZeBZ4HLwd/C6fNxX8F8f18HfwKoyX4fp9cHf4QHgd/t/R8NecV4Sn5bwP
/DfXN4XX5f1PwX/Bm/h++En4Y963JDwJ593hLhw7wFty/SXGS3GMgu+Hqy5V
9Sn/fxGG88C3ce1zeDF4Pngk/BW8DLwofBd8K3wsfCh8JPwWP2cBuHDeGb6P
66fBx3N9MPwKr88F/w3vCL8Kzw3/A/d1wnBsxWkT+FnGNcfW8Kbwc4xv5/MG
wIfDR8E/w2vCq8APw3PBh8Ib8rkD4FngfeE14CPglzjPAf/J+7eHX4bn9P7D
Ozg/4fXgOTgfCP/H/98S3pjrz8D3wqfCg+Dj4Wd536zwr3AfeGau7wOvzuuH
w9/AyzkfuX4P/BGvLwFPzHk3nyfXl4UX4/rd8BzwwfD6XD8W/hVeB+7F9VHw
OHhtuCf8KPwLvBa8KvwI3AM+CF6vZH5+wnkpeFLOezjfObaDN+P9zzP+l/dv
AW8Ej4VvgY+BD6lzv+6Aj4ePqvP7/AZv4P2ER8M3w0fDB9f5e++EB8NHw8fB
I+Cj4IPgw3xe/B6rwzNx3g9+m/OCcMN5F7gb798bXq3k/e9wXshpwXlX+Fuu
rwwvzefdC98I7wRvAx8E3wWfAB9T5/k3HH3gzeEXGM/G9f3Vj5L1Pzt8gHpU
Mp/uhk+Ej+X9A+FZ4f3Up5L5/T94c+cX18fAP/H6anA3zvvCN3F9T7hfHf3p
cGwPbwG/6Hzmem/1qOT3vR8+HR7M9RPgB+Az4BPgE+F74JPg4+BB8GIcD8F3
w/8wPo3rs8HTw5s4X/ncHV2/Jfqqfrl+upfMn99L1tfsJfPnt5L5PVvJ/Pmw
RE8nLFnvFZ/fl9O8JXryd8n9nLPk+fv39FMfSvRH/d3D+VyyXn8tmV+zlqzP
hus7wwvCT3t/4F3ghUruZxd4V3jhkvk4AbwbvEjJ+psQ3l39KdGHcSXPYxbO
DzmfS/Rt7pL68EFJPZmA8+3w6yX69S/362b4jZL19x98S1tvXK8V51vhnfh5
d4CnwsPhfvBI+BR4GPw05/msc/z/G50fJc97rpJ69hTneeEfuH6DegjPCH8E
Xwe/V6L3XUr0di8+/wF4KHyVtYhzd/iLOvVhW67fpP7w+uWuZXiE+gpfAc8D
H65elcyXz0v0YYoSvbZeqSdTlejRZyX6OTnnO+EF2/W8WYleL9TqweYl83OR
tn5uCZ8EL9zq/xYl83XFVu93hs+EF2jXf+8SvVypne+7wGfBK7R6uhN8Brx0
u/52gE+HD4RHwxfD18BLtHqkvzgF3gy+Wr2BL4OXbPWnD3yq9a3Vg+3h0+DF
2/q9LTwEXrldb7vCZ8PrwZeoV/AF8PrwpeobfCH8Q4l/mb7En/xYUm9nKPEf
6oH1eMYSv/NFiV5PWaLv6r9+aKISP/J9iZ+ZrqTef1vih7qW6NsNnD+Gv+a4
jfEtHF8y/orjVsYb8Ptdpl4zvoj3bwoPh/vDl1jf2vtnfXe+rgafA+/N9XPh
NeDz4H3h8+HV4XPhfeDz4F7wUHgv+Bz4SPgZeDh8LTxJq9dLlNSTqX0PfCA/
7z31jNcnhT+FN1Tv4EngT+AN1DJ4cvhzeGP4QXgy+DN4o3Z9dYN/grdu18/E
8Mfw+vBr/PyX4bF15sc9XJ8Q/gBet10/U8NfwpvCj8Fd4W/gzeHH4engb+Et
4Cfg6eHv4C2tpxzXwVfA3zEexfVpvP9wb7g7x7Xw5fC3jEdzfVqfF7yZ9YVj
mPMX/sZ6wnEFfCH8FeNPmuhHjzp683ETveje6tH7TfRislZf3oQfhx+Ea/za
6rz2Uvv3TwHvzfUH4XP4Pa623nFcCV/E9a8Zv8L1x+AH6ujZZ/Ci6nsdfZyo
Ez23nr6q3nai/1vDr6jHndSXreCXrRdN9GlGeIR6C8/ueoBvgl9t58voOnrW
jeMC+Ez4M8YzcVwInwV/zvhufu8J4PfhdeBJO6kP28NvMH6xxI/+3v68ufn8
w+CNSur1nPAh8AYl/uP2Ml7Kq7d5/xrO107qTx/4dcYzcJwFD4E/YTxZJ/Vn
B/hNxpN3Un92hN9i/HzJ/fqt/fum4xgCD4Q/YtyV42R4APyhesTxKHwf/B/j
KTupj/qDdxhP0Uk96wu/zXhGjrOtL/CnjOfzb4BvhMcxvqOML8nVO/Ca/r1q
BDwM/oHxHBzXw1fC3zOemeMi+Gz4C8Z3luSyd+G1GNxVxtv+6j14bfWe4161
Bv5DfXfNwbfDf6r/rmF4JPwX4wVdc2oR/DvjeThuha+Hf2Y8L8dt8A3wL4yn
5RhYJT994PPjuAW+Dv6J8QLOAfgW+Df1muNh+B74f4zn93eGb4Z/Zdybm3EV
fBR/x6U+v9Z/L1ni9x6Ez4RPrFOv1K+3vV/qBH/4EfBb3i/nXZfUG9fTRU4a
+AD4RddryfM7HH5TPfC+cf1Q+HX4Mp8LfBj8hnrgfe4SjZuijoapfYdw/TXG
lzovub4//AJ8QUnetP6P9XmV3N894TGuj5L7fzT8HnyNOtolc+DfKprk3PCZ
VnU0yGdtRly9TqYxO+7L/3+O8Xkl/nE/+Hn4/JL7O3Xrp5eHD4X7w+/AV8ET
8fP2gZ+Fz4X/7kTTp6qTedV6NXuaOplXLdezL1Uns+rlzYRL1MnMZkU9q97V
DNWrE41WS9QUtVuN7Qb3qKK9avKsdTKjWm2GM9ub8c12f9TJqmqEWmHGnqtO
xjB7m9HmrpMpzG7WFLVXDbbWqNkz1cmIarlrotSpGa4Va8QsdTKstcPMuECd
TGeWtIZ1rZPxrW32LMx+ekq9pRlnSXiFKtnHnoHZTk+mNzMT2ivRI+gVzGwr
1slMZjkz84J1Mr1Z2sy8UJ2MZ5Y2469QJ5OY/a1xM9fJuNY+NbVTp+aptdbI
CerUPGunGvlPlZqpdlpjRnD+vErt0bNvUMdz6+X13CvX8ZDj2jnyeJ054tx5
q46HKe3nOWfuqpNhnEv2NI6ok+ntdXxpfahTIzeCf4SvraMR28Pvu4braMhi
8MnwSXXW+KLwu66hOhnYLPwavF0dzZ8G7uUzqeNZzJpqsFpsZpuxiWfRu/SH
52uiyWqzmj1DkxpgLVCzp29SI6wV1ojpmni6+dv54POzxlhrrGHTNqlh1jJr
TFf4Y+tFnRq0apMe0Zx1eihj2zW4Z50ekGuzn5oMLw2/xvVjvCeMr9Vnce+P
8h7AV+uT4Leb+MWbS/zBsfAH6q0+Cz4O/lC91ofB0+lT4E+tOSUeS++hB9F7
+TztVdmzet3aru+pMj8u8TOa9FuWKsm79tS2raMp9trMlPO169WsORQ+H74c
XqVJRpqk/Xlmp/3h9ev06H6B94RXspb7O5ZkqInqeML7Wk/6ch2NV+v1QI/V
8SB6oyutgXU8Up8mmWeROpnQLGQmnL2OBzMrXgxfA98Mb9ikpzdHnZ6kvb7d
ee0pxmeU1L/d4Cfh00vqlz2Mg9r55Hyzp9S7To/SXpM9RXtbZnSzuj0Xey9m
MHtXZpDh8I1VsomZ6dw6mcQsZcY6p05mMXuZoYbCF1fJVmaa8+pkBLOOPQe9
Xb+qze4l3kCPsHyTHoa9RDOMWcb14nrQ08/UxJN2b/XS7Hxrq5/zt/pmhrV3
qEcy297Yzp9urb6aYf9q9eWRNrNcXSfDmmXsIdlLMjPaSzukXZ+uP3sLZrCr
6mRgs5k9pPXq9FTsLY1o60ePVv/t2dibNMPayzmwxCvpmdZtkgH1Wnous6Ee
0t6PmVFvaY/IXrEZ197RpiVeb0irD3oKvYUZ0mxsBrZ3Y8Y1G5t57RWeUiUL
m6nthZp5zdpmans/Zmaztj0oe5tmbHtTZuAz6mQ0s7E9vf6t/qlvZnx7Q2Zm
s7+Z7dI6nsgsZ6a7rE5GNuuZ4cwiw6pkOzPgJXUyo9nQjHx6nQxodjZDn1Yn
M5qt7anZWxtcpdeqx7bXd3wV720mP7VOZjSr2zO0dzioSm/T+3dQ+3y9H3ro
Gdp6r7e2h3FHnR6IvQ01137GqiVaPH3r91cp0eKurd9fqURb1fAj4J4l2u6c
dm73LfHnWzXxq8eW5LlNmvjTI0ry0RZN/OcxJXlu6yZ++LgSPz1Fk37g0iX9
c/O2/vzIknw3ZZP+4jIl+UjNVruXK8lTyzbJOzuW5APnkHNpk5Laswv8BHxa
ib91Tjo3tynxy9Y8a8XWJbXQOeBcWLek9lnjrH0rlNQ+a5L98JVLapU1yP7y
im1tmqpJ/3PZknynf+rW+h/91DZN/P+AknzRt0meObnEz+u5b6rTE9OLm8HN
onpovbSZz+ynp9Xb2qMZUaenZu/GHoXZxns4vnfRSTYdXaX3Zo/LrGHmsPdl
D8NexqgqvbiBJdnE39Hf1QxrltX/2fvzPb53SEl+2ptjtTp7Ol/ph5rkpf1L
8qceQ29yQon32KFJ/jixJJ/s2GR/6KSSfLNxk7xzeEme17PoVQ4r8TI9m+Tv
PUrypZqj9hxQksdcg67FPUvynh5A77N7iTdYq0n/wU0187JzZkCrP86lPfRk
jM8syWvq+aBWX9T/i5t4Qz2j3vGSJt5Bz6h31EPMA/+vjre4qIm31NPqbS9s
4mX0NHrtS5t4dz2t3nZYE2+q59R7WpP9/MnaWn15E++v59X7XtbE+5oBzALX
N6mF1kBroWt0YKuXrl1rvrV+5tYL9Owkj42p41cGNsk+ela96yqd5Jmn6vih
VTvJV0/X8TvDm3yenlpvfQG8cJVMYDa4uklWco44V65r4j2sMdaaa5vUGmuk
tfIaeP0qGcusdVWTuaWn19sf3yQ7mMnMZlfAK1XJRGYj56D3Y5qSn+ccPKut
x+u09WpoW9+t/67BYa0fcL47h85u671zyzlib0WNce6oWVe29U4tc47ae3JO
OnfVQHtbrgG1Uc2zl+WcUwvNnLe3688s+le7Hh9o17MZ0r0I14jZ0jl4W7se
nZuuEXsBaqxrZ1y73ke261cNuaFd/33b9Ty8re+u9yubZBkzkdnINWivwDXn
2tRj2StQ0/VeZmj3btUos7WZ1t6Ba9asq0ezV6Gm693UWHsJar7aO6hJdjZT
m60HN8lKZkCz4Mqd5Ocn6+Tvh5vURmuete+RJrXTmmntfLRJ7bamWltHN3mW
PlO92uNNvJmeTm/3dJNabQ23lj/VpJZbo63VTzTxyno6vd0YNbdKjbfWj7Lm
V/EMeofHmnhFPaJe8cUmz85nqLa+1MQLW3OtvRu2n39o632fa/KsfGZqtRlr
gHOlJHs91KTW66H0Uk828RJ6DL3G2CbP0meql322iZfW8+n9+rQ8uMSbvwDf
WaVGWCueb1IrrDHWmmeaeEU9oF7QzGD2263NEqc38X56QHsJpzbpLZjJzeYn
NMm6ZmCz8Il6jCoZ2Cx8rxkW/hBeD16+k/7LqDr9oaFN9NIehL2IFTqpbdY4
+0nLdaLHj9bpDy3dST1/qE6/Z5lO8sHDdfpFy3aSHx6p0y9aqZPs/ESd/Kan
uLj1Z9bHJ0t+3+95bSuundskK5pJzCYnN+nF2HOy93RSE++tBzfLndKkN2GP
xl7NkCa9Gns49nLOaeLl9fT2Rs5o4gX0BPZizmrS+7CnYG/h7Ca9GHsi9kbO
b9Jbsedi7+W8Jr0XM63Z9swmvQh7LPZa9Fz2pq2BerEbOLatkpHMSu7h+V0P
91zc27MHYdb8guOtJvufnzL+jOONJhqv1lsjxmfdTvyy/lMvZQbWn7hnYDbW
k5mHzKd6tZHW6Sp7LuZba8yY1s+Yld2Tce/ZPbtv28xtrbHGmMWdI6Nav2Nv
0TngXHAO2TscoOZWyeT+fJ+5z945Y+/QPU/34t2TdS/UOeBcUHPM9s4Z545z
xt6jey7u5bsn616MntPefN8qXlTPYW9bD6kX0ePZy+9Xxfu5h+tevntOf7eZ
3b1q91DN8u5h+t0c96jc23SP1r1v93Tdu3VP1+9euMfoXq97WH53xT3X71tP
ozaoEXod95D9bor50ka2HtrvorinoLd2T83v/vSsstfmnprf7elVZa/NPW2/
O+Sem3vd7jlbi63J5ln33KwV1gzzq3vGfnfDPW/3ku0J+10A92jtFavharme
wd6qa9S16hq1V+uadm3bP7Cf4J6z300xr7sXbU/Y3v6oKr1ie8b6U/2r/tc9
V78r4x6ze7HuufvdDft97sW7B6uX0lPZ/3OPXu+gh7AfYH/0ppI57lx3D9Hv
ithPdG/RPXu/++Eeo3v5atbEdTRCLXMPXm+lxzI/289z70hNWq0TDZmtjqap
Lf8H7rS2Bw==
           "]], Polygon3DBox[CompressedData["
1:eJwt13e0VNUVB+Bh3gOkqzSlCEpTKRKpgpRQDX3RQw9VOlGaSouKYhRERbGB
KAjYSahKF2kiYJSiUkUEO8QapeXb684fv3XO/mZPeXfuOWfetf1HdxyVTqVS
uySn/DcrlSoF2uRIpVrL6OxUqoA0ZKPU4/QU1VOQNWKj2XhWjD0oJ9T5JC97
x+N59NUzDmND4/nqh/SdNC8k+fWtiw/AbzL2ZYOVufTkZw3YSDaWFWH3yWH1
pcznXenxH1lpY1vemf1sfoFVMfZiA1iW+qJUZb3ZwHhL9XmpzHqyHnKn97yX
HTK/kHys1AqP5zWpbxzO72BX6nlcvlfnkuJsm8f/wT5Tn4v3lOUsn+feahwR
r88Ke+Ax+U6dLcXYVo8vYlcaa7D67BvznJ5byziIjWQF9KTZzaw/G8bysWxW
kw1kI1h+lsVqsAFsOMvLCrHGbAybwIqzy1hddjsbwy5nL0peVpnVZF+Yv8Ty
GauwWuyk+SVWzdiHDYrvRJ3L69Vmg9koVpD9U75UXyEF2HqPP8q+UaekiGEL
m8W+Vl+M6yTvspnsK3Y+rrtsZjm8R3VjPz6E5dYzW75Vp6Uoe8/jpfSNNy5m
L8uz6of1nTIvLAX1bfB4bl7HOCTueVYoPltcL9aItWCnzM+yq4y3sQ7srPmb
rFnmO4q/t7T6dWmSufbxfZRUvyOd2Tg2hVVVr5J2mXUU30dF9eU+y1/YXWyi
TFKv4G0yayHWYHn1W9I8c53jM1+j/pe0zHyXf2dl1f+WVpl7N+6/69TLpXXm
noy1VU69Utpm1nms6QrqZdIic13i3iij3iA92SR2P6uh3iS92RT2AKulXi3t
M/faRFZJvUUGsPvZTHar+l3pz+5jj7D66s3Sh01lD7La6o3Si01m01lN9VYZ
xB5gj7KG6sKu11/ZQ2w2q86uYB3YNDaD3cDek4FsOpvFGsT609edzYj3jV71
G7xpZm3FGiyl/lnKsPasK/vV/Gq9sZnOZ4tZSz1vSyc2lk1mVdS/S0XWlfVh
F83/xyoYu7De7IL5b6y8sTPrxc6ZL2EljPVZM/ZTXEt2RJ0j9iK2ip1j1xu7
s36pZDP6RcqyDqwb+s38DCtubMnaszPmP7BixhasHfvB/Cd2jbEd68J+Mf+D
VTJ2Y33ZJfMSrsFo4wtsCWuh51cpxzqxnux8OllzsfZeNb4mf/a8q2So+TP6
FnisseeVZGPYAraU3cbWSEd2Z6wNVjn+Bn23s6fZC6wRWyxXs3qsKfvRvJi+
Ica57Cl5XF1E+sZ+pJ6rr67nrZce7B52H7tZvU66sglsGrtJvVa6sPFsKqum
Lur1+rHZ7GlWh02Xo+osyc1Wx2eNe0FdQsqxj+I+ZsfUOeUytob9J869OB/Y
G6yX+mN5mL3OVrABcWbJ8Xj9eG5c/+zk/L0lnZxtccbtz072l9vSyXkc5/Lh
7OS+75ZO9pvYd46qP/R697KF6te9R0/1ScnJarEG7Kj5vjgLjcvZOjZc/VHs
+fHdsuWsv/pO2Wf+XHxuaeI9PmcX9FwjZeLvi98B8oTHV6hXxlmqfkXfdayp
urXX+COd/L2fq/NKHmml7ztWxGPN1G30fZ/5zgenM+tZTqj363uWrVVv0XdH
rCH5IfNa8ZqvZCfnx7h0cq/EPfOVepu+Yexh9ROe2yTWKb8/nZwxcdacjd8L
8hLbon4vvhM/WF7VewNrpe7kuWn1n/Q9xbax3Wwke1/uYE+w51nrrORaXVRX
k6ryN8/byybpmxfnm77OWclvuJLs1viOZL2+0+wyVlfdWN9x869Y/nTyWvGa
K/TtYfew59WL9HVS75a72XNsIeuo/loKsoasOfsy83oF0sl7xnsP9XrfxnnG
Gqtb6jttforlNtZhjdixdPI77MZ08pszfnvu8NwvWS5WW91Q35F08h2dydwr
cc900/dFVlxI+7y6julB8+PsN3UluYntYSfYpailNjvAjrKz6rLRy7azY7Fn
qSvGdWF72XY23PgIm8Oaqg/LaXXx+Dxsk8c/YGONT7L5rK16V9z7bA6bx9qo
d8pINiv2IdZcvUNGsJnsSdZMPUO+UBeQfGytx2/2N8+Nz8T2sFF6qrMn2Vb2
ARvBGrEl7GCsZzaZLZVrY+3FemG/x14YZ4O6WFxTtju+V89dbDzAjrBJehqw
l9n+2DPYPWyB5GE3shrshHlFfQ8aV7MNrE+cbewBtiruR9Y7s2amp5M1Hmt9
Qfw2laXsE/UxfVP0zZEf1ZdLSfZ+XF/2k/pKKcV2xRqNc1ldREqzD2LvirM/
rhmrx76ONRVrRF0w9l62M9Zt/G4w1ox7l30ba4DlMF7HbmSfmlfy+WYY17CN
rK+eeZJm5Vhl9lmcfyzbWCHWKjsc5xr7I/4GKc8+Zs+yc/E3SAW2L9YZOx9/
Q9yDbD+bz7KM5VkVdiid7JNz0sneEnvMIvVrsZ+wjuoe+vLE2cunsWVsDeue
lexNC9nH7KPYs+J/FFkU+7n6kL679dViz8d9nSPZu2MPr8meYTvZh2wMq8Ge
ZjvYXjaaVWOPsc1sJxsaa5zNZOvZVjaQVWGPso1sOxvCqrLZbFPsBex2Vo+9
GOch+5RNZLewBexD9gmbwOqyF9hedpCNZ3XYfLaHHWDj4vcMm8iWsrdYe1aG
3cVeYctYhzh32FT2FlvNurHSbAJbwt5k7dj18b8te5ttYv1irbEp7E22inVh
38dvBNactWXfxR6nb55xN9vPxuqpzGaxDWwbGxxnB3uErYszhQ1iZdlk9kac
l6wraxq/W+N9Yy9kU9n/AZYK5G8=
           "]]}],
        Lighting->Automatic]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRmEcwPHD636XlAxkkoFRBkYZmCQDGxkYKBObMvAX8BewktgVm/vL
635Nktvifo3PU4bv+Tx1nk6/55xT0TXQ2p8URdGoXhXWj7rUXHIUFXCR5dxg
DU/ZwAe28JudzI5FUR9LOcwqjrOOk2ziNNu5wB4u84DXfNe2nnWvFcPscJUJ
rnGX69wL83CfmzzgFg8Z57aOrHd4zARPuMtT7vGM+zznjDPc8EMXegnn04jZ
4hzkErs5zzZOsZETrOUYKznEEvYykx389Pxm3rGex6wOZ2JZmMe+K74pX09h
r4rNl8ci5rKQOWEPs5nLrPDumckMpivDOjWsGWNa+LZM5a9S9BPu6UvGiGZd
bv//gz9Dy0m7
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 982, 473, 689, 1092, 897, 691, 1093, 898, 692, 1094, 
        899, 693, 1095, 900, 694, 1096, 901, 695, 1097, 902, 696, 1098, 987, 
        1191, 697, 1099, 903, 698, 1100, 904, 699, 1101, 905, 700, 1102, 906, 
        701, 1103, 907, 702, 1089, 1104, 908, 983}], 
       Line3DBox[{704, 988, 1192, 703, 1105, 909, 705, 1106, 910, 706, 1107, 
        911, 707, 1108, 912, 708, 1109, 913, 709, 1110, 914, 710, 1111, 989, 
        1193, 711, 990, 1194, 712, 1112, 915, 713, 1113, 916, 714, 1114, 917, 
        715, 1115, 918, 716, 1116, 919, 717}], 
       Line3DBox[{719, 991, 1195, 718, 992, 1196, 720, 504, 721, 1117, 920, 
        722, 1118, 921, 723, 1119, 922, 724, 1120, 923, 725, 1121, 993, 1197, 
        726, 994, 1198, 727, 995, 1199, 728, 1122, 924, 729, 1123, 925, 730, 
        1124, 926, 731, 1125, 927, 732}], 
       Line3DBox[{734, 996, 1200, 733, 997, 1201, 735, 998, 1202, 736, 999, 
        1203, 737, 1126, 928, 738, 1127, 929, 739, 1128, 930, 740, 1129, 1000,
         1204, 741, 1001, 1205, 742, 1002, 1206, 743, 1003, 1207, 744, 1130, 
        931, 745, 1131, 932, 746, 1132, 933, 747}], 
       Line3DBox[{749, 1004, 1208, 748, 1005, 1209, 750, 1006, 1210, 751, 
        1007, 1211, 752, 1008, 1212, 753, 1133, 934, 754, 1134, 935, 755, 
        1135, 1009, 1213, 756, 1010, 1214, 757, 1011, 1215, 758, 1012, 1216, 
        759, 1013, 1217, 760, 1136, 936, 761, 1137, 937, 762}], 
       Line3DBox[{764, 1014, 1218, 763, 1015, 1219, 765, 1016, 1220, 766, 
        1017, 1221, 767, 1018, 1222, 768, 1019, 1223, 769, 1138, 938, 770, 
        1139, 1020, 1224, 771, 1021, 1225, 772, 1022, 1226, 773, 1023, 1227, 
        774, 1024, 1228, 775, 1025, 1229, 776, 1140, 939, 777}], 
       Line3DBox[{106, 354, 107, 355, 108, 356, 109, 357, 110, 358, 111, 359, 
        112, 360, 113, 361, 362, 114, 363, 115, 364, 116, 365, 117, 366, 118, 
        367, 119, 368, 120}], 
       Line3DBox[{779, 1026, 1230, 778, 1027, 1231, 780, 1028, 1232, 781, 
        1029, 1233, 782, 1030, 1234, 783, 1031, 1235, 784, 1032, 1236, 785, 
        1141, 1033, 1237, 786, 1034, 1238, 787, 1035, 1239, 788, 1036, 1240, 
        789, 1037, 1241, 790, 1038, 1242, 791, 1039, 1243, 792}], 
       Line3DBox[{794, 577, 793, 1142, 940, 795, 1143, 941, 796, 1144, 942, 
        797, 1145, 943, 798, 1146, 944, 799, 1147, 945, 800, 1148, 1040, 1244,
         801, 1149, 946, 802, 1150, 947, 803, 1151, 948, 804, 1152, 949, 805, 
        1153, 950, 806, 1154, 951, 807}], 
       Line3DBox[{809, 1041, 1245, 808, 593, 810, 1155, 952, 811, 1156, 953, 
        812, 1157, 954, 813, 1158, 955, 814, 1159, 956, 815, 1160, 1042, 1246,
         816, 1043, 1247, 817, 1161, 957, 818, 1162, 958, 819, 1163, 959, 820,
         1164, 960, 821, 1165, 961, 822}], 
       Line3DBox[{824, 1044, 1248, 823, 1045, 1249, 825, 609, 826, 1166, 962, 
        827, 1167, 963, 828, 1168, 964, 829, 1169, 965, 830, 1170, 1046, 1250,
         831, 1047, 1251, 832, 1048, 1252, 833, 1171, 966, 834, 1172, 967, 
        835, 1173, 968, 836, 1174, 969, 837}], 
       Line3DBox[{839, 1049, 1253, 838, 1050, 1254, 840, 1051, 1255, 841, 625,
         842, 1175, 970, 843, 1176, 971, 844, 1177, 972, 845, 1178, 1052, 
        1256, 846, 1053, 1257, 847, 1054, 1258, 848, 1055, 1259, 849, 1179, 
        973, 850, 1180, 974, 851, 1181, 975, 852}], 
       Line3DBox[{854, 1056, 1260, 853, 1057, 1261, 855, 1058, 1262, 856, 
        1059, 1263, 857, 641, 858, 1182, 976, 859, 1183, 977, 860, 1184, 1060,
         1264, 861, 1061, 1265, 862, 1062, 1266, 863, 1063, 1267, 864, 1064, 
        1268, 865, 1185, 978, 866, 1186, 979, 867}], 
       Line3DBox[{869, 1065, 1269, 868, 1066, 1270, 870, 1067, 1271, 871, 
        1068, 1272, 872, 1069, 1273, 873, 1070, 1274, 874, 1187, 980, 875, 
        1188, 1071, 1275, 876, 1072, 1276, 877, 1073, 1277, 878, 1074, 1278, 
        879, 1075, 1279, 880, 1076, 1280, 881, 1189, 981, 882}], 
       Line3DBox[{896, 986, 1294, 1091, 895, 1293, 1088, 894, 1292, 1087, 893,
         1291, 1086, 892, 1290, 1085, 891, 1289, 1084, 890, 1288, 1083, 1190, 
        889, 1287, 1082, 888, 1286, 1081, 887, 1285, 1080, 886, 1284, 1079, 
        885, 1283, 1078, 884, 1282, 1077, 883, 1090, 1281, 984, 985}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1092, 252, 488, 1105, 280, 1196, 503, 295, 1201, 
        518, 310, 1209, 533, 325, 1219, 548, 340, 1231, 563, 355, 578, 1142, 
        370, 593, 385, 1249, 608, 400, 1254, 623, 415, 1261, 638, 430, 1270, 
        653, 445, 1282, 668, 460}], 
       Line3DBox[{253, 475, 1093, 254, 489, 1106, 281, 504, 296, 1202, 519, 
        311, 1210, 534, 326, 1220, 549, 341, 1232, 564, 356, 579, 1143, 371, 
        594, 1155, 386, 609, 401, 1255, 624, 416, 1262, 639, 431, 1271, 654, 
        446, 1283, 669, 461}], 
       Line3DBox[{255, 476, 1094, 256, 490, 1107, 282, 505, 1117, 297, 1203, 
        520, 312, 1211, 535, 327, 1221, 550, 342, 1233, 565, 357, 580, 1144, 
        372, 595, 1156, 387, 610, 1166, 402, 625, 417, 1263, 640, 432, 1272, 
        655, 447, 1284, 670, 462}], 
       Line3DBox[{257, 477, 1095, 258, 491, 1108, 283, 506, 1118, 298, 521, 
        1126, 313, 1212, 536, 328, 1222, 551, 343, 1234, 566, 358, 581, 1145, 
        373, 596, 1157, 388, 611, 1167, 403, 626, 1175, 418, 641, 433, 1273, 
        656, 448, 1285, 671, 463}], 
       Line3DBox[{259, 478, 1096, 260, 492, 1109, 284, 507, 1119, 299, 522, 
        1127, 314, 537, 1133, 329, 1223, 552, 344, 1235, 567, 359, 582, 1146, 
        374, 597, 1158, 389, 612, 1168, 404, 627, 1176, 419, 642, 1182, 434, 
        1274, 657, 449, 1286, 672, 464}], 
       Line3DBox[{261, 479, 1097, 262, 493, 1110, 285, 508, 1120, 300, 523, 
        1128, 315, 538, 1134, 330, 553, 1138, 345, 1236, 568, 360, 583, 1147, 
        375, 598, 1159, 390, 613, 1169, 405, 628, 1177, 420, 643, 1183, 435, 
        658, 1187, 450, 1287, 673, 465}], 
       Line3DBox[{263, 480, 1098, 265, 494, 1111, 286, 509, 1121, 301, 524, 
        1129, 316, 539, 1135, 331, 554, 1139, 346, 569, 1141, 361, 584, 1148, 
        376, 599, 1160, 391, 614, 1170, 406, 629, 1178, 421, 644, 1184, 436, 
        659, 1188, 451, 674, 1190, 466}], 
       Line3DBox[{267, 482, 1099, 268, 1194, 496, 288, 1198, 511, 303, 1205, 
        526, 318, 1214, 541, 333, 1225, 556, 348, 1238, 571, 363, 586, 1149, 
        378, 1247, 601, 393, 1251, 616, 408, 1257, 631, 423, 1265, 646, 438, 
        1276, 661, 453, 1289, 676, 468}], 
       Line3DBox[{269, 483, 1100, 270, 497, 1112, 289, 1199, 512, 304, 1206, 
        527, 319, 1215, 542, 334, 1226, 557, 349, 1239, 572, 364, 587, 1150, 
        379, 602, 1161, 394, 1252, 617, 409, 1258, 632, 424, 1266, 647, 439, 
        1277, 662, 454, 1290, 677, 469}], 
       Line3DBox[{271, 484, 1101, 272, 498, 1113, 290, 513, 1122, 305, 1207, 
        528, 320, 1216, 543, 335, 1227, 558, 350, 1240, 573, 365, 588, 1151, 
        380, 603, 1162, 395, 618, 1171, 410, 1259, 633, 425, 1267, 648, 440, 
        1278, 663, 455, 1291, 678, 470}], 
       Line3DBox[{273, 485, 1102, 274, 499, 1114, 291, 514, 1123, 306, 529, 
        1130, 321, 1217, 544, 336, 1228, 559, 351, 1241, 574, 366, 589, 1152, 
        381, 604, 1163, 396, 619, 1172, 411, 634, 1179, 426, 1268, 649, 441, 
        1279, 664, 456, 1292, 679, 471}], 
       Line3DBox[{275, 486, 1103, 276, 500, 1115, 292, 515, 1124, 307, 530, 
        1131, 322, 545, 1136, 337, 1229, 560, 352, 1242, 575, 367, 590, 1153, 
        382, 605, 1164, 397, 620, 1173, 412, 635, 1180, 427, 650, 1185, 442, 
        1280, 665, 457, 1293, 680, 472}], 
       Line3DBox[{277, 682, 683, 1104, 278, 501, 1116, 293, 516, 1125, 308, 
        531, 1132, 323, 546, 1137, 338, 561, 1140, 353, 1243, 576, 368, 591, 
        1154, 383, 606, 1165, 398, 621, 1174, 413, 636, 1181, 428, 651, 1186, 
        443, 666, 1189, 458, 1294, 685, 686, 687}], 
       Line3DBox[{459, 667, 684, 1281, 444, 652, 1269, 429, 637, 1260, 414, 
        622, 1253, 399, 607, 1248, 384, 592, 1245, 369, 577, 354, 562, 1230, 
        339, 547, 1218, 324, 532, 1208, 309, 517, 1200, 294, 502, 1195, 279, 
        487, 1192, 250, 473, 681, 688}], 
       Line3DBox[{467, 675, 1288, 452, 660, 1275, 437, 645, 1264, 422, 630, 
        1256, 407, 615, 1250, 392, 600, 1246, 377, 585, 1244, 362, 570, 1237, 
        347, 555, 1224, 332, 540, 1213, 317, 525, 1204, 302, 510, 1197, 287, 
        495, 1193, 266, 481, 1191, 264}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
tue55snKwJ9m/uq/E1CdywvKsiLuwjgw4NVpCC1cFDmybpDB+7AUymNI58od
AY2fnl+G1YcG+qTbCkE1k+IKJzofoeKpgZT1cMgpkbSePVoObprGk5iH/9X5
J+vZbl70vVoiFB7i7wUWdOh/coqrnvVK3ceHeNrdqRzM+dhe3u+SU1PtMbxp
y494yMhY9sa5yc2uxjV2UlWtZ1RACPFx0fBMzD9SP+pRgGdVV1xv7JdAnCLv
7Ma6hG9ps+l5dE11zHNaXwlxu3dnojbOhe50tu/lUaosT87QnkF8394JN8y3
iDqWpTTmqvo5vhCpQ5x20JML81i32z1eZ1+oHhyz2TON9F+h7OPa8EVLy2eJ
igFV7b4LzxtQnbOevNSN+/lNTu5NnWYrqsk3ZllP6pEAzc2XmqcRZ9tS99L3
ITsIspFc/hxAAjJKrGMSiFdlhRs3/FQA9YJN9vNHyIAt2fpVINLZJUW4kLvp
NOA9cOCntHkhSD90hSoN6Wz1nildr8wbZN/y/sA/Vg7M4tI625DOv0MKyPam
8wS1QFjflTAScMtJY8Hnwv/q38BG69CMzotJDvZczA/EtBTSV1TCrwenn2Xe
LQcuRcy1Uc9nwYWvVs+KpOrgz+TZz/5l5YDidNsdloRZMCvU6XJphywRqBN8
TwDpE9n5Lcv5P++/wpl4DvP3w9s21mvkA3Po+Vd2cH/QY5ozH4rBPcshs23o
fBm/CIWK652BcfiTd2tEMThR6xCuhvhi+K3PClO/iVIf6ofEQxLYoWKginPd
vTua47l/VsLs3bcp71WWg+b+w69OVP/7/4ZevTmB6yr0iMj/1FXK5ggmX3f4
8OCo+T6kT4JzW8QQ0qeGes/vvo4xYkLv6PWnD5BfupJ4hg3nD6l6/vIHa+C4
g0J3V3054LifeCKF/O/7Z8to0+E6pF6U3KhPzo6ZdxL+h8HNw3GS3kGlYEJY
/fi+8X9fHzZ9tfoOev+ycooQ/P4BHFdNhkENzK96NZbbXg4kVo0ozf7z/tfD
6j/iz1/BI7vx+fdep0oyl9cGct51KSro8w+vRhnMo8/fdzz9m8WLb4SODScz
H9KnuX+0AetDk1bzuEWkDibk6SdnovWKtz1ufuw/ueJ+thYq/Pm7rstufP46
d67dYQFugNov+q6PVylIaJdokEOfn6++ikrMdI2Q0NoabeVDAp/bTZ/gnLAq
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
iyT/g4NF/YOD/Q9dL9Y+
     "]]},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{741.7698656599496, 600.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.1716833524467916`, -1.8167170876860776`, 1.852924833881523},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.663834256013323*^9, 3.6638342801013117`*^9}, {
   3.663834352551377*^9, 3.6638344000378323`*^9}, 3.6638379777378225`*^9, 
   3.6638416458469563`*^9}]
}, Open  ]],

Cell["\<\
Pretty good! 
Now we can remove that parameter from the simulation and use our fitting \
instead. That should help us stabilize the other parameters...\
\>", "Text",
 CellChangeTimes->{{3.663834547304698*^9, 3.6638346229940553`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Masking Importance", "Subchapter",
 CellChangeTimes->{{3.6637682370237913`*^9, 3.6637682475492516`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"paramsMask0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsMask1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table1", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsMask2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table2", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsMask3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"table3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "resY"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "resX"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6637682043817787`*^9, 3.6637682571149373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsMask0", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.25"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"paramsMask1", ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.25"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"paramsMask2", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"paramsMask3", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Rho]\>\""}], "}"}]}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.663768261150791*^9, 3.663768284354134*^9}, {
  3.6637796913888707`*^9, 3.663779693566409*^9}, {3.6638280844882755`*^9, 
  3.663828085392926*^9}, {3.663828177704982*^9, 3.663828178391461*^9}, {
  3.663828666038163*^9, 3.663828685512917*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Grw/SRPPU024tCp2+uctZVyc4j/svPZP62g0fyl+l44e3xxUEU7xu6+UzzV/
jOYvxZdpLl/YZXI5F/9bZ9NyPxXchM4XUPzksQuMB7QgnOIPU+8n81RB5w4o
/rINJ3nBYoRT/ITMkz2/nULnESh+eeCT/tP/oOcyxf8dYpM3dwqep5pw4vyu
EuFihFP8Rc+bQjvsQ/OX4jdptHT/2r+Qi1N8eeEp8eBAdK6B4retvzXB0jab
i1N8td59HHfPQucdKL7w2wOTG82pXJzi97fef/P5ZHQOguLb7Lnyu24zmr8U
v9k9r1FDDZ1voviRKdlHmrd4cXGKXzFZSTeQZ4SevyK4OrzWKPESmo8Urjer
Q62WAD9PRRDsduDXnPf4uSmC1o2tBtkX8PNRBEH181d1tEHxKoV3uf89cMhw
HK+KoJ9p6huxET73JIJsX4/iLmX4+SWCl6YLd/S+h+NMEYzWuD9lHg+NWwqP
yBsadNwRn4sRgd0moy4DSL8W83wRweMrIx/suILjQBGo3i/jJZzC52JEEBrx
vrpXjII7fih80ai6/K0WeP0XwfC90btP6mRzx8Nf/kJj/0N1+NyECI6NbCtt
CdmL1m0R/Kk7M+Xo/PVcf0EMD476XT59DZ2LketB5H3rCstVKA+i+K5brP9p
eFjMxSm+r7RpSP5MlAdR/KtjL2aVinB8pQc3nEQJJUtQHkTxX6kWBX/ehNZn
ij/u0vxOSoNRHkTxDb7rS+feQnkTxY8/fiIrcjbKuyl+i3WQ1+IylDdR/CtK
2nd+v1RwxxvFH6y50O5cHV639WBRY5hdzgCUp1P8sYmlywSGKG+i+A7P1ka/
ikb5O8X32rgg0aIrGrcU//fr063lXYq445biy5/P+Po0Bp3TpPjRhiPU226g
fJ/i30kvcm8cifImih+z6sqa8aHk+1gw/KBJ1+y8d+L4Sg92fvwdrHODrG9W
DP/4vZf+F++ivIniT/owq3DJV7JOsvVhTQ+FsDaviItTfI0XKjNc+pHxb8vw
BTxn08dv0fluim94dvXb+Cno/C/F3xMmfn1zLMIpvhLvVcAPL5I3OTD8e7sD
iuZ7ofPCFP+67eB79ePJetuL4b9a5/7i62t0zoXip5h7rsoHFF9R/H2XBWcD
x81D67YeXJqut3OY7Ch3nlL87rK0Xk4rUX3j7+9dNvS1Qw9yLobEURJQ27n4
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
GDCfK/jtVL+d1FXkhgy/TjxCx910E/N7yOvijKSufqSuojBi+K/sVix106D5
CmMGF88fIJv7gOCmLF/LaOB0Jzr+VJgz+IvDS/KNSb0rmq1vrA596rPqKO2L
wpp9nyOzO6zsQb9PNFvfUG5Kr1Il9Q2FDcOvbtZVlBnT9Y1otr5RYxWzuIHU
NxR2DP+8au8360l9o5atY4Rb3UlQkDpGLVuvGND4NaPBl65X1LJ1iY0b0ydk
kLqEJ1uX6Kg1LH8oqUvUsnUJ6Nk5oKMxqUv8oP93VE+Q0/EVrj/IuzA4p86g
MGBwTn2gtp36APU3eZ34f+sDte3k9bXt5PW17eT1vu3k4yD6D07lmzenuwTc
vEfWeT0GfzT6/Nj0ZyTPNWdwF1Onz4LPJL+2ZPDHCQ471XfQeDDbdxrfRdTm
vYw+ZxfM9p0K7iiHq7sco/Un5xn5MGHd8NixK8j+lwqD8923+g/OJc9Nts/z
6btY7+PXCM72c66t7fSl7C2Ju+jfS+VlXz6dz9iuTp6nbD/nvenGnpUzSTys
x/BndXUM29KJ5EEyhn/IURSeM5HoxvZVDnzZY/0icj8JsP2TD12+Z6qMJXy2
T7LBUHPC9mUkPyXnETpCn0u/u34oJ+cu2T5GpbGTA4A8d6Rsv+JAcd5oI0N6
3ZayfYkr/H2u719Or/NStv9w7ZyjU8wO0vXYVLb/MHa1+/KKFFKHVAXy2s+w
k/1hE7K/qcngATtsXccWELwbg3srL+pxMYvEh90Z/Pei4B9VjiTfJ+fyNICf
zPunYirJU2QM/9eUZ5ODVGm+nO1/e7DHeHdqOvGR7XMbc3PAigpPOh+Rs/1s
jx5Nm/3OnOSJRGcNsP5aPShzMqkjsf1jReur52XE0joD2yc2aMK6gyOa6X0T
YPvBXBX7axP86OegnNaHetV2GPvC6C35nt0Y3PKYpk30D4J3Z/BlFeaOFt50
34WC7Rd6MSM6L6MzyY/YvqCN5+/IV6wgeRbb/3Pt5IPbC8h5MR+2r2aq5unY
be/puNeH7Z9ZHd5tjOtPcl6G7ZNxtMvOaqgj+zjkHLEINo3frjHnBvFdxOCp
xfzjleeJ73oMfnf7m9umTF+ZOYNrn/t4dE4NeR9LBp82Mz3sO+lDlrN9Gn6v
r9r2eEx/Tznbp7FvRd911yvIeSW276Lk2KmbEXfI+7D9ErVTPGVre5B5yvZF
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
ydIo7v1IFN4lUDMxY2+46/8ArStqcw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
nPqlP3j1GVKhv+51LqwPecUr97P/s/gfwS8xsQ==
          "]], Polygon3DBox[CompressedData["
1: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
fzoZJJc=
          "]], Polygon3DBox[CompressedData["
1:eJwt13nUVlUVx/HL814ckEGyQKYUWyEKuEIFCoeExFo5rATMYqEgILMCLoZi
MAaFJBMxGQQxEGQyQRAUMAZjSEATQUSZMWQuxRQUSvvsde4fv3X2/u59z3Pv
Pfvsc5+6nfq0frCUZdlcKk93l2XZhHJZtjjPsk4Cnake1h+biFXkV6K7sD9h
L2P38jvQL7GnsUVYR/591A6biGV0q6Erdin2IH+cvK+N39Bj2Brj+9jf5Kyl
K7HfYHtd9z2qhl2G9cXGyyvxy6gbNh2rQL+WNxjrjs3gX0DtsCHYKOx1/ruu
fZX/GlVlv4W1otnyDmBH6Qh9S+wdfHA8o2sns19h9xTrRb/HVmPbsTX8N2gk
tgLbgi3hL6U22FPYf81/C7XH7sTGY2f5ragd9j9sGdaYxmLzsJJ5VvKb0lPY
cqy9vEn8cnQb1h3rib3Ar0IdsOFYb2wOvyrdh43E6mJ9+E+aN+OXo4uwDthG
iJkdKZfuO+7/m+KddcvT88Vz5nlaq17G0/xTVI29HRthnMl/nr5y7VKsM3Zu
rCv7OprsN9YXaxxrXT7mxnsbL6YP2a1pWZSNOWpj+/i/otXYeVgdbH+sN63B
zsdqYDv5bWh5PF6sj/lXRZ3kaa16GmvjvdgH5FSlU+yv5HxJ1cXf54801qRd
7La0It6N656RM5k+Zy+K9yqnFu1l302r5J0r1pB+y58azyS/Bl2DDcMOy2lA
9bD5Zen3jso7wz9LjbDB2LNxD/xadAn7Y+xe2uDaKrHe+Cw6w34V7yJnNHsV
u36sRZae/dtYR/5mfiz7UfYX8Qz0HeA9/nDjd+kg+x5aL6+y6y6nAfxJYpXl
V4nax2ZjF1JHeSOwmlgP/p64N/qcXR27P/YHvwJ9wr4Y62rcwb+APmV/ib1i
bEiPYNPMdxU2hD8t1otfJ2oM64Jti/Wmf7NrYT2N+/gX0hexR+Uupq+LvdjV
HDvYo6PXyPkZ/Uj8BuyR2PfiTfnNoo/FGmNLsN78B+gPNJZOiL0Y70fsj/zH
6V/YX2JdsDH80XQcm4+1z9PaxRpuLp7n6jz1jughHxW/1QZ7qJhnNfsJsXHU
o5T29oGi97QWW8buzN7qGWrScfZrWKfoOfwadCz6nusq0LqidzfMUw1GLW4q
6qsxNpm9Md4fe7fYHnoG24Ttj7rm76N7Sqlv7S36/q1ia9kPsY/7zavi/BB/
Gxsa9cVvnqV1i/4efX5V0XuuyNN5EefGvuLMuA07azxDK4vzoT62lP1RxOOs
MV8l/if0Er8eDcvSu5pAT9NnYgujB+bpnIrzan1Rw43y1O+i760uzpErsQHF
NevYE8Um0V+xB7BDsU/pNPvyUtqz/xB7mN9EfoM4p2gLNhxrhm1lj4hncV1L
aiR+BdWnd8R+F/08T78Tv/cf7OXYS1i/osZW5am+os6uoatpm9goseZifYsa
W5mn2owabULX0ntFXV8nNrToDW+xZ4vNoUFF79qATeFPLaWzOs7s/cX5f7tY
9VI6czcWvewHWBt+a9qNjcNuwV5n92Yf9KzfL/rpnXJ+QbvEnuC3kjeweM71
eeqh0UuHFGfE5jz1suhpK7Du2G5zXUon2W9ig4yf8q+Nvi2vBd1EH4g9JnaT
OZazu7F3yrmk6C8/kdOSPhQby28h7xR7MbsBjcrSOziJLYh1poex8dgxbB7/
MhqIjcIWYh/wW9Ks4oxqUtTE9Dytc6x3c2wkdkJO4yytYdNi/WfkqW6ifhZh
u+Nd0jx55/CbFfX0vLyGpVRDLbAx2Ek5zejGYm/GHq0ib3Pco/F43DddxN6C
DTHe6NpH2XPYPyyl/vdz7HHslLl+THdE38T2YD+l+cVZtoB2xHujmVn6SLif
nuWfE+cjNCDqB5vCX+o34qOyD80rS98FR/J0vsY5O7Ysnfc7sHWl9C1wR1FP
C7C2/Ltoblk6mw7n6RvjdNGjo1dvL57nerHri33xQp7qP/bB7UXdvZSneo26
nY1tw26IszVL51/0u+h7lfPU8wYYp8l7O/YyTZB3KPZt7PvoqeIb8H7GQ/L+
HGca9ZQ3SPwINotfh/piw2IP0E6qlKde2z/OcnnPxRlJPeQNLM6aOHP+WbzH
tvLGsddFPcd3avRXOorNxerG/RbfdUuwA9GXaSFWkX+QpvGrUfdijQ5jM/m1
qQ82FJtelr5zD+apbqJ+ZpSl2vkYOxHnXPQibG30URrj2k3YlLJUdwfie6yU
vp/jHuNez8fWx3uIvirvzTj/aFyW3sfmUprjvDw9Yx9jF3lT2eXjXJTXX3x8
WXrnu6Oe+e/SzcWen5+nvR17vCL779EH6Lks5bUq9vyLYjeHT0+Wpfvalac1
jbWdhW2NeqKprv0MewPrxz8WPTxL/zX+Dw1dvFk=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0dkqRHEAx/Fj33fuTVG8A/cUNTP29ULcWpLiARTFO3BPUfZ9X5IkxCRJ
kmdQM/GZcvE9n1+dOud/OqGBkehwShAEE0pVcn+7VDDOhGrtKjerVW83sVkR
e5xDnOGspuwVrmrefmFMi/Yv17mhsOduMsItRrnNFu6wlbvcU5u9z3YesIOH
7OQRu3jME3Xbp+zhGXt5zj5esJ+XvFJJWhCsMeFccS3YT3zUnL3MJU3a0xzk
GEcVthvZoDo7xErV2D/eUc4yfalUn8n36UPFeleR3lSoAr0qXzHl6Vm5yTMp
Rw/KVpbulak7ZehW6bqRzwqu///nH69aO7U=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{487, 786, 486, 1056, 787, 488, 1057, 788, 489, 353, 490, 951,
        1161, 491, 952, 1162, 492, 789, 493, 1058, 790, 494, 1059, 791, 495, 
       1060, 792, 496, 953, 1163, 497, 954, 1164, 498, 793, 499, 1061, 794, 
       500, 1062, 795, 501, 1063, 796, 502, 955, 1165, 503, 956, 1166, 504, 
       797, 505}], 
      Line3DBox[{509, 799, 507, 1064, 800, 511, 1065, 801, 513, 1066, 802, 
       515, 961, 1171, 517, 963, 1173, 519, 804, 521, 1067, 805, 523, 1068, 
       806, 525, 1069, 807, 527, 374, 529, 968, 1178, 531, 809, 533, 1071, 
       811, 535, 1072, 812, 537, 1073, 813, 539, 1074, 814, 541, 973, 1183, 
       543, 816, 545}], 
      Line3DBox[{544, 815, 542, 1182, 972, 540, 1181, 971, 538, 1180, 970, 
       536, 1179, 969, 534, 810, 1070, 532, 808, 530, 1177, 967, 528, 1176, 
       966, 526, 1175, 965, 524, 1174, 964, 522, 371, 520, 803, 518, 1172, 
       962, 516, 1170, 960, 514, 1169, 959, 512, 1168, 958, 510, 1167, 957, 
       506, 798, 508}], 
      Line3DBox[{549, 818, 547, 1076, 820, 551, 1077, 821, 553, 1078, 822, 
       555, 1079, 823, 557, 978, 1188, 559, 825, 561, 1081, 827, 563, 1082, 
       828, 565, 1083, 829, 567, 1084, 830, 569, 983, 1193, 571, 832, 573, 
       1086, 834, 575, 1087, 835, 577, 1088, 836, 579, 1089, 837, 581, 395, 
       583, 839, 585}], 
      Line3DBox[{584, 838, 582, 1196, 986, 580, 1195, 985, 578, 1194, 984, 
       576, 392, 574, 833, 1085, 572, 831, 570, 1192, 982, 568, 1191, 981, 
       566, 1190, 980, 564, 1189, 979, 562, 826, 1080, 560, 824, 558, 1187, 
       977, 556, 1186, 976, 554, 1185, 975, 552, 1184, 974, 550, 819, 1075, 
       546, 817, 548}], 
      Line3DBox[{589, 841, 587, 1091, 843, 591, 1092, 844, 593, 1093, 845, 
       595, 1094, 846, 597, 400, 599, 848, 601, 1096, 850, 603, 1098, 852, 
       605, 1099, 853, 607, 1100, 854, 609, 1101, 855, 611, 857, 613, 1103, 
       859, 615, 1105, 861, 617, 1106, 862, 619, 1107, 863, 621, 1108, 864, 
       623, 866, 625}], 
      Line3DBox[{624, 865, 622, 1205, 995, 620, 1204, 994, 618, 1203, 993, 
       616, 860, 1104, 614, 858, 1102, 612, 856, 610, 1202, 992, 608, 1201, 
       991, 606, 1200, 990, 604, 851, 1097, 602, 849, 1095, 600, 847, 598, 
       1199, 989, 596, 1198, 988, 594, 1197, 987, 592, 397, 590, 842, 1090, 
       586, 840, 588}], 
      Line3DBox[{627, 867, 626, 1109, 868, 628, 1110, 869, 629, 996, 1206, 
       630, 997, 1207, 631, 998, 1208, 632, 870, 633, 1111, 871, 634, 1112, 
       872, 635, 418, 636, 999, 1209, 637, 1000, 1210, 638, 873, 639, 1113, 
       874, 640, 1114, 875, 641, 1115, 876, 642, 1001, 1211, 643, 1002, 1212, 
       644, 877, 645}], 
      Line3DBox[{649, 879, 647, 1116, 880, 651, 1117, 881, 653, 1118, 882, 
       655, 1007, 1217, 657, 1009, 1219, 659, 884, 661, 1119, 885, 663, 1120, 
       886, 665, 1121, 887, 667, 1014, 1224, 669, 1016, 1226, 671, 889, 673, 
       1122, 890, 675, 1123, 891, 677, 1124, 892, 679, 439, 681, 1021, 1231, 
       683, 894, 685}], 
      Line3DBox[{684, 893, 682, 1230, 1020, 680, 1229, 1019, 678, 1228, 1018, 
       676, 1227, 1017, 674, 436, 672, 888, 670, 1225, 1015, 668, 1223, 1013, 
       666, 1222, 1012, 664, 1221, 1011, 662, 1220, 1010, 660, 883, 658, 1218,
        1008, 656, 1216, 1006, 654, 1215, 1005, 652, 1214, 1004, 650, 1213, 
       1003, 646, 878, 648}], 
      Line3DBox[{689, 896, 687, 1125, 897, 691, 1126, 898, 693, 1127, 899, 
       695, 444, 697, 1026, 1236, 699, 901, 701, 1129, 903, 703, 1130, 904, 
       705, 1131, 905, 707, 1132, 906, 709, 1031, 1241, 711, 908, 713, 1134, 
       910, 715, 1135, 911, 717, 1136, 912, 719, 1137, 913, 721, 1036, 1246, 
       723, 915, 725}], 
      Line3DBox[{724, 914, 722, 1245, 1035, 720, 1244, 1034, 718, 1243, 1033, 
       716, 1242, 1032, 714, 909, 1133, 712, 907, 710, 1240, 1030, 708, 1239, 
       1029, 706, 1238, 1028, 704, 1237, 1027, 702, 902, 1128, 700, 900, 698, 
       1235, 1025, 696, 1234, 1024, 694, 1233, 1023, 692, 1232, 1022, 690, 
       441, 686, 895, 688}], 
      Line3DBox[{729, 917, 727, 1139, 919, 731, 1140, 920, 733, 1141, 921, 
       735, 1142, 922, 737, 1041, 1251, 739, 924, 741, 1144, 926, 743, 1145, 
       927, 745, 1146, 928, 747, 1147, 929, 749, 465, 751, 931, 753, 1149, 
       933, 755, 1151, 935, 757, 1152, 936, 759, 1153, 937, 761, 1154, 938, 
       763, 940, 765}], 
      Line3DBox[{764, 939, 762, 1257, 1047, 760, 1256, 1046, 758, 1255, 1045, 
       756, 934, 1150, 754, 932, 1148, 752, 930, 750, 1254, 1044, 748, 1253, 
       1043, 746, 1252, 1042, 744, 462, 742, 925, 1143, 740, 923, 738, 1250, 
       1040, 736, 1249, 1039, 734, 1248, 1038, 732, 1247, 1037, 730, 918, 
       1138, 726, 916, 728}], 
      Line3DBox[{767, 941, 766, 1155, 942, 768, 1156, 943, 769, 1048, 1258, 
       770, 1049, 1259, 771, 1050, 1260, 772, 944, 773, 1157, 945, 774, 1158, 
       946, 775, 1051, 1261, 776, 1052, 1262, 777, 1053, 1263, 778, 947, 779, 
       1159, 948, 780, 1160, 949, 781, 483, 782, 1054, 1264, 783, 1055, 1265, 
       784, 950, 785}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{201, 351, 1056, 202, 1167, 366, 1064, 231, 381, 1075, 1076, 
       246, 396, 1090, 1091, 261, 411, 1109, 276, 1213, 426, 1116, 291, 441, 
       1125, 306, 456, 1138, 1139, 321, 471, 1155, 336}], 
      Line3DBox[{203, 352, 1057, 204, 1168, 367, 1065, 232, 1184, 382, 1077, 
       247, 397, 1092, 262, 412, 1110, 277, 1214, 427, 1117, 292, 1232, 442, 
       1126, 307, 1247, 457, 1140, 322, 472, 1156, 337}], 
      Line3DBox[{205, 353, 206, 1169, 368, 1066, 233, 1185, 383, 1078, 248, 
       1197, 398, 1093, 263, 1206, 413, 278, 1215, 428, 1118, 293, 1233, 443, 
       1127, 308, 1248, 458, 1141, 323, 1258, 473, 338}], 
      Line3DBox[{207, 1161, 354, 208, 1170, 1171, 369, 234, 1186, 384, 1079, 
       249, 1198, 399, 1094, 264, 1207, 414, 279, 1216, 1217, 429, 294, 1234, 
       444, 309, 1249, 459, 1142, 324, 1259, 474, 339}], 
      Line3DBox[{209, 1162, 355, 210, 1172, 1173, 370, 235, 1187, 1188, 385, 
       250, 1199, 400, 265, 1208, 415, 280, 1218, 1219, 430, 295, 1235, 1236, 
       445, 310, 1250, 1251, 460, 325, 1260, 475, 340}], 
      Line3DBox[{211, 356, 1058, 212, 371, 1067, 236, 386, 1080, 1081, 251, 
       401, 1095, 1096, 266, 416, 1111, 281, 1220, 431, 1119, 296, 446, 1128, 
       1129, 311, 461, 1143, 1144, 326, 476, 1157, 341}], 
      Line3DBox[{213, 357, 1059, 214, 1174, 372, 1068, 237, 1189, 387, 1082, 
       252, 402, 1097, 1098, 267, 417, 1112, 282, 1221, 432, 1120, 297, 1237, 
       447, 1130, 312, 462, 1145, 327, 477, 1158, 342}], 
      Line3DBox[{215, 358, 1060, 216, 1175, 373, 1069, 238, 1190, 388, 1083, 
       253, 1200, 403, 1099, 268, 418, 283, 1222, 433, 1121, 298, 1238, 448, 
       1131, 313, 1252, 463, 1146, 328, 1261, 478, 343}], 
      Line3DBox[{217, 1163, 359, 218, 1176, 374, 239, 1191, 389, 1084, 254, 
       1201, 404, 1100, 269, 1209, 419, 284, 1223, 1224, 434, 299, 1239, 449, 
       1132, 314, 1253, 464, 1147, 329, 1262, 479, 344}], 
      Line3DBox[{219, 1164, 360, 220, 1177, 1178, 375, 240, 1192, 1193, 390, 
       255, 1202, 405, 1101, 270, 1210, 420, 285, 1225, 1226, 435, 300, 1240, 
       1241, 450, 315, 1254, 465, 330, 1263, 480, 345}], 
      Line3DBox[{221, 361, 1061, 222, 376, 1070, 1071, 241, 391, 1085, 1086, 
       256, 406, 1102, 1103, 271, 421, 1113, 286, 436, 1122, 301, 451, 1133, 
       1134, 316, 466, 1148, 1149, 331, 481, 1159, 346}], 
      Line3DBox[{223, 362, 1062, 224, 1179, 377, 1072, 242, 392, 1087, 257, 
       407, 1104, 1105, 272, 422, 1114, 287, 1227, 437, 1123, 302, 1242, 452, 
       1135, 317, 467, 1150, 1151, 332, 482, 1160, 347}], 
      Line3DBox[{225, 363, 1063, 226, 1180, 378, 1073, 243, 1194, 393, 1088, 
       258, 1203, 408, 1106, 273, 423, 1115, 288, 1228, 438, 1124, 303, 1243, 
       453, 1136, 318, 1255, 468, 1152, 333, 483, 348}], 
      Line3DBox[{227, 1165, 364, 228, 1181, 379, 1074, 244, 1195, 394, 1089, 
       259, 1204, 409, 1107, 274, 1211, 424, 289, 1229, 439, 304, 1244, 454, 
       1137, 319, 1256, 469, 1153, 334, 1264, 484, 349}], 
      Line3DBox[{229, 1166, 365, 230, 1182, 1183, 380, 245, 1196, 395, 260, 
       1205, 410, 1108, 275, 1212, 425, 290, 1230, 1231, 440, 305, 1245, 1246,
        455, 320, 1257, 470, 1154, 335, 1265, 485, 350}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
RRPLd+N1/Bttb7h1PRjerjCu/12KgZF0W4EcHB9uyD7R3LszEk50Ln52yAyC
933PVIjvfsKzBA2q+STSzVy+sZPrcXBAIvwewe8Z57vwti81351zYc/xSgcv
50RNF6w/SDbRRrByvXnzortieUw6bHGQNThhXpNknPv5Fiuyvd77be5NOlAe
zu81I/bVi28V60Os8ENT+U7Yw3TQpFoJscY8kSdt41nlYWS2l+/Rp5Z0GG6c
LrbEXCDkKOMo2w6UYa9cFPwjHWglt51uYi69Utya/3ybtECrJxQ5gfWnTZQS
cfL5rQ81zLMCKNbL94GYSQbw6fgHyBPyMmeodm8pQz+Zwh2KH2mQk719LwFz
L1mj3Tc5LqHwu8s9/vvSwSLqwdtIzF/K8O9mY58ipZxe1xaLxXmuWFcWMS8t
J75f18gvwfutXcM3E9Pg+cHyhwWYKzBt2gkIy8F++XoDuZcpkBBS3vcP86OD
rbVGL7igRYZf/lxnMjgJi7lwYX/WXzDWfXNGB8ieiUtq1yfAQPAfu3tEPOee
Ngojuwy6Ep2P63piwaaF/jEFPneGhx1jJc7rQ1ZQytDR0VDY50vx2g7zlvF+
lVd2eqBb5ebF5O0FnW666BXmqlUjuiZ+trA1f1YuMNgWOPUCO79hTvb//6x/
TrDITlNB0qLp9jZRNy3nCXz9E0R6diHo+s0mKqDaMP+Pi8g5HPvg19E8UXKC
MzxtDywclPqP97xIfS/N2kYa86hn3hdNA+i6+n/ckizR9KhAZLMw/VWecn9q
oNW//h/fS7otf8E+nOTfcaZv/TY1ZIbe+I/rkPfWiHDmN/swmcvkjFHD7yDd
//j3fK+LHBfKSN5vpOnUblLD2dX/ybtebXtXE+jX3HN+6ZclKzW8N7j1H29o
eczYfbWAlBK3X46UQAUGNLf/4/S8v1MH45+TqFc7d1bS7wKmyeD/+MHqgqct
9r0kf04Gs5Q95KBhXvcfp/kYY0Yb00dSL7tIxn9ridRyfvw/vhIdGl/E/Z6k
dzHZzajqM8mfff0/Hn74qVivaB4pljXGhOlbPam4f/s/TrvKuvlxVpd0Njpu
312K+6SV+f9xn/ZsUo7xVdL6qyariW+VpL8L/+NkVvdSl7ZukSb/9LevDJWR
wpf+x2M+u/IYvDMn/SXn3d3UW0QK//c/fsSiInZJLIo0pac1VluaQXLa+B9/
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
R0uTrUq+M5B7G1hwnfv/AK9VMfE=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{515.6588305261605, 418.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 0.25}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.113833826596853, 2.2550688520069775`, 1.3770878789107275`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637682621094537`*^9, 3.6637682850856485`*^9}, 
   3.663779694204867*^9, 3.663827008612703*^9, 3.66382808664681*^9, 
   3.6638281791930246`*^9, {3.6638286671169357`*^9, 3.663828686060274*^9}, 
   3.663837977795868*^9, 3.6638416458879967`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
nU1gsduQmHNeJ5GdTSDrSskhnWGRyM44LtP4vzljZ6zX+785Y2d8n3biYsbO
+P7m/zdn7Iyfa/l/c2k78a+8nfjXt534N7qd+Le0nfiXsfM32a2GCwd9Ziah
caNJduXlsfKVl7LRuNEqW39Mq+pAcQYaN9pk5zy/u/Z/nIPGjT+yGoOrWQ+M
stG40SAblXWn9sjxLDRufJc1nhMvnOOH46kWWeSXhu6znHLRuPFTdqi/ODGp
WzYaN37L7McPeT3n/VU0bnyV9Tk2xHTsxww0bjTK1NYlNc7sk47G52aZreO6
kY+HnUfj8w/ZnmNLP+t7n0bj8y/Zh53DYpYN2codn6lr9effufalOL7uALtk
woL9GxRcO8tVYPHC8/1vpCmQndWgzUU+c+57BdfO8o4Q8dbywUMDPH9WgvK7
6ft7Ts/l2lmuDDCnZ6x7Jo5nVeDUXqUFXnEoTpGrQuDkzSc6jcPz547QI/r7
44Onr3PtLOfBnF4r/124GcebyjDH62FwgeZVrp3lHeAXf0x6QdglZGdVgJ2f
LFz5Z7l2lquBWc/Dfk8rTyA7d4Km4E913z7ieZ0GBD7Iq1r6Dc3r5JoQuvum
5gkNHKd0geTuSQcPK1CcIu8Klx3roxPvYzt3gplh599NC0fzOrk6fO/X43XK
QTyv04SZB8u+RtZiO3eGhZEXxpaGYzt3hRmq7vNzRqE4Rc6H09ddzo0sxfGg
OjR2myd0HXEd2VkDdqg/73uLl4Hs3Bms5i5K8dNDcYq8C6yL8b0wIPM0184K
AVhfNr6vvhfFg3ItmP56SSZvOYoHqWv/1blJJ3bjOEUHbr0wXN2xGtlZoQMp
pUPkC7ajOEUugD1Pj8jXr0XxIGiBiofHpPOeOB7UhhVBAzumGqM4RaENPxb1
/5rZAcUpch2YsmxE8fttKE4BAfiH3fsccAbHg1qglNxkU+WA4hSFFlz5qL2b
l3WVa2e5NoTCTld9PTSvAx3wDTLxv3wuFtlZCMeeNoZmlGA768KvGJXXxjnY
ziL4XAtPD5TiOEUPYjTdBq5MRHGKQg92bex8uiATxSlyIaie9Clbeg/bWRds
tZSdVHxxPCiCqcFPBo4zx3YWweDO1VeSTVB7luvBRV7uklWLUZwCQpjin+V+
1BzHKboQ4Sx+E6+P7awLXuM7TowYhuJBuQiO2EfaxrihOAX0oOeS2tKbY1Cc
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
pJTN/8MEuatqGh2fApvPN6utrE7xoufJpWw+v2nyLkmTM13Pw2uif68W+O/2
NLkvIPm6P3T/0wG3AU+iZk4mefUOQPTJwset25tIe+gIRG9u37ym2Y7Ot8u7
MrxHndHb5bfymfuSq4bFkZBnEWQfmR7DP2lbG5spk/t3Z54b8CT0RPZEch8j
Ru8x62lEtw7kPmyeXN1j50UFyRtXGTN6k7qqGMNPRG/C6I+V2C194k30poz+
ncbDvmNLCDdn+KLKIp+VToRbMPza6qW6x7sRbsnwH4Zz5/9IIs9l89vRh11v
qpDzyqqsWbstkb85sZTUY7P57Vc2wc6KKLr9VNky+idG75QrNpN9vmx+O3lc
TfeLyvS4VGXH2iHW4tn8XvT3qJ7NY/dK3HUxNYHOk9Sz+epX6wWbf42n82/1
bF5ar1hjqJ0TnW/0YvPSHX9v8thxMIrWs3npuRoNv7/lk/NJWuirCCq2FWRq
zSDjA/kui2Cl4OeN9xmEazI8qblxTS2zjmPIcOO5t4/+CSB6Y4avGTj92PMW
kmczZfgUr0W+w4XkPtYM39vrY2uICrmPLcP3fwqLer6WfB/tGL6406yatktk
XsHmdXs8KxYbPKfzWnI2T1sfKNulspHkSej9+CCGE3Y5P93fk3zdD/r/GUCI
6yu7oaEkX0e+vwawZFh8etJXkmfrzPDCP73GO96h9XJthmd9cb/xuwftR2Dz
ohm7dz7qLSLfd0NG32vgGMEXO/o+YMzwbfdX3wom+9rAlOFxTpF+RY1kX4Y5
w29kzo4rfEbX20vZfCPP8erk3PHkO2vN6Et+H1s/cT/9XmDL8C39Pkc9cqK/
v2DHcOM9N+KN7tJ1odFsnjA6bFnO7ln091fA5vFcjE/cemVO5+ui2Txei+vX
6Pceh2XK/wO+0f1JAuvFlpddmTxbG301AnWnS2kJTJ6N/m5S3CbrsuirD8nX
dWH49/FVue/zyf41HYbPrLjlkzG2H/M8cjUsHu/n0zSGeR659hxo8Gz9Wzo/
48Xmu8Y335be06HzOXJjRu9ycaTXRns63yU3ZfiTpV2DijTovJbcnOEf/d8k
hfWk81dyC4ZHCbOmCxR0nsqLzTst9UmNCA+j805ya0Zft+XZ3XW3B9B6Nu/0
7/wD6aPDyO+0ZfR7tZXDs/440NyO4ZLEN68jSX5JweaR2vZM0vi9ms4jKdh8
kestI4eLK2m9PZv/KdIdnbuF5H8UbP7HOYuXHv+a5H++0+1CCh936SYt+k7y
Cb/p/2cM4sWvh7T9S+cf5MpA9E71E78auRI9+T4aQ6FId/q7HiRf0ZXh/qFu
a8beovMSch2Gp2x7s69uMuF6DLdfumOdKeHQnXlu1QVrvxvd6efKjRh9L+X7
ix360c+NZvMqXTpkdx8YLGDeh1zvhHwVqUXS91eYMnyL3o5d2WZ0/kdhzvA3
NhlzVTvSdXcKC4YvNysqNuB/pp/L5jf8He1nbXlF5zcU1oxemqTb5UH+C1rP
5jdebTz7YGoOqde1ZfSjjZc8LhxF6mzZ/MaqzWXm/0bRcbHCjtEXpz6aWRWX
/R9exeYxKu5lffs0jc5LVLH5Cv/Pb1de+n6V5mxeouHjttWrLtB5holsXuJ1
7oCGrAq6DraKzUvERX06vjyK5B+a6e8wyifI6fkVzj/INRjOyTMoujOckx+o
aic/QP1Nrvv/Oz9Q1U5cX9VOXF/VTlzv2148Xs9814a/6WN9WYTrsgzg4oRp
Wl0V9LgKov/ch4pPa11ivbseJ98RA4YHXhxUG7mKnp9ILRg+oPnGrG8r6O+v
1JLh1TtGT8pSkLiYrTu12Rznr/yJXjePYOtO9969f3nuSLIOTvYzKsHojE3u
sJGsx3VieHpArfk0dRLPsnWey3LN5jbVk+8pW88549vDklOnyPkz9Pv+jR8b
7hzzKSL3Yes5XXovb93+hOgNGH2yfZFHdg7ZX2PC6BMU32a+9iDfU7au8tRC
f0e/FHKuDls/GfPiZWpSIrkPWyc5dkewu+0nEs+S/Qiq8GXG4aaB/uT+bB1j
n32j3nUeSvZFsvWKwvsCoxVatP2lbF1i/rrngiJyToiUrT/cEHm/380t9Hc5
ja0/fLSyaefxMFKPpA7kOlLVp8UjlszrtBgeUzNQNfYO4boM/zZh2YWI54Tr
M9y0PMT7WQCJQ8m+vC5w6dDzyCl5JB40YfRhDqfjnXYRzta/pR+rXjB7I/Ej
W+c2wzY7qIbUAcrZerZZO2/Yp5STOJTYuQtopkQITAaTOJqtH1tl1PbzcCHZ
N8TWiTmXnL/qHknPQ4CtBws6+HN5l3KyL4m2D3UdH+ku+7OTxFm6DA9ao6ZV
Ekfibn2G9/JILlWZQuIXtl7oav/Y0zYk3lGwdUFj9H4Mr3xL8j9s/U/PkpXd
Js8m+7nYupqejabvxrbR7ceLrZ+Je5k+te0K/V5ebJ2M2ZOv8eF3ybyX7CMW
gWeU/j9Pa4l/RQz/ec0jaMc4Mv4YMLxqQ7b5RKYO0ILhR22upLmtItyS4edV
PApnmhE/snUaA1MLlNuMyHlHbJ2GZ4mbjpYpPU+Ws3UXldbPXnUzJ+MDW19x
T/3AtgH3SD9l6yjelORd1HEk/ZStl9henud9TEDaGxlPDCD/5Ro1AzMyP2fr
JRIjJjbVfCbPNWD0P3rtqpE9ouf5Urb+QcXE3t7VneynM2H4zPjOlt9OEM7W
M2RsWjTknRJtHylbtxA3L6Xw6Vzy+0m+xQAcP0ZG6mqRuICtW5i/unZeUH9i
B0tGbzVDTVKzjPxOtq6ghtdc5nmSjgsEbP3AjsvGZQ0Kul0J2DqBqz8D9E44
0P1IwNYDdLyumdbyns6rRLP1AD7jdsYOu0DON6PHf2o+OXSqy/MBp+l1cwW7
bu4rcklItaLXzRXs+njx6byh5WR9XMGugydnnCgc0Yes25J97tS8PSx4VbUv
Pb/1MmH0/j1fL/zUSq9Te7Hr0flLihUHyHq0F7vubDS7j1dxZ3rd2YtdX15x
NmCb+St6fVlO2rkR3OFFLfjsQ68ve7Hrv5WJAcMzyPqvPbvOW8ffHdGfrPPa
s+u5VntuL64i67n27Lqt2Zn74cy6rYJdtxX3jZ02iKzbyulxnppfqd4unutJ
1hlBi+FWboaLHo8hXJfhc20WV77YRK/rgT7Dx2UsDeiYSebJZH+fMVg5Kh8+
tJhef4xm1wfFvzXPnvyHvk80uw744XzMgO0j6XXAaHa9z/dsR9HHux3/wyey
62hS/SPZ0dfoeddEdr1syIBFt99MI5xdF7M/GF5+ux+9zqWg35eaX13973Ul
hS7DQ/97XUmhz3DOulJVO+tBVe2sB1W1sx7k2856jS+7XiP47/Ua5lyIVlmd
aKS9/jx87l+rrEPYCvvafficvVbZcuvn3onn6Xkgc55Dq2zQnH5rQ6tJHRG7
npJtEOSrPQWfb9YqqzhetX6CMcnDsPuV6uMm5abuQvtSKT4+x834kSWdJ2HO
AVCFCXWiiFFMfbgGw+UD+jzgP8fnLajC07X6aYbk3ABm36gqLO68uKi4TMF9
L4pvb8krKR+Mznmj+M5W3ga3bHz+khJ41nRM6foSnddH6Rf4rYrVkqJ95RQv
rP9cG2CCzmWiuGnt+uwoG3SeG8VLhk0rv7LuLNcO1LxizNUMuRc5F4KxTxdw
KimMdsjOR/bpAvM1l9btcUD7yin+omlBenUoOieB4mf7X9PwLc1H7UEdejue
jTyegM5JoPQdkg+fuy9E+8opfqDHsu+1zeicBIr3mzqo4XQoOv/q7+8ftPil
5b48ZGd1eKgTWrl9H2pXlN5XZ8Qal4fYzl1ATfw5WmSD9pVT/HH+pitLyDnt
0Ww+vzzilXuPbri9aUFBSapgxt0CLlfowD9i93vDd6Pz3CgO2+ZaXZOh89wo
Ls97u/LKEHROAsW75E1dadgNn4egBQ6dnb7LUpD9Kf0CpeODgsk+F8bOWmBx
fma/0mBkf0rvdX/z8BbmfAY2fw5fFwX4b8T7+nUg2szhkIkJOj+B4gZ3r1eY
hKPzE6jn3u/btGjZEOQXSv9wyxWnAHIeu5zNh8d83JubPyGHyyl9i/bgyc6P
8DkAOjBO27B+nhydA0BxRVmhoHIoOgfg73tp3/2prI3P0RLBJS+roXAU9QuK
/6vk7jbbAdmf4hN2tcRes8HnE4ogPzG4y5zH+FxBEfRQM/B/aITel+KdEl5I
7ffhcwVFoD3xo/G5rpmovRmA7HW2ytVPidzfSXG7nzvrUhOTuO3qb91s2Au7
lJTzqP0YwNiSyrn+AcmonRjAExj1euGXdG57oPgbt1/xh40uIP9S+kDhYtna
s8iPBlA5JmHvBptLqH8ZwNyfttsmDLqE7G8EDc+sRu811kL2N4I5b+Z42nzA
55gZAeSUe+VP6YfavwRCH6/l15D8KrD1hJf7PQ9aReoJGX8ZwaBJ8pCzOsB9
X4qXNxVarrY8ym3/FC87FTDzn/xhqD1LwGKsOLVfgivyuxEc7HB1cOPo3sjv
RnDrRkDoWZIv9WXzpW86BwVt8RvEbc8Uj855cl5B8qXEbtQ8ZHFBwuP48QIu
/1t/NXi3achodP4exQ2dpwTcNGni7k//y/XTRun4kPorNp/p7rLn1pfhJJ/J
5iddN6196BEmQPY3hnPDwvbfX0LymSYMn752lIpJF3J/Nj8Zpu1/Z3JpA3d/
OsWbaja+asj/zN2HTj1X75ZbhW7eTy7/mx8tvjAwLPARd3/63/q06RffHj9W
weV/65GmlE5t0s3h7lun+MQFC7qMfZrF3bf+155+3Wpujsvk7lv/mzcuumm6
/t4l7jzqf9UptZMnhHbygcRuOB8obSfvJ2+vnoecm9EqE2psfbliNz4/uVXm
aDuCf3vONdTOW2WTbty68UGd6Nl8XW7JpnreW3S+DcUjnlQcbItD51T83Z8+
4ZGwpRGdi0XNi+SmDduVkvG5WEoQK4GyF2ponkbxeb1d/UPv4HOklWDfrxeH
q0sQp+ZFc2ZoHLl9F52XRem/TFW/PL4anVdG6bVXJ/465Yvme5R+5Q7LNevC
8HlZSvD1955BXg74XF8lsJxUN0RFnovspgTeVYEzO4Vc43Lquf19I1suPEHf
u7/5Pd/slunX8DnMSnC03/Udl9fi85aVYP36iZreifhcZSW4v3xWX93oCC6n
nnt1X6yxVcAxZH91uHuy4Z+bGfgcVHXY1GlZ5vxsfL6QOnx/bzc4tgyfg6oO
d7oMcZzliTg1j6oRni67QO7D2Fkd2pICRo9Yi8/LUodLY73vVL/DdlaHHuU/
nPmn8XlZ6tDFtLCbB7Muz+br3PlaicVk/5ovm697+cQzXPsXPidZHUap2zjD
mXPInurw8cyhn/29o9F3Vgu+7NmZEjoZzd8onuXAXy3/is8T04LJ2SEGxfvQ
uVUUNzg6JCNQG827KN5tY/nJ/aXofSn++8VX9+fF6L0oHlhStkAWgs+h0oKM
hBc3ii/h87604NmYgP1J6rHI7yIYZzk/M70Z+10EJeXdcwZY4fOcRbBC2yc7
Sg39/r91AvFVpd4+2F8i+PBF78OSm3nI/iJINU2140/H582KoPnkMsWmLeh8
IRDDM8PNIYMGobiP4nZP8uDnW3RePcXNsiPuLeqLztmjeMKU84P+tOHxxADa
1i8PqxMlc9+X0od2Gh4wiuzPYvxrAFF6Z0YMdCHzMTZf55Xr8zR+DBpnKO5X
P9yjxxcUV1JcY/blCwcyUPun+LChr7UbctC5iNRzF6q4btz5Iplr57/7vAa6
fB67Ep0zT+lrHiwea1CfyB1/KP059UNLA1syue2K4n8afI6t347Og6J4uPxb
h3cN+DwoMaz3vGWpKYlH7c0Adlxq2jwq5AyKjyQQ76bz/WuQI4qPJBDtM9h2
nPJmrl8ovm5suMmt+ECu/SmuLPqx7fH7sah9GsHxl7O8d6WheSClX35j0Uyj
Xf+gOEgCgbp7n/bww+dBSaDo8Jsdx9XmoThIAnOC4mV+Xh6onRvBSbNO8T/L
hqG4RgIJG4fGXa3G50FJ4FDbxOQbXodRXCOBkJPDdeTZ6Px2inv4OpRu9cDn
UlLzz8w2de/KXVw7U/OiRtvO9WURAq6dKT5/zLYvg4UCrp0pXlHo09GK5PGI
PSlu8tulUD4YcWpeJN+S1/1Wn2bufI/Sq5iMfeDp0IVrz7/7FNbv3a8yrRPX
bn/zbA/859g97sC1D8WFGX7b5597xp2nUfyps6JKT/iEO0+j+LZTiwrvWTzk
znup+ZLy8LLOJuHPuPMlivcxzenR4yzJ13Vj+IXzqjNVNr7kvhfF76b5T3V3
esSdx1LcxeHbm1XCUmfOe/29f6JzStaBdO7vp/iN1pWZ7i37uL+f4s3ZDtNv
jdzl/P8AEOaMlQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Z3qmXe2Dzs1Mr9oFnaeZvv0fYvc3ug==
          "]], Polygon3DBox[CompressedData["
1:eJwtmnfgz9UXxt/ve98kLYSSlJWGnZmQUKFSSZuGNsooDSojFSkp7YGQEErR
oNLU0NBASlIkZWXEr+n3vDz3j/P9nnPvfe9zz3nOcz7VevTpcm3Isuw5/Sn0
f2/9Gab/R+dZtlJ6lAyQfaTsJdL3kdwuu5HsH6RfIDlI+iUau07n2Ff2cOmN
NbZK+t0xywbLHiJ5R/NlNHaX9Kaa/0n6Yxp7VHKz1g2UBI1dr/kjNP+19Csk
daXforGxWne/1twh/U7JZ7JLaf5W6fW05lvpe0mGym4o+3vpNbW+guyKkqD1
t8nuJ72/ZIrsXbL7Sj9M67/Q+n9kXyu7huzPZG+XfaXsKrIXyv5Xdh/ZNWV/
Lvtv2dfIri77U9l/ye4tu5rsT2T/Ifsq2YfI/oBnk3257Csko3X9PrK7S79Q
chffQGtukH6U1i+VvlnzF8iuIPtt2Vtl95BdWfZ7sq+TfansyyT36vht0ec+
WPPva35L9LfhG70rO+cY2YfL/kr65ZI60gdp7H4d/4vWnyS9pMZe41vLvlH2
TZIXNb9cMl7655pfq/k9JbfJri/7O+kv8k5kHyPppLXPBH+v+Zr/UnMddb4x
0jtovGOw/pfmm2cee4lvIL2F5BTZI2SfpTUvyP5b9hy+gfRjJZ1l/yp5VvrX
WrNec3/K/p/kTvxMMjb3Maw9TXKqrn+K5HTpZ0jm4vRac7z+nS/7RM2dIGkv
/QTJVM3/rrk6kgayZ8h+TtJUejNJB96X5ETpJ3EN6Z0lXaSfyTW4luRs6efg
f5Krda5ndM03dZ4umntI+rkaPy9Y36X5NpnHftP8qdL30vjrWn+lpEHu/fSE
5i8q7Gv43FDZpbV+vvTVGtuuuUc09jDvRON/ci3pD0p2SN+J7xTea+y5kRrv
Udg38JERsj+VPCb9Y439WHiPcm32NHv3D42Xkt5b/4/S/B6F9yp7drn0koV9
Cx/7Rvolklq59x/+vpZ3J72Exl7VXPfCvosPD9T89Nx7kT15O/td61+T/qPG
tuJ/sufJ/kn2NtkXFt6r7NlbtL5b4b3Cnhkg+23JWOnva2yF5mbLHiX7LdnL
ZN8o+wbJlezbJOwt9hhzFxfe6+z5YSlu9cr8/h+XvT8xD//Xmp8Lv2e+96Gy
P5S9UPYB+KvkUdmnSvbTXNfM33+p5mtn9jl87wvZNaSvk0yS3Uz2kcQHJPk0
vo1P49tfS2ppbhPxTeubyD6ceIpo3eeyq0pfI3la8x/KriT9G+5f9nLZ9aRv
y+znn8k+lPcrmSD7U9mHSF8lGV94v3SS3lHSTuf/SvZh0jfg45qvJ7sa8ZGY
xH1qbF8975mZ98Mnmq8ifaVknOY+ln2Q9G8lT8o+UnZljpWUSXuKvdVJcydL
vtR8Tc39Jpkse1n0Xt0imSa7g6S0rndK5njzrubLSl8veUhz78jem/0ieVB2
Ddn7Sy9PWND692SXk75R8jDfqnCOI7exH9jzJ6Y4dlJh2VP6yZnniCG7Ywnv
KsWjvSWdNX+qxhfo/CWkLyP+av796Fz1peQR2R/IPlD6Uvab7ENl7yN9X+Ih
e0p2XelbJdMLv9OzUxzhXeMTp2vutMy+Uln2Hpn3LHv3LdklpS+XPFD4noi7
P0XfK3Gjp+aqSv+YWCi7m+yKst+RPTU6Pjwu2aHjDtPYDOldNL9T+qPR++se
vqnmX5f9kvQ5kgN4tvS85OjN5BzZM6XPkpTF93WO6dJP19wfxA72rOyzuTdi
FTkHX5L9J/s/2hfxyd663puy34jOuwPwfa2ZrLmTU/x4W2N7EU8kY2WXk4yU
3lzza6SXlYyQ3Uz2avJX4VhMTD5Z569JPpB+hsZ2SF+n83WQvYfsebJfjs5P
U4nh7AWNPSP9lBSvqkum4AspXh/MO2Mvyd4k/TJJbekDNXafrjc7Ov9OkAT2
iuYfln681myQ/mu0r+Pz88mdOqZrcE4iNx2isafwTc3/TqyUPCn7RNmbC6/p
wvNkPrYyOUR6W81vTHtun9xr2It9JADIczV+nuRxHX+v5kZLVmh8fbSv4/Nv
4L+ScbI7yN4i/enoePwge1jrD9TYA9Jba/436S9p/mnZEyUFsVNj90tvpflf
pVeUjJHdUvY69qbWLJC9NvnL+ZJK0i/WWD+dv4Ls+6Qfq7FfpA8O9u8pshfI
bp3wQBv9axicP8E3czX2keZGSc6V/nK6nzGyLwVbyS4XHZOJzXdo7NjCPoVv
EWP+zB1jiDXs4b9k5zomi/6uLybc0Jr3kTvGNZfdQPbd3FPhNewd9hDH7sod
76/PHc+y4Hg/IHe82pY7nvbMHV+2546nvXLvd+6pquw+ue91vf5fBrbU2P46
/30a68FeT/txn+D8cLPGnij8DMT3vunZ7i68F9mTu7T2HvxC9iuyS+r40exR
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
kaElGQ==
          "]], Polygon3DBox[CompressedData["
1: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
dWbuf6S8x3M=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[
        Polygon3DBox[{{201, 121, 202}, {204, 121, 201}, {207, 121, 204}}]],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0VkuQ2EAhuGjVfM8xLU7EnbAHlRIzEOpS26JLbAHtmCqqTUPiRAiIgiN
iIiI2ILnDxdP3689TXr6n+bUTPd0QRRFs8QI+8dLoxb6IEGr3abtdNo92kvS
nte0ZuNRlOPSvuKaCzZcz7Bov2ieZTvhu+vhOn1+L6P9uqkDuqWDuq1DuqO7
DNtZHdGcjuqejum+juuBHpKyj3RCj3VSTzStpzqlZ3pOk/tZ07jGWLKf3Osj
C/aqrsT+zmlRJ3UuvKfLTobSYbdqSxDOUxu0nm/q+KKWT2r4oJp3qqjkjQpe
KSdPGc+UhnujhGIeKOI+nCt34dlxG/4PN//P9hd0mjqf
       "]], Line3DBox[{202, 121, 207, 204, 201, 202}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{495, 792, 494, 1064, 793, 496, 1065, 794, 497, 361, 498, 959,
        1169, 499, 960, 1170, 500, 795, 501, 1066, 796, 502, 1067, 797, 503, 
       1068, 798, 504, 961, 1171, 505, 962, 1172, 506, 799, 507, 1069, 800, 
       508, 1070, 801, 509, 1071, 802, 510, 963, 1173, 511, 964, 1174, 512, 
       803, 513}], 
      Line3DBox[{517, 805, 515, 1072, 806, 519, 1073, 807, 521, 1074, 808, 
       523, 969, 1179, 525, 971, 1181, 527, 810, 529, 1075, 811, 531, 1076, 
       812, 533, 1077, 813, 535, 382, 537, 976, 1186, 539, 815, 541, 1079, 
       817, 543, 1080, 818, 545, 1081, 819, 547, 1082, 820, 549, 981, 1191, 
       551, 822, 553}], 
      Line3DBox[{552, 821, 550, 1190, 980, 548, 1189, 979, 546, 1188, 978, 
       544, 1187, 977, 542, 816, 1078, 540, 814, 538, 1185, 975, 536, 1184, 
       974, 534, 1183, 973, 532, 1182, 972, 530, 379, 528, 809, 526, 1180, 
       970, 524, 1178, 968, 522, 1177, 967, 520, 1176, 966, 518, 1175, 965, 
       514, 804, 516}], 
      Line3DBox[{557, 824, 555, 1084, 826, 559, 1085, 827, 561, 1086, 828, 
       563, 1087, 829, 565, 986, 1196, 567, 831, 569, 1089, 833, 571, 1090, 
       834, 573, 1091, 835, 575, 1092, 836, 577, 991, 1201, 579, 838, 581, 
       1094, 840, 583, 1095, 841, 585, 1096, 842, 587, 1097, 843, 589, 403, 
       591, 845, 593}], 
      Line3DBox[{592, 844, 590, 1204, 994, 588, 1203, 993, 586, 1202, 992, 
       584, 400, 582, 839, 1093, 580, 837, 578, 1200, 990, 576, 1199, 989, 
       574, 1198, 988, 572, 1197, 987, 570, 832, 1088, 568, 830, 566, 1195, 
       985, 564, 1194, 984, 562, 1193, 983, 560, 1192, 982, 558, 825, 1083, 
       554, 823, 556}], 
      Line3DBox[{597, 847, 595, 1099, 849, 599, 1100, 850, 601, 1101, 851, 
       603, 1102, 852, 605, 408, 607, 854, 609, 1104, 856, 611, 1106, 858, 
       613, 1107, 859, 615, 1108, 860, 617, 1109, 861, 619, 863, 621, 1111, 
       865, 623, 1113, 867, 625, 1114, 868, 627, 1115, 869, 629, 1116, 870, 
       631, 872, 633}], 
      Line3DBox[{632, 871, 630, 1213, 1003, 628, 1212, 1002, 626, 1211, 1001, 
       624, 866, 1112, 622, 864, 1110, 620, 862, 618, 1210, 1000, 616, 1209, 
       999, 614, 1208, 998, 612, 857, 1105, 610, 855, 1103, 608, 853, 606, 
       1207, 997, 604, 1206, 996, 602, 1205, 995, 600, 405, 598, 848, 1098, 
       594, 846, 596}], 
      Line3DBox[{635, 873, 634, 1117, 874, 636, 1118, 875, 637, 1004, 1214, 
       638, 1005, 1215, 639, 1006, 1216, 640, 876, 641, 1119, 877, 642, 1120, 
       878, 643, 426, 644, 1007, 1217, 645, 1008, 1218, 646, 879, 647, 1121, 
       880, 648, 1122, 881, 649, 1123, 882, 650, 1009, 1219, 651, 1010, 1220, 
       652, 883, 653}], 
      Line3DBox[{690, 899, 688, 1238, 1028, 686, 1237, 1027, 684, 1236, 1026, 
       682, 1235, 1025, 680, 444, 678, 894, 676, 1233, 1023, 674, 1231, 1021, 
       672, 1230, 1020, 670, 1229, 1019, 668, 1228, 1018, 666, 889, 664, 1226,
        1016, 662, 1224, 1014, 660, 1223, 1013, 658, 1222, 1012, 656, 1221, 
       1011, 654, 884, 957}], 
      Line3DBox[{695, 902, 693, 1133, 903, 697, 1134, 904, 699, 1135, 905, 
       701, 452, 703, 1034, 1244, 705, 907, 707, 1137, 909, 709, 1138, 910, 
       711, 1139, 911, 713, 1140, 912, 715, 1039, 1249, 717, 914, 719, 1142, 
       916, 721, 1143, 917, 723, 1144, 918, 725, 1145, 919, 727, 1044, 1254, 
       729, 921, 731}], 
      Line3DBox[{730, 920, 728, 1253, 1043, 726, 1252, 1042, 724, 1251, 1041, 
       722, 1250, 1040, 720, 915, 1141, 718, 913, 716, 1248, 1038, 714, 1247, 
       1037, 712, 1246, 1036, 710, 1245, 1035, 708, 908, 1136, 706, 906, 704, 
       1243, 1033, 702, 1242, 1032, 700, 1241, 1031, 698, 1240, 1030, 696, 
       449, 692, 901, 694}], 
      Line3DBox[{735, 923, 733, 1147, 925, 737, 1148, 926, 739, 1149, 927, 
       741, 1150, 928, 743, 1049, 1259, 745, 930, 747, 1152, 932, 749, 1153, 
       933, 751, 1154, 934, 753, 1155, 935, 755, 473, 757, 937, 759, 1157, 
       939, 761, 1159, 941, 763, 1160, 942, 765, 1161, 943, 767, 1162, 944, 
       769, 946, 771}], 
      Line3DBox[{770, 945, 768, 1265, 1055, 766, 1264, 1054, 764, 1263, 1053, 
       762, 940, 1158, 760, 938, 1156, 758, 936, 756, 1262, 1052, 754, 1261, 
       1051, 752, 1260, 1050, 750, 470, 748, 931, 1151, 746, 929, 744, 1258, 
       1048, 742, 1257, 1047, 740, 1256, 1046, 738, 1255, 1045, 736, 924, 
       1146, 732, 922, 734}], 
      Line3DBox[{773, 947, 772, 1163, 948, 774, 1164, 949, 775, 1056, 1266, 
       776, 1057, 1267, 777, 1058, 1268, 778, 950, 779, 1165, 951, 780, 1166, 
       952, 781, 1059, 1269, 782, 1060, 1270, 783, 1061, 1271, 784, 953, 785, 
       1167, 954, 786, 1168, 955, 787, 491, 788, 1062, 1272, 789, 1063, 1273, 
       790, 956, 791}], 
      Line3DBox[{958, 885, 655, 1124, 886, 657, 1125, 887, 659, 1126, 888, 
       661, 1015, 1225, 663, 1017, 1227, 665, 890, 667, 1127, 891, 669, 1128, 
       892, 671, 1129, 893, 673, 1022, 1232, 675, 1024, 1234, 677, 895, 679, 
       1130, 896, 681, 1131, 897, 683, 1132, 898, 685, 447, 687, 1029, 1239, 
       689, 900, 691}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{209, 359, 1064, 210, 1175, 374, 1072, 239, 389, 1083, 1084, 
       254, 404, 1098, 1099, 269, 419, 1117, 284, 1221, 434, 1124, 299, 449, 
       1133, 314, 464, 1146, 1147, 329, 479, 1163, 344}], 
      Line3DBox[{211, 360, 1065, 212, 1176, 375, 1073, 240, 1192, 390, 1085, 
       255, 405, 1100, 270, 420, 1118, 285, 1222, 435, 1125, 300, 1240, 450, 
       1134, 315, 1255, 465, 1148, 330, 480, 1164, 345}], 
      Line3DBox[{213, 361, 214, 1177, 376, 1074, 241, 1193, 391, 1086, 256, 
       1205, 406, 1101, 271, 1214, 421, 286, 1223, 436, 1126, 301, 1241, 451, 
       1135, 316, 1256, 466, 1149, 331, 1266, 481, 346}], 
      Line3DBox[{215, 1169, 362, 216, 1178, 1179, 377, 242, 1194, 392, 1087, 
       257, 1206, 407, 1102, 272, 1215, 422, 287, 1224, 1225, 437, 302, 1242, 
       452, 317, 1257, 467, 1150, 332, 1267, 482, 347}], 
      Line3DBox[{217, 1170, 363, 218, 1180, 1181, 378, 243, 1195, 1196, 393, 
       258, 1207, 408, 273, 1216, 423, 288, 1226, 1227, 438, 303, 1243, 1244, 
       453, 318, 1258, 1259, 468, 333, 1268, 483, 348}], 
      Line3DBox[{219, 364, 1066, 220, 379, 1075, 244, 394, 1088, 1089, 259, 
       409, 1103, 1104, 274, 424, 1119, 289, 1228, 439, 1127, 304, 454, 1136, 
       1137, 319, 469, 1151, 1152, 334, 484, 1165, 349}], 
      Line3DBox[{221, 365, 1067, 222, 1182, 380, 1076, 245, 1197, 395, 1090, 
       260, 410, 1105, 1106, 275, 425, 1120, 290, 1229, 440, 1128, 305, 1245, 
       455, 1138, 320, 470, 1153, 335, 485, 1166, 350}], 
      Line3DBox[{223, 366, 1068, 224, 1183, 381, 1077, 246, 1198, 396, 1091, 
       261, 1208, 411, 1107, 276, 426, 291, 1230, 441, 1129, 306, 1246, 456, 
       1139, 321, 1260, 471, 1154, 336, 1269, 486, 351}], 
      Line3DBox[{225, 1171, 367, 226, 1184, 382, 247, 1199, 397, 1092, 262, 
       1209, 412, 1108, 277, 1217, 427, 292, 1231, 1232, 442, 307, 1247, 457, 
       1140, 322, 1261, 472, 1155, 337, 1270, 487, 352}], 
      Line3DBox[{227, 1172, 368, 228, 1185, 1186, 383, 248, 1200, 1201, 398, 
       263, 1210, 413, 1109, 278, 1218, 428, 293, 1233, 1234, 443, 308, 1248, 
       1249, 458, 323, 1262, 473, 338, 1271, 488, 353}], 
      Line3DBox[{229, 369, 1069, 230, 384, 1078, 1079, 249, 399, 1093, 1094, 
       264, 414, 1110, 1111, 279, 429, 1121, 294, 444, 1130, 309, 459, 1141, 
       1142, 324, 474, 1156, 1157, 339, 489, 1167, 354}], 
      Line3DBox[{231, 370, 1070, 232, 1187, 385, 1080, 250, 400, 1095, 265, 
       415, 1112, 1113, 280, 430, 1122, 295, 1235, 445, 1131, 310, 1250, 460, 
       1143, 325, 475, 1158, 1159, 340, 490, 1168, 355}], 
      Line3DBox[{233, 371, 1071, 234, 1188, 386, 1081, 251, 1202, 401, 1096, 
       266, 1211, 416, 1114, 281, 431, 1123, 296, 1236, 446, 1132, 311, 1251, 
       461, 1144, 326, 1263, 476, 1160, 341, 491, 356}], 
      Line3DBox[{235, 1173, 372, 236, 1189, 387, 1082, 252, 1203, 402, 1097, 
       267, 1212, 417, 1115, 282, 1219, 432, 297, 1237, 447, 312, 1252, 462, 
       1145, 327, 1264, 477, 1161, 342, 1272, 492, 357}], 
      Line3DBox[{237, 1174, 373, 238, 1190, 1191, 388, 253, 1204, 403, 268, 
       1213, 418, 1116, 283, 1220, 433, 298, 1238, 1239, 448, 313, 1253, 1254,
        463, 328, 1265, 478, 1162, 343, 1273, 493, 358}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm], None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{515.6588305261605, 418.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 20.}, {1., 10.}, {0, 0.25}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.113833826596853, 2.2550688520069775`, 1.3770878789107275`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6637682621094537`*^9, 3.6637682850856485`*^9}, 
   3.663779694204867*^9, 3.663827008612703*^9, 3.66382808664681*^9, 
   3.6638281791930246`*^9, {3.6638286671169357`*^9, 3.663828686060274*^9}, 
   3.663837977795868*^9, 3.6638416459200063`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 1127},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 212, 4, 90, "Title"],
Cell[795, 28, 1014, 23, 106, "Text"],
Cell[1812, 53, 4637, 152, 315, "Text"],
Cell[CellGroupData[{
Cell[6474, 209, 271, 5, 34, "Subsubsection"],
Cell[6748, 216, 6979, 209, 474, "Text"],
Cell[CellGroupData[{
Cell[13752, 429, 393, 8, 37, "Input"],
Cell[14148, 439, 181, 4, 31, "Output"]
}, Open  ]],
Cell[14344, 446, 6471, 245, 803, "Text"],
Cell[20818, 693, 2511, 96, 289, "Text"],
Cell[23332, 791, 44, 1, 4, "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23425, 798, 100, 1, 90, "Title"],
Cell[23528, 801, 1022, 17, 182, "Text"],
Cell[24553, 820, 143, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[24721, 826, 1414, 31, 92, "Input"],
Cell[26138, 859, 301, 5, 31, "Output"],
Cell[26442, 866, 465, 10, 21, "Message"],
Cell[26910, 878, 223, 4, 31, "Output"],
Cell[27136, 884, 479, 10, 21, "Message"],
Cell[27618, 896, 477, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28132, 911, 680, 18, 72, "Input"],
Cell[28815, 931, 467, 10, 21, "Message"],
Cell[29285, 943, 200, 3, 31, "Output"],
Cell[29488, 948, 479, 10, 21, "Message"],
Cell[29970, 960, 479, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30486, 975, 683, 18, 72, "Input"],
Cell[31172, 995, 467, 10, 21, "Message"],
Cell[31642, 1007, 198, 3, 31, "Output"],
Cell[31843, 1012, 476, 10, 21, "Message"],
Cell[32322, 1024, 477, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32836, 1039, 683, 18, 72, "Input"],
Cell[33522, 1059, 465, 10, 21, "Message"],
Cell[33990, 1071, 224, 3, 31, "Output"],
Cell[34217, 1076, 477, 10, 21, "Message"],
Cell[34697, 1088, 477, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35211, 1103, 2990, 83, 172, "Input"],
Cell[38204, 1188, 596, 12, 21, "Message"],
Cell[38803, 1202, 598, 12, 21, "Message"],
Cell[39404, 1216, 598, 12, 21, "Message"],
Cell[40005, 1230, 527, 11, 21, "Message"],
Cell[40535, 1243, 596, 12, 21, "Message"],
Cell[41134, 1257, 598, 12, 21, "Message"],
Cell[41735, 1271, 596, 12, 21, "Message"],
Cell[42334, 1285, 528, 11, 21, "Message"],
Cell[42865, 1298, 596, 12, 21, "Message"],
Cell[43464, 1312, 598, 12, 21, "Message"],
Cell[44065, 1326, 598, 12, 21, "Message"],
Cell[44666, 1340, 530, 11, 21, "Message"],
Cell[45199, 1353, 598, 12, 21, "Message"],
Cell[45800, 1367, 598, 12, 21, "Message"],
Cell[46401, 1381, 596, 12, 21, "Message"],
Cell[47000, 1395, 530, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47567, 1411, 206, 5, 31, "Input"],
Cell[47776, 1418, 513, 10, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48326, 1433, 107, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[48458, 1438, 2632, 70, 112, "Input"],
Cell[51093, 1510, 513, 11, 21, "Message"],
Cell[51609, 1523, 513, 11, 21, "Message"],
Cell[52125, 1536, 512, 11, 21, "Message"],
Cell[52640, 1549, 513, 11, 21, "Message"],
Cell[53156, 1562, 52790, 1224, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105983, 2791, 2229, 57, 143, "Input"],
Cell[108215, 2850, 1192, 27, 247, "Output"]
}, Open  ]],
Cell[109422, 2880, 544, 11, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110003, 2896, 112, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[110140, 2901, 2105, 63, 112, "Input"],
Cell[112248, 2966, 513, 11, 21, "Message"],
Cell[112764, 2979, 513, 11, 21, "Message"],
Cell[113280, 2992, 513, 11, 21, "Message"],
Cell[113796, 3005, 515, 11, 21, "Message"],
Cell[114314, 3018, 2259, 42, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116610, 3065, 454, 11, 52, "Input"],
Cell[117067, 3078, 211, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117315, 3086, 2007, 48, 92, "Input"],
Cell[119325, 3136, 17839, 309, 228, "Output"],
Cell[137167, 3447, 17837, 309, 228, "Output"],
Cell[155007, 3758, 17837, 309, 228, "Output"],
Cell[172847, 4069, 17837, 309, 228, "Output"]
}, Open  ]],
Cell[190699, 4381, 224, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[190948, 4390, 2471, 71, 92, "Input"],
Cell[193422, 4463, 420, 10, 46, "Output"],
Cell[193845, 4475, 418, 10, 46, "Output"],
Cell[194266, 4487, 420, 10, 46, "Output"],
Cell[194689, 4499, 418, 10, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195144, 4514, 581, 13, 92, "Input"],
Cell[195728, 4529, 594, 17, 40, "Output"],
Cell[196325, 4548, 592, 17, 40, "Output"],
Cell[196920, 4567, 592, 17, 40, "Output"],
Cell[197515, 4586, 594, 17, 40, "Output"]
}, Open  ]],
Cell[198124, 4606, 207, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198368, 4615, 114, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[198507, 4620, 1997, 61, 112, "Input"],
Cell[200507, 4683, 515, 11, 21, "Message"],
Cell[201025, 4696, 655, 12, 21, "Message"],
Cell[201683, 4710, 655, 12, 21, "Message"],
Cell[202341, 4724, 653, 12, 21, "Message"],
Cell[202997, 4738, 527, 11, 21, "Message"],
Cell[203527, 4751, 87720, 2204, 1412, "Output"],
Cell[291250, 6957, 515, 11, 21, "Message"],
Cell[291768, 6970, 655, 12, 21, "Message"],
Cell[292426, 6984, 653, 12, 21, "Message"],
Cell[293082, 6998, 655, 12, 21, "Message"],
Cell[293740, 7012, 530, 11, 21, "Message"],
Cell[294273, 7025, 512, 11, 21, "Message"],
Cell[294788, 7038, 655, 12, 21, "Message"],
Cell[295446, 7052, 655, 12, 21, "Message"],
Cell[296104, 7066, 653, 12, 21, "Message"],
Cell[296760, 7080, 528, 11, 21, "Message"],
Cell[297291, 7093, 513, 11, 21, "Message"],
Cell[297807, 7106, 655, 12, 21, "Message"],
Cell[298465, 7120, 653, 12, 21, "Message"],
Cell[299121, 7134, 655, 12, 21, "Message"],
Cell[299779, 7148, 528, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300344, 7164, 1704, 47, 112, "Input"],
Cell[302051, 7213, 1018, 23, 529, "Output"],
Cell[303072, 7238, 1018, 23, 529, "Output"],
Cell[304093, 7263, 1018, 23, 529, "Output"],
Cell[305114, 7288, 10586, 181, 529, 652, 18, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315749, 7475, 251, 4, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[316025, 7483, 1971, 60, 92, "Input"],
Cell[317999, 7545, 515, 11, 21, "Message"],
Cell[318517, 7558, 653, 12, 21, "Message"],
Cell[319173, 7572, 653, 12, 21, "Message"],
Cell[319829, 7586, 653, 12, 21, "Message"],
Cell[320485, 7600, 530, 11, 21, "Message"],
Cell[321018, 7613, 87726, 2204, 1412, "Output"],
Cell[408747, 9819, 515, 11, 21, "Message"],
Cell[409265, 9832, 653, 12, 21, "Message"],
Cell[409921, 9846, 655, 12, 21, "Message"],
Cell[410579, 9860, 655, 12, 21, "Message"],
Cell[411237, 9874, 528, 11, 21, "Message"],
Cell[411768, 9887, 513, 11, 21, "Message"],
Cell[412284, 9900, 653, 12, 21, "Message"],
Cell[412940, 9914, 653, 12, 21, "Message"],
Cell[413596, 9928, 655, 12, 21, "Message"],
Cell[414254, 9942, 528, 11, 21, "Message"],
Cell[414785, 9955, 513, 11, 21, "Message"],
Cell[415301, 9968, 655, 12, 21, "Message"],
Cell[415959, 9982, 653, 12, 21, "Message"],
Cell[416615, 9996, 655, 12, 21, "Message"],
Cell[417273, 10010, 530, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417840, 10026, 1904, 51, 112, "Input"],
Cell[419747, 10079, 1080, 24, 673, "Output"]
}, Open  ]],
Cell[420842, 10106, 581, 11, 106, "Text"],
Cell[CellGroupData[{
Cell[421448, 10121, 2388, 66, 144, "Input"],
Cell[423839, 10189, 1093, 26, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424969, 10220, 2612, 69, 152, "Input"],
Cell[427584, 10291, 3348, 57, 73, "Message"],
Cell[430935, 10350, 3450, 60, 56, "Message"],
Cell[434388, 10412, 3453, 60, 56, "Message"],
Cell[437844, 10474, 532, 11, 21, "Message"],
Cell[438379, 10487, 3348, 57, 73, "Message"],
Cell[441730, 10546, 3451, 60, 56, "Message"],
Cell[445184, 10608, 3451, 60, 56, "Message"],
Cell[448638, 10670, 534, 11, 21, "Message"],
Cell[449175, 10683, 86382, 2053, 176, "Output"],
Cell[535560, 12738, 3350, 57, 73, "Message"],
Cell[538913, 12797, 3453, 60, 56, "Message"],
Cell[542369, 12859, 3453, 60, 56, "Message"],
Cell[545825, 12921, 534, 11, 21, "Message"],
Cell[546362, 12934, 568, 11, 21, "Message"],
Cell[546933, 12947, 81986, 2040, 2110, "Output"],
Cell[628922, 14989, 437, 9, 21, "Message"],
Cell[629362, 15000, 5431, 82, 147, "Message"],
Cell[634796, 15084, 437, 9, 21, "Message"],
Cell[635236, 15095, 5431, 82, 147, "Message"],
Cell[640670, 15179, 460, 10, 21, "Message"],
Cell[641133, 15191, 532, 11, 21, "Message"],
Cell[641668, 15204, 5518, 83, 147, "Message"],
Cell[647189, 15289, 533, 11, 21, "Message"],
Cell[647725, 15302, 1153, 25, 258, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648915, 15332, 114, 1, 34, "Subsubsection"],
Cell[649032, 15335, 317, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[649374, 15345, 3412, 100, 320, "Input"],
Cell[652789, 15447, 3350, 57, 73, "Message"],
Cell[656142, 15506, 3451, 60, 56, "Message"],
Cell[659596, 15568, 3451, 60, 56, "Message"],
Cell[663050, 15630, 534, 11, 21, "Message"],
Cell[663587, 15643, 5488, 82, 147, "Message"],
Cell[669078, 15727, 5307, 81, 148, "Message"],
Cell[674388, 15810, 5307, 81, 148, "Message"],
Cell[679698, 15893, 535, 11, 21, "Message"],
Cell[680236, 15906, 3348, 57, 73, "Message"],
Cell[683587, 15965, 3451, 60, 56, "Message"],
Cell[687041, 16027, 3451, 60, 56, "Message"],
Cell[690495, 16089, 532, 11, 21, "Message"],
Cell[691030, 16102, 5488, 82, 147, "Message"],
Cell[696521, 16186, 5307, 81, 148, "Message"],
Cell[701831, 16269, 5307, 81, 148, "Message"],
Cell[707141, 16352, 535, 11, 21, "Message"],
Cell[707679, 16365, 3350, 57, 73, "Message"],
Cell[711032, 16424, 3453, 60, 56, "Message"],
Cell[714488, 16486, 3453, 60, 56, "Message"],
Cell[717944, 16548, 532, 11, 21, "Message"],
Cell[718479, 16561, 5488, 82, 147, "Message"],
Cell[723970, 16645, 5305, 81, 148, "Message"],
Cell[729278, 16728, 5307, 81, 148, "Message"],
Cell[734588, 16811, 533, 11, 21, "Message"],
Cell[735124, 16824, 3347, 57, 73, "Message"],
Cell[738474, 16883, 5486, 82, 147, "Message"],
Cell[743963, 16967, 3451, 60, 56, "Message"],
Cell[747417, 17029, 5305, 81, 148, "Message"],
Cell[752725, 17112, 3451, 60, 56, "Message"],
Cell[756179, 17174, 534, 11, 21, "Message"],
Cell[756716, 17187, 5305, 81, 148, "Message"],
Cell[762024, 17270, 533, 11, 21, "Message"],
Cell[762560, 17283, 499, 10, 21, "Message"],
Cell[763062, 17295, 499, 10, 21, "Message"],
Cell[763564, 17307, 3350, 57, 73, "Message"],
Cell[766917, 17366, 5486, 82, 147, "Message"],
Cell[772406, 17450, 3453, 60, 56, "Message"],
Cell[775862, 17512, 5305, 81, 148, "Message"],
Cell[781170, 17595, 3453, 60, 56, "Message"],
Cell[784626, 17657, 532, 11, 21, "Message"],
Cell[785161, 17670, 5307, 81, 148, "Message"],
Cell[790471, 17753, 533, 11, 21, "Message"],
Cell[791007, 17766, 499, 10, 21, "Message"],
Cell[791509, 17778, 497, 10, 21, "Message"],
Cell[792009, 17790, 3350, 57, 73, "Message"],
Cell[795362, 17849, 5486, 82, 147, "Message"],
Cell[800851, 17933, 3453, 60, 56, "Message"],
Cell[804307, 17995, 5307, 81, 148, "Message"],
Cell[809617, 18078, 3451, 60, 56, "Message"],
Cell[813071, 18140, 534, 11, 21, "Message"],
Cell[813608, 18153, 5305, 81, 148, "Message"],
Cell[818916, 18236, 535, 11, 21, "Message"],
Cell[819454, 18249, 497, 10, 21, "Message"],
Cell[819954, 18261, 497, 10, 21, "Message"],
Cell[820454, 18273, 3350, 57, 73, "Message"],
Cell[823807, 18332, 5486, 82, 147, "Message"],
Cell[829296, 18416, 3453, 60, 56, "Message"],
Cell[832752, 18478, 5307, 81, 148, "Message"],
Cell[838062, 18561, 3451, 60, 56, "Message"],
Cell[841516, 18623, 532, 11, 21, "Message"],
Cell[842051, 18636, 5305, 81, 148, "Message"],
Cell[847359, 18719, 533, 11, 21, "Message"],
Cell[847895, 18732, 497, 10, 21, "Message"],
Cell[848395, 18744, 497, 10, 21, "Message"],
Cell[848895, 18756, 88896, 2064, 2141, "Output"],
Cell[937794, 20822, 3350, 57, 73, "Message"],
Cell[941147, 20881, 5488, 82, 147, "Message"],
Cell[946638, 20965, 3453, 60, 56, "Message"],
Cell[950094, 21027, 5307, 81, 148, "Message"],
Cell[955404, 21110, 3453, 60, 56, "Message"],
Cell[958860, 21172, 534, 11, 21, "Message"],
Cell[959397, 21185, 5307, 81, 148, "Message"],
Cell[964707, 21268, 535, 11, 21, "Message"],
Cell[965245, 21281, 497, 10, 21, "Message"],
Cell[965745, 21293, 497, 10, 21, "Message"],
Cell[966245, 21305, 88896, 2064, 2141, "Output"],
Cell[1055144, 23371, 3348, 57, 73, "Message"],
Cell[1058495, 23430, 5486, 82, 147, "Message"],
Cell[1063984, 23514, 3453, 60, 56, "Message"],
Cell[1067440, 23576, 5304, 81, 148, "Message"],
Cell[1072747, 23659, 3453, 60, 56, "Message"],
Cell[1076203, 23721, 532, 11, 21, "Message"],
Cell[1076738, 23734, 5305, 81, 148, "Message"],
Cell[1082046, 23817, 535, 11, 21, "Message"],
Cell[1082584, 23830, 497, 10, 21, "Message"],
Cell[1083084, 23842, 497, 10, 21, "Message"],
Cell[1083584, 23854, 88896, 2064, 2141, "Output"],
Cell[1172483, 25920, 3350, 57, 73, "Message"],
Cell[1175836, 25979, 5488, 82, 147, "Message"],
Cell[1181327, 26063, 3453, 60, 56, "Message"],
Cell[1184783, 26125, 5305, 81, 148, "Message"],
Cell[1190091, 26208, 3453, 60, 56, "Message"],
Cell[1193547, 26270, 534, 11, 21, "Message"],
Cell[1194084, 26283, 5307, 81, 148, "Message"],
Cell[1199394, 26366, 532, 11, 21, "Message"],
Cell[1199929, 26379, 497, 10, 21, "Message"],
Cell[1200429, 26391, 499, 10, 21, "Message"],
Cell[1200931, 26403, 499, 10, 21, "Message"],
Cell[1201433, 26415, 540, 11, 21, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1202022, 26432, 111, 1, 34, "Subsubsection"],
Cell[1202136, 26435, 683, 15, 147, "Text"],
Cell[CellGroupData[{
Cell[1202844, 26454, 1800, 50, 152, "Input"],
Cell[1204647, 26506, 87272, 1426, 453, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291968, 27938, 114, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[1292107, 27943, 1233, 33, 144, "Input"],
Cell[1293343, 27978, 160448, 2625, 615, "Output"]
}, Open  ]],
Cell[1453806, 30606, 243, 5, 49, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1454098, 30617, 119, 1, 62, "Subchapter"],
Cell[1454220, 30620, 1972, 60, 92, "Input"],
Cell[CellGroupData[{
Cell[1456217, 30684, 1845, 50, 112, "Input"],
Cell[1458065, 30736, 81618, 1338, 433, "Output"],
Cell[1539686, 32076, 82107, 1348, 433, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
