#include"Inc/Global.fx"
static const float2 dUV=1./TARGET_SIZE;cbuffer cbDiffusion:register( b1){float _BBoxSize;float _SliceThickness;float _TexelSize;float3 _ExtinctionCoeff;float3 _Albedo;float3 _Phase0,_Phase1,_Phase2;float3 _InternalEmissive;};cbuffer cbPass:register( b2){float _PassIndex;float _CurrentZ;float _NextZ;};Texture2D _TexZBuffer:register(t0),_TexIrradiance:register(t1);struct VS_IN{float4 __Position:SV_POSITION;};VS_IN VS(VS_IN f){return f;}
#define SAMPLE( x,y,i)I+=SampleIrradiance( UV,float2( x,y),_Phase
#
#i);
float3 E(float2 f,float2 x,float3 c){float3 V=TEX2DLOD(_TexIrradiance,LinearMirror,f+x*dUV,0.).xyz,y=exp(-_ExtinctionCoeff*length(x));return c*y*V;}float4 PS(VS_IN f):SV_TARGET0{float2 V=f.__Position.xy*dUV;float4 c=TEX2DLOD(_TexZBuffer,LinearClamp,V,0.);clip(_NextZ-c.x);clip(c.y-_CurrentZ);if(_CurrentZ<=c.x)return 1.;if(_CurrentZ>c.z&&_CurrentZ<c.w)return float4(_InternalEmissive,0.f);float3 x=exp(-_ExtinctionCoeff*_SliceThickness),y=0.;SAMPLE(-1,-1,1);SAMPLE(0,-1,1);SAMPLE(1,-1,1);SAMPLE(-1,0,1);SAMPLE(0,0,0);SAMPLE(1,0,1);SAMPLE(-1,1,1);SAMPLE(0,1,1);SAMPLE(1,1,1);return float4(x*y,0.);}